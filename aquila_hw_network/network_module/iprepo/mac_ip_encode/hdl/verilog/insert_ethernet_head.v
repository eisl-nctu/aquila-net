// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module insert_ethernet_head (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        dataStreamBuffer4_V_dout,
        dataStreamBuffer4_V_empty_n,
        dataStreamBuffer4_V_read,
        headerFifo_V_dout,
        headerFifo_V_empty_n,
        headerFifo_V_read,
        m_axis_ip_TREADY,
        m_axis_ip_TDATA,
        m_axis_ip_TVALID,
        m_axis_ip_TKEEP,
        m_axis_ip_TLAST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;
parameter    ap_const_lv64_0 = 64'd0;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [72:0] dataStreamBuffer4_V_dout;
input   dataStreamBuffer4_V_empty_n;
output   dataStreamBuffer4_V_read;
input  [128:0] headerFifo_V_dout;
input   headerFifo_V_empty_n;
output   headerFifo_V_read;
input   m_axis_ip_TREADY;
output  [63:0] m_axis_ip_TDATA;
output   m_axis_ip_TVALID;
output  [7:0] m_axis_ip_TKEEP;
output  [0:0] m_axis_ip_TLAST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg dataStreamBuffer4_V_read;
reg headerFifo_V_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire   [0:0] grp_nbreadreq_fu_114_p3;
reg    ap_predicate_op8_read_state1;
reg    ap_predicate_op14_read_state1;
wire   [0:0] grp_nbreadreq_fu_128_p3;
reg    ap_predicate_op22_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    dataOut_V_data_V_1_ack_in;
reg   [1:0] ge_state_load_reg_872;
reg   [1:0] ge_state_load_reg_872_pp0_iter1_reg;
reg   [0:0] tmp_5_reg_876;
reg   [0:0] tmp_5_reg_876_pp0_iter1_reg;
reg    ap_predicate_op110_write_state3;
reg   [0:0] tmp_4_reg_890;
reg   [0:0] tmp_4_reg_890_pp0_iter1_reg;
reg    ap_predicate_op123_write_state3;
reg   [0:0] tmp_reg_905;
reg   [0:0] tmp_reg_905_pp0_iter1_reg;
reg    ap_predicate_op134_write_state3;
reg    ap_block_state3_io;
wire    dataOut_V_data_V_1_ack_out;
reg   [1:0] dataOut_V_data_V_1_state;
wire    dataOut_V_keep_V_1_ack_out;
reg   [1:0] dataOut_V_keep_V_1_state;
wire    dataOut_V_last_V_1_ack_out;
reg   [1:0] dataOut_V_last_V_1_state;
reg    ap_block_state4_pp0_stage0_iter3;
reg   [1:0] ge_state_load_reg_872_pp0_iter2_reg;
reg   [0:0] tmp_5_reg_876_pp0_iter2_reg;
reg    ap_predicate_op139_write_state4;
reg   [0:0] tmp_4_reg_890_pp0_iter2_reg;
reg    ap_predicate_op143_write_state4;
reg   [0:0] tmp_reg_905_pp0_iter2_reg;
reg    ap_predicate_op146_write_state4;
reg    ap_block_state4_io;
reg    ap_block_pp0_stage0_11001;
reg   [63:0] dataOut_V_data_V_1_data_in;
reg   [63:0] dataOut_V_data_V_1_data_out;
reg    dataOut_V_data_V_1_vld_in;
wire    dataOut_V_data_V_1_vld_out;
reg   [63:0] dataOut_V_data_V_1_payload_A;
reg   [63:0] dataOut_V_data_V_1_payload_B;
reg    dataOut_V_data_V_1_sel_rd;
reg    dataOut_V_data_V_1_sel_wr;
wire    dataOut_V_data_V_1_sel;
wire    dataOut_V_data_V_1_load_A;
wire    dataOut_V_data_V_1_load_B;
wire    dataOut_V_data_V_1_state_cmp_full;
reg   [7:0] dataOut_V_keep_V_1_data_in;
reg   [7:0] dataOut_V_keep_V_1_data_out;
reg    dataOut_V_keep_V_1_vld_in;
wire    dataOut_V_keep_V_1_vld_out;
wire    dataOut_V_keep_V_1_ack_in;
reg   [7:0] dataOut_V_keep_V_1_payload_A;
reg   [7:0] dataOut_V_keep_V_1_payload_B;
reg    dataOut_V_keep_V_1_sel_rd;
reg    dataOut_V_keep_V_1_sel_wr;
wire    dataOut_V_keep_V_1_sel;
wire    dataOut_V_keep_V_1_load_A;
wire    dataOut_V_keep_V_1_load_B;
wire    dataOut_V_keep_V_1_state_cmp_full;
reg   [0:0] dataOut_V_last_V_1_data_in;
reg   [0:0] dataOut_V_last_V_1_data_out;
reg    dataOut_V_last_V_1_vld_in;
wire    dataOut_V_last_V_1_vld_out;
wire    dataOut_V_last_V_1_ack_in;
reg   [0:0] dataOut_V_last_V_1_payload_A;
reg   [0:0] dataOut_V_last_V_1_payload_B;
reg    dataOut_V_last_V_1_sel_rd;
reg    dataOut_V_last_V_1_sel_wr;
wire    dataOut_V_last_V_1_sel;
wire    dataOut_V_last_V_1_load_A;
wire    dataOut_V_last_V_1_load_B;
wire    dataOut_V_last_V_1_state_cmp_full;
reg   [1:0] ge_state;
reg   [111:0] header_header_V;
reg   [15:0] header_idx;
reg    m_axis_ip_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    headerFifo_V_blk_n;
reg    dataStreamBuffer4_V_blk_n;
reg   [7:0] reg_175;
reg   [7:0] reg_175_pp0_iter1_reg;
wire   [63:0] tmp_data_V_3_fu_184_p1;
reg   [63:0] tmp_data_V_3_reg_880;
reg   [63:0] tmp_data_V_3_reg_880_pp0_iter1_reg;
wire   [0:0] grp_fu_167_p3;
reg   [0:0] tmp_last_V_3_reg_885;
reg   [0:0] tmp_last_V_3_reg_885_pp0_iter1_reg;
wire   [63:0] tmp_data_V_fu_194_p1;
reg   [63:0] tmp_data_V_reg_894;
reg   [63:0] tmp_data_V_reg_894_pp0_iter1_reg;
reg   [0:0] tmp_last_V_reg_900;
reg   [0:0] tmp_last_V_reg_900_pp0_iter1_reg;
reg   [128:0] tmp60_reg_909;
reg   [15:0] packetHeader_idx_rea_reg_915;
reg   [111:0] p_Val2_s_reg_922;
reg   [0:0] tmp_8_reg_928;
reg   [0:0] tmp_9_reg_933;
wire   [0:0] icmp_ln76_1_fu_294_p2;
reg   [0:0] icmp_ln76_1_reg_938;
wire   [6:0] sub_ln647_10_fu_376_p2;
reg   [6:0] sub_ln647_10_reg_943;
wire   [111:0] lshr_ln647_4_fu_386_p2;
reg   [111:0] lshr_ln647_4_reg_948;
wire   [6:0] sub_ln647_13_fu_470_p2;
reg   [6:0] sub_ln647_13_reg_953;
wire   [111:0] lshr_ln647_6_fu_480_p2;
reg   [111:0] lshr_ln647_6_reg_958;
wire   [0:0] and_ln82_1_fu_500_p2;
reg   [0:0] and_ln82_1_reg_963;
wire   [6:0] sub_ln647_3_fu_616_p2;
reg   [6:0] sub_ln647_3_reg_968;
wire   [111:0] lshr_ln647_fu_626_p2;
reg   [111:0] lshr_ln647_reg_973;
wire   [6:0] sub_ln647_6_fu_706_p2;
reg   [6:0] sub_ln647_6_reg_978;
wire   [111:0] lshr_ln647_2_fu_716_p2;
reg   [111:0] lshr_ln647_2_reg_983;
wire   [0:0] and_ln82_fu_735_p2;
reg   [0:0] and_ln82_reg_988;
wire   [63:0] tmp_data_V_2_fu_808_p3;
wire   [63:0] currWord_data_V_fu_864_p3;
reg    ap_block_pp0_stage0_subdone;
wire   [1:0] select_ln250_fu_198_p3;
wire   [15:0] select_ln82_2_fu_506_p3;
wire   [15:0] select_ln82_fu_741_p3;
reg    ap_block_pp0_stage0_01001;
wire   [21:0] Lo_assign_1_fu_276_p3;
wire   [22:0] zext_ln76_1_fu_284_p1;
wire   [22:0] add_ln76_1_fu_288_p2;
wire   [21:0] or_ln78_1_fu_300_p2;
wire   [0:0] trunc_ln76_1_fu_272_p1;
wire   [6:0] tmp_15_fu_312_p3;
wire   [6:0] trunc_ln647_1_fu_320_p1;
wire   [0:0] icmp_ln647_2_fu_306_p2;
wire   [6:0] sub_ln647_7_fu_334_p2;
wire   [6:0] sub_ln647_9_fu_346_p2;
reg   [111:0] tmp_16_fu_324_p4;
wire   [6:0] sub_ln647_8_fu_340_p2;
wire   [6:0] select_ln647_6_fu_352_p3;
wire   [6:0] select_ln647_8_fu_368_p3;
wire   [111:0] select_ln647_7_fu_360_p3;
wire   [111:0] zext_ln647_4_fu_382_p1;
wire   [0:0] trunc_ln76_fu_268_p1;
wire   [6:0] tmp_17_fu_410_p3;
wire   [0:0] icmp_ln647_3_fu_404_p2;
wire   [6:0] add_ln647_1_fu_428_p2;
wire   [6:0] sub_ln647_12_fu_440_p2;
reg   [111:0] tmp_18_fu_418_p4;
wire   [6:0] sub_ln647_11_fu_434_p2;
wire   [6:0] select_ln647_9_fu_446_p3;
wire   [6:0] select_ln647_11_fu_462_p3;
wire   [111:0] select_ln647_10_fu_454_p3;
wire   [111:0] zext_ln647_6_fu_476_p1;
wire   [15:0] add_ln79_1_fu_392_p2;
wire   [0:0] icmp_ln82_1_fu_398_p2;
wire   [0:0] xor_ln76_1_fu_494_p2;
wire   [15:0] select_ln76_1_fu_486_p3;
wire   [21:0] Lo_assign_fu_520_p3;
wire   [22:0] zext_ln76_fu_527_p1;
wire   [22:0] add_ln76_fu_531_p2;
wire   [21:0] or_ln78_fu_543_p2;
wire   [6:0] tmp_10_fu_555_p3;
wire   [6:0] trunc_ln647_fu_562_p1;
wire   [0:0] icmp_ln647_fu_549_p2;
wire   [6:0] sub_ln647_fu_575_p2;
wire   [6:0] sub_ln647_2_fu_587_p2;
reg   [111:0] tmp_11_fu_566_p4;
wire   [6:0] sub_ln647_1_fu_581_p2;
wire   [6:0] select_ln647_fu_593_p3;
wire   [6:0] select_ln647_2_fu_608_p3;
wire   [111:0] select_ln647_1_fu_601_p3;
wire   [111:0] zext_ln647_fu_622_p1;
wire   [6:0] tmp_12_fu_649_p3;
wire   [0:0] icmp_ln647_1_fu_643_p2;
wire   [6:0] add_ln647_fu_665_p2;
wire   [6:0] sub_ln647_5_fu_677_p2;
reg   [111:0] tmp_13_fu_656_p4;
wire   [6:0] sub_ln647_4_fu_671_p2;
wire   [6:0] select_ln647_3_fu_683_p3;
wire   [6:0] select_ln647_5_fu_698_p3;
wire   [111:0] select_ln647_4_fu_691_p3;
wire   [111:0] zext_ln647_2_fu_712_p1;
wire   [0:0] icmp_ln76_fu_537_p2;
wire   [15:0] add_ln79_fu_632_p2;
wire   [0:0] icmp_ln82_fu_637_p2;
wire   [0:0] xor_ln76_fu_729_p2;
wire   [15:0] select_ln76_fu_722_p3;
wire   [111:0] zext_ln647_5_fu_755_p1;
wire   [111:0] lshr_ln647_5_fu_758_p2;
wire   [111:0] p_Result_11_fu_764_p2;
wire   [111:0] zext_ln647_7_fu_773_p1;
wire   [111:0] lshr_ln647_7_fu_776_p2;
wire   [111:0] p_Result_12_fu_782_p2;
wire   [47:0] trunc_ln215_1_fu_787_p1;
wire   [63:0] trunc_ln364_1_fu_769_p1;
wire   [63:0] p_Result_6_fu_791_p5;
wire   [63:0] select_ln76_2_fu_802_p3;
wire   [111:0] zext_ln647_1_fu_816_p1;
wire   [111:0] lshr_ln647_1_fu_819_p2;
wire   [111:0] p_Result_9_fu_825_p2;
wire   [111:0] zext_ln647_3_fu_834_p1;
wire   [111:0] lshr_ln647_3_fu_837_p2;
wire   [111:0] p_Result_10_fu_843_p2;
wire   [47:0] trunc_ln215_fu_848_p1;
wire   [63:0] p_Result_s_fu_852_p5;
wire   [63:0] trunc_ln364_fu_830_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_459;
reg    ap_condition_184;
reg    ap_condition_471;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 dataOut_V_data_V_1_state = 2'd0;
#0 dataOut_V_keep_V_1_state = 2'd0;
#0 dataOut_V_last_V_1_state = 2'd0;
#0 dataOut_V_data_V_1_sel_rd = 1'b0;
#0 dataOut_V_data_V_1_sel_wr = 1'b0;
#0 dataOut_V_keep_V_1_sel_rd = 1'b0;
#0 dataOut_V_keep_V_1_sel_wr = 1'b0;
#0 dataOut_V_last_V_1_sel_rd = 1'b0;
#0 dataOut_V_last_V_1_sel_wr = 1'b0;
#0 ge_state = 2'd0;
#0 header_header_V = 112'd0;
#0 header_idx = 16'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        dataOut_V_data_V_1_sel_rd <= 1'b0;
    end else begin
        if (((dataOut_V_data_V_1_vld_out == 1'b1) & (dataOut_V_data_V_1_ack_out == 1'b1))) begin
            dataOut_V_data_V_1_sel_rd <= ~dataOut_V_data_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        dataOut_V_data_V_1_sel_wr <= 1'b0;
    end else begin
        if (((dataOut_V_data_V_1_ack_in == 1'b1) & (dataOut_V_data_V_1_vld_in == 1'b1))) begin
            dataOut_V_data_V_1_sel_wr <= ~dataOut_V_data_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        dataOut_V_data_V_1_state <= 2'd0;
    end else begin
        if ((((dataOut_V_data_V_1_vld_in == 1'b0) & (dataOut_V_data_V_1_ack_out == 1'b1) & (dataOut_V_data_V_1_state == 2'd3)) | ((dataOut_V_data_V_1_state == 2'd2) & (dataOut_V_data_V_1_vld_in == 1'b0)))) begin
            dataOut_V_data_V_1_state <= 2'd2;
        end else if ((((dataOut_V_data_V_1_state == 2'd1) & (m_axis_ip_TREADY == 1'b0)) | ((m_axis_ip_TREADY == 1'b0) & (dataOut_V_data_V_1_vld_in == 1'b1) & (dataOut_V_data_V_1_state == 2'd3)))) begin
            dataOut_V_data_V_1_state <= 2'd1;
        end else if ((((dataOut_V_data_V_1_state == 2'd1) & (dataOut_V_data_V_1_ack_out == 1'b1)) | (~((dataOut_V_data_V_1_vld_in == 1'b0) & (dataOut_V_data_V_1_ack_out == 1'b1)) & ~((m_axis_ip_TREADY == 1'b0) & (dataOut_V_data_V_1_vld_in == 1'b1)) & (dataOut_V_data_V_1_state == 2'd3)) | ((dataOut_V_data_V_1_state == 2'd2) & (dataOut_V_data_V_1_vld_in == 1'b1)))) begin
            dataOut_V_data_V_1_state <= 2'd3;
        end else begin
            dataOut_V_data_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        dataOut_V_keep_V_1_sel_rd <= 1'b0;
    end else begin
        if (((dataOut_V_keep_V_1_vld_out == 1'b1) & (dataOut_V_keep_V_1_ack_out == 1'b1))) begin
            dataOut_V_keep_V_1_sel_rd <= ~dataOut_V_keep_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        dataOut_V_keep_V_1_sel_wr <= 1'b0;
    end else begin
        if (((dataOut_V_keep_V_1_ack_in == 1'b1) & (dataOut_V_keep_V_1_vld_in == 1'b1))) begin
            dataOut_V_keep_V_1_sel_wr <= ~dataOut_V_keep_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        dataOut_V_keep_V_1_state <= 2'd0;
    end else begin
        if ((((dataOut_V_keep_V_1_vld_in == 1'b0) & (dataOut_V_keep_V_1_ack_out == 1'b1) & (dataOut_V_keep_V_1_state == 2'd3)) | ((dataOut_V_keep_V_1_state == 2'd2) & (dataOut_V_keep_V_1_vld_in == 1'b0)))) begin
            dataOut_V_keep_V_1_state <= 2'd2;
        end else if ((((dataOut_V_keep_V_1_state == 2'd1) & (m_axis_ip_TREADY == 1'b0)) | ((m_axis_ip_TREADY == 1'b0) & (dataOut_V_keep_V_1_vld_in == 1'b1) & (dataOut_V_keep_V_1_state == 2'd3)))) begin
            dataOut_V_keep_V_1_state <= 2'd1;
        end else if ((((dataOut_V_keep_V_1_state == 2'd1) & (dataOut_V_keep_V_1_ack_out == 1'b1)) | (~((dataOut_V_keep_V_1_vld_in == 1'b0) & (dataOut_V_keep_V_1_ack_out == 1'b1)) & ~((m_axis_ip_TREADY == 1'b0) & (dataOut_V_keep_V_1_vld_in == 1'b1)) & (dataOut_V_keep_V_1_state == 2'd3)) | ((dataOut_V_keep_V_1_state == 2'd2) & (dataOut_V_keep_V_1_vld_in == 1'b1)))) begin
            dataOut_V_keep_V_1_state <= 2'd3;
        end else begin
            dataOut_V_keep_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        dataOut_V_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((dataOut_V_last_V_1_vld_out == 1'b1) & (dataOut_V_last_V_1_ack_out == 1'b1))) begin
            dataOut_V_last_V_1_sel_rd <= ~dataOut_V_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        dataOut_V_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((dataOut_V_last_V_1_ack_in == 1'b1) & (dataOut_V_last_V_1_vld_in == 1'b1))) begin
            dataOut_V_last_V_1_sel_wr <= ~dataOut_V_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        dataOut_V_last_V_1_state <= 2'd0;
    end else begin
        if ((((dataOut_V_last_V_1_vld_in == 1'b0) & (dataOut_V_last_V_1_ack_out == 1'b1) & (dataOut_V_last_V_1_state == 2'd3)) | ((dataOut_V_last_V_1_state == 2'd2) & (dataOut_V_last_V_1_vld_in == 1'b0)))) begin
            dataOut_V_last_V_1_state <= 2'd2;
        end else if ((((dataOut_V_last_V_1_state == 2'd1) & (m_axis_ip_TREADY == 1'b0)) | ((m_axis_ip_TREADY == 1'b0) & (dataOut_V_last_V_1_vld_in == 1'b1) & (dataOut_V_last_V_1_state == 2'd3)))) begin
            dataOut_V_last_V_1_state <= 2'd1;
        end else if ((((dataOut_V_last_V_1_state == 2'd1) & (dataOut_V_last_V_1_ack_out == 1'b1)) | (~((dataOut_V_last_V_1_vld_in == 1'b0) & (dataOut_V_last_V_1_ack_out == 1'b1)) & ~((m_axis_ip_TREADY == 1'b0) & (dataOut_V_last_V_1_vld_in == 1'b1)) & (dataOut_V_last_V_1_state == 2'd3)) | ((dataOut_V_last_V_1_state == 2'd2) & (dataOut_V_last_V_1_vld_in == 1'b1)))) begin
            dataOut_V_last_V_1_state <= 2'd3;
        end else begin
            dataOut_V_last_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_184)) begin
        if (((grp_nbreadreq_fu_128_p3 == 1'd1) & (ge_state == 2'd0))) begin
            ge_state <= 2'd1;
        end else if (((grp_nbreadreq_fu_114_p3 == 1'd1) & (ge_state == 2'd1))) begin
            ge_state <= select_ln250_fu_198_p3;
        end else if ((1'b1 == ap_condition_459)) begin
            ge_state <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_471)) begin
        if (((ge_state_load_reg_872 == 2'd0) & (tmp_reg_905 == 1'd1))) begin
            header_idx <= select_ln82_fu_741_p3;
        end else if (((ge_state_load_reg_872 == 2'd1) & (tmp_4_reg_890 == 1'd1))) begin
            header_idx <= select_ln82_2_fu_506_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ge_state_load_reg_872 == 2'd1) & (tmp_4_reg_890 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln82_1_reg_963 <= and_ln82_1_fu_500_p2;
        icmp_ln76_1_reg_938 <= icmp_ln76_1_fu_294_p2;
        lshr_ln647_4_reg_948 <= lshr_ln647_4_fu_386_p2;
        lshr_ln647_6_reg_958 <= lshr_ln647_6_fu_480_p2;
        sub_ln647_10_reg_943[6 : 1] <= sub_ln647_10_fu_376_p2[6 : 1];
        sub_ln647_13_reg_953[6 : 1] <= sub_ln647_13_fu_470_p2[6 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((ge_state_load_reg_872 == 2'd0) & (tmp_reg_905 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln82_reg_988 <= and_ln82_fu_735_p2;
        lshr_ln647_2_reg_983 <= lshr_ln647_2_fu_716_p2;
        lshr_ln647_reg_973 <= lshr_ln647_fu_626_p2;
        sub_ln647_3_reg_968[6 : 1] <= sub_ln647_3_fu_616_p2[6 : 1];
        sub_ln647_6_reg_978[6 : 1] <= sub_ln647_6_fu_706_p2[6 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((dataOut_V_data_V_1_load_A == 1'b1)) begin
        dataOut_V_data_V_1_payload_A <= dataOut_V_data_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((dataOut_V_data_V_1_load_B == 1'b1)) begin
        dataOut_V_data_V_1_payload_B <= dataOut_V_data_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((dataOut_V_keep_V_1_load_A == 1'b1)) begin
        dataOut_V_keep_V_1_payload_A <= dataOut_V_keep_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((dataOut_V_keep_V_1_load_B == 1'b1)) begin
        dataOut_V_keep_V_1_payload_B <= dataOut_V_keep_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((dataOut_V_last_V_1_load_A == 1'b1)) begin
        dataOut_V_last_V_1_payload_A <= dataOut_V_last_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((dataOut_V_last_V_1_load_B == 1'b1)) begin
        dataOut_V_last_V_1_payload_B <= dataOut_V_last_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ge_state_load_reg_872 <= ge_state;
        ge_state_load_reg_872_pp0_iter1_reg <= ge_state_load_reg_872;
        reg_175_pp0_iter1_reg <= reg_175;
        tmp_4_reg_890_pp0_iter1_reg <= tmp_4_reg_890;
        tmp_5_reg_876_pp0_iter1_reg <= tmp_5_reg_876;
        tmp_data_V_3_reg_880_pp0_iter1_reg <= tmp_data_V_3_reg_880;
        tmp_data_V_reg_894_pp0_iter1_reg <= tmp_data_V_reg_894;
        tmp_last_V_3_reg_885_pp0_iter1_reg <= tmp_last_V_3_reg_885;
        tmp_last_V_reg_900_pp0_iter1_reg <= tmp_last_V_reg_900;
        tmp_reg_905_pp0_iter1_reg <= tmp_reg_905;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ge_state_load_reg_872_pp0_iter2_reg <= ge_state_load_reg_872_pp0_iter1_reg;
        tmp_4_reg_890_pp0_iter2_reg <= tmp_4_reg_890_pp0_iter1_reg;
        tmp_5_reg_876_pp0_iter2_reg <= tmp_5_reg_876_pp0_iter1_reg;
        tmp_reg_905_pp0_iter2_reg <= tmp_reg_905_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_128_p3 == 1'd1) & (ge_state == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        header_header_V <= {{headerFifo_V_dout[128:17]}};
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_128_p3 == 1'd1) & (ge_state == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_s_reg_922 <= {{headerFifo_V_dout[128:17]}};
        packetHeader_idx_rea_reg_915 <= {{headerFifo_V_dout[16:1]}};
        tmp_8_reg_928 <= headerFifo_V_dout[32'd1];
        tmp_9_reg_933 <= headerFifo_V_dout[32'd1];
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_nbreadreq_fu_114_p3 == 1'd1) & (ge_state == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((grp_nbreadreq_fu_114_p3 == 1'd1) & (ge_state == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_175 <= {{dataStreamBuffer4_V_dout[71:64]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op22_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp60_reg_909 <= headerFifo_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((ge_state == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_4_reg_890 <= grp_nbreadreq_fu_114_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ge_state == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_5_reg_876 <= grp_nbreadreq_fu_114_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_114_p3 == 1'd1) & (ge_state == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_V_3_reg_880 <= tmp_data_V_3_fu_184_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_114_p3 == 1'd1) & (ge_state == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_V_reg_894 <= tmp_data_V_fu_194_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_114_p3 == 1'd1) & (ge_state == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_last_V_3_reg_885 <= dataStreamBuffer4_V_dout[32'd72];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_114_p3 == 1'd1) & (ge_state == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_last_V_reg_900 <= dataStreamBuffer4_V_dout[32'd72];
    end
end

always @ (posedge ap_clk) begin
    if (((ge_state == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_reg_905 <= grp_nbreadreq_fu_128_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op134_write_state3 == 1'b1)) begin
            dataOut_V_data_V_1_data_in = currWord_data_V_fu_864_p3;
        end else if ((ap_predicate_op123_write_state3 == 1'b1)) begin
            dataOut_V_data_V_1_data_in = tmp_data_V_2_fu_808_p3;
        end else if ((ap_predicate_op110_write_state3 == 1'b1)) begin
            dataOut_V_data_V_1_data_in = tmp_data_V_3_reg_880_pp0_iter1_reg;
        end else begin
            dataOut_V_data_V_1_data_in = 'bx;
        end
    end else begin
        dataOut_V_data_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((dataOut_V_data_V_1_sel == 1'b1)) begin
        dataOut_V_data_V_1_data_out = dataOut_V_data_V_1_payload_B;
    end else begin
        dataOut_V_data_V_1_data_out = dataOut_V_data_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op110_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op134_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op123_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        dataOut_V_data_V_1_vld_in = 1'b1;
    end else begin
        dataOut_V_data_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op134_write_state3 == 1'b1))) begin
        dataOut_V_keep_V_1_data_in = 8'd255;
    end else if ((((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op110_write_state3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op123_write_state3 == 1'b1)))) begin
        dataOut_V_keep_V_1_data_in = reg_175_pp0_iter1_reg;
    end else begin
        dataOut_V_keep_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((dataOut_V_keep_V_1_sel == 1'b1)) begin
        dataOut_V_keep_V_1_data_out = dataOut_V_keep_V_1_payload_B;
    end else begin
        dataOut_V_keep_V_1_data_out = dataOut_V_keep_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op110_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op134_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op123_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        dataOut_V_keep_V_1_vld_in = 1'b1;
    end else begin
        dataOut_V_keep_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op134_write_state3 == 1'b1)) begin
            dataOut_V_last_V_1_data_in = 1'd0;
        end else if ((ap_predicate_op123_write_state3 == 1'b1)) begin
            dataOut_V_last_V_1_data_in = tmp_last_V_reg_900_pp0_iter1_reg;
        end else if ((ap_predicate_op110_write_state3 == 1'b1)) begin
            dataOut_V_last_V_1_data_in = tmp_last_V_3_reg_885_pp0_iter1_reg;
        end else begin
            dataOut_V_last_V_1_data_in = 'bx;
        end
    end else begin
        dataOut_V_last_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((dataOut_V_last_V_1_sel == 1'b1)) begin
        dataOut_V_last_V_1_data_out = dataOut_V_last_V_1_payload_B;
    end else begin
        dataOut_V_last_V_1_data_out = dataOut_V_last_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op110_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op134_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op123_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        dataOut_V_last_V_1_vld_in = 1'b1;
    end else begin
        dataOut_V_last_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op14_read_state1 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op8_read_state1 == 1'b1)))) begin
        dataStreamBuffer4_V_blk_n = dataStreamBuffer4_V_empty_n;
    end else begin
        dataStreamBuffer4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op14_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op8_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        dataStreamBuffer4_V_read = 1'b1;
    end else begin
        dataStreamBuffer4_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op22_read_state1 == 1'b1))) begin
        headerFifo_V_blk_n = headerFifo_V_empty_n;
    end else begin
        headerFifo_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op22_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        headerFifo_V_read = 1'b1;
    end else begin
        headerFifo_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op110_write_state3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_predicate_op146_write_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_predicate_op143_write_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_predicate_op139_write_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op134_write_state3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op123_write_state3 == 1'b1)))) begin
        m_axis_ip_TDATA_blk_n = dataOut_V_data_V_1_state[1'd1];
    end else begin
        m_axis_ip_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Lo_assign_1_fu_276_p3 = {{header_idx}, {6'd0}};

assign Lo_assign_fu_520_p3 = {{packetHeader_idx_rea_reg_915}, {6'd0}};

assign add_ln647_1_fu_428_p2 = (tmp_17_fu_410_p3 + 7'd17);

assign add_ln647_fu_665_p2 = (tmp_12_fu_649_p3 + 7'd17);

assign add_ln76_1_fu_288_p2 = (zext_ln76_1_fu_284_p1 + 23'd64);

assign add_ln76_fu_531_p2 = (zext_ln76_fu_527_p1 + 23'd64);

assign add_ln79_1_fu_392_p2 = (header_idx + 16'd1);

assign add_ln79_fu_632_p2 = (packetHeader_idx_rea_reg_915 + 16'd1);

assign and_ln82_1_fu_500_p2 = (xor_ln76_1_fu_494_p2 & icmp_ln82_1_fu_398_p2);

assign and_ln82_fu_735_p2 = (xor_ln76_fu_729_p2 & icmp_ln82_fu_637_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((headerFifo_V_empty_n == 1'b0) & (ap_predicate_op22_read_state1 == 1'b1)) | ((dataStreamBuffer4_V_empty_n == 1'b0) & (ap_predicate_op14_read_state1 == 1'b1)) | ((dataStreamBuffer4_V_empty_n == 1'b0) & (ap_predicate_op8_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((dataOut_V_last_V_1_state == 2'd1) | (dataOut_V_keep_V_1_state == 2'd1) | (dataOut_V_data_V_1_state == 2'd1) | ((m_axis_ip_TREADY == 1'b0) & (dataOut_V_last_V_1_state == 2'd3)) | ((m_axis_ip_TREADY == 1'b0) & (dataOut_V_keep_V_1_state == 2'd3)) | ((m_axis_ip_TREADY == 1'b0) & (dataOut_V_data_V_1_state == 2'd3)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((headerFifo_V_empty_n == 1'b0) & (ap_predicate_op22_read_state1 == 1'b1)) | ((dataStreamBuffer4_V_empty_n == 1'b0) & (ap_predicate_op14_read_state1 == 1'b1)) | ((dataStreamBuffer4_V_empty_n == 1'b0) & (ap_predicate_op8_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((dataOut_V_last_V_1_state == 2'd1) | (dataOut_V_keep_V_1_state == 2'd1) | (dataOut_V_data_V_1_state == 2'd1) | (1'b1 == ap_block_state4_io) | ((m_axis_ip_TREADY == 1'b0) & (dataOut_V_last_V_1_state == 2'd3)) | ((m_axis_ip_TREADY == 1'b0) & (dataOut_V_keep_V_1_state == 2'd3)) | ((m_axis_ip_TREADY == 1'b0) & (dataOut_V_data_V_1_state == 2'd3)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((headerFifo_V_empty_n == 1'b0) & (ap_predicate_op22_read_state1 == 1'b1)) | ((dataStreamBuffer4_V_empty_n == 1'b0) & (ap_predicate_op14_read_state1 == 1'b1)) | ((dataStreamBuffer4_V_empty_n == 1'b0) & (ap_predicate_op8_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((dataOut_V_last_V_1_state == 2'd1) | (dataOut_V_keep_V_1_state == 2'd1) | (dataOut_V_data_V_1_state == 2'd1) | (1'b1 == ap_block_state4_io) | ((m_axis_ip_TREADY == 1'b0) & (dataOut_V_last_V_1_state == 2'd3)) | ((m_axis_ip_TREADY == 1'b0) & (dataOut_V_keep_V_1_state == 2'd3)) | ((m_axis_ip_TREADY == 1'b0) & (dataOut_V_data_V_1_state == 2'd3)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((headerFifo_V_empty_n == 1'b0) & (ap_predicate_op22_read_state1 == 1'b1)) | ((dataStreamBuffer4_V_empty_n == 1'b0) & (ap_predicate_op14_read_state1 == 1'b1)) | ((dataStreamBuffer4_V_empty_n == 1'b0) & (ap_predicate_op8_read_state1 == 1'b1)));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = (((dataOut_V_data_V_1_ack_in == 1'b0) & (ap_predicate_op110_write_state3 == 1'b1)) | ((dataOut_V_data_V_1_ack_in == 1'b0) & (ap_predicate_op134_write_state3 == 1'b1)) | ((dataOut_V_data_V_1_ack_in == 1'b0) & (ap_predicate_op123_write_state3 == 1'b1)));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = (((dataOut_V_data_V_1_ack_in == 1'b0) & (ap_predicate_op146_write_state4 == 1'b1)) | ((dataOut_V_data_V_1_ack_in == 1'b0) & (ap_predicate_op143_write_state4 == 1'b1)) | ((dataOut_V_data_V_1_ack_in == 1'b0) & (ap_predicate_op139_write_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((dataOut_V_last_V_1_state == 2'd1) | (dataOut_V_keep_V_1_state == 2'd1) | (dataOut_V_data_V_1_state == 2'd1) | ((m_axis_ip_TREADY == 1'b0) & (dataOut_V_last_V_1_state == 2'd3)) | ((m_axis_ip_TREADY == 1'b0) & (dataOut_V_keep_V_1_state == 2'd3)) | ((m_axis_ip_TREADY == 1'b0) & (dataOut_V_data_V_1_state == 2'd3)));
end

always @ (*) begin
    ap_condition_184 = ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_459 = ((grp_fu_167_p3 == 1'd1) & (grp_nbreadreq_fu_114_p3 == 1'd1) & (ge_state == 2'd2));
end

always @ (*) begin
    ap_condition_471 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

always @ (*) begin
    ap_predicate_op110_write_state3 = ((tmp_5_reg_876_pp0_iter1_reg == 1'd1) & (ge_state_load_reg_872_pp0_iter1_reg == 2'd2));
end

always @ (*) begin
    ap_predicate_op123_write_state3 = ((ge_state_load_reg_872_pp0_iter1_reg == 2'd1) & (tmp_4_reg_890_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op134_write_state3 = ((ge_state_load_reg_872_pp0_iter1_reg == 2'd0) & (tmp_reg_905_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op139_write_state4 = ((tmp_5_reg_876_pp0_iter2_reg == 1'd1) & (ge_state_load_reg_872_pp0_iter2_reg == 2'd2));
end

always @ (*) begin
    ap_predicate_op143_write_state4 = ((ge_state_load_reg_872_pp0_iter2_reg == 2'd1) & (tmp_4_reg_890_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op146_write_state4 = ((ge_state_load_reg_872_pp0_iter2_reg == 2'd0) & (tmp_reg_905_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op14_read_state1 = ((grp_nbreadreq_fu_114_p3 == 1'd1) & (ge_state == 2'd1));
end

always @ (*) begin
    ap_predicate_op22_read_state1 = ((grp_nbreadreq_fu_128_p3 == 1'd1) & (ge_state == 2'd0));
end

always @ (*) begin
    ap_predicate_op8_read_state1 = ((grp_nbreadreq_fu_114_p3 == 1'd1) & (ge_state == 2'd2));
end

assign currWord_data_V_fu_864_p3 = ((and_ln82_reg_988[0:0] === 1'b1) ? p_Result_s_fu_852_p5 : trunc_ln364_fu_830_p1);

assign dataOut_V_data_V_1_ack_in = dataOut_V_data_V_1_state[1'd1];

assign dataOut_V_data_V_1_ack_out = m_axis_ip_TREADY;

assign dataOut_V_data_V_1_load_A = (~dataOut_V_data_V_1_sel_wr & dataOut_V_data_V_1_state_cmp_full);

assign dataOut_V_data_V_1_load_B = (dataOut_V_data_V_1_state_cmp_full & dataOut_V_data_V_1_sel_wr);

assign dataOut_V_data_V_1_sel = dataOut_V_data_V_1_sel_rd;

assign dataOut_V_data_V_1_state_cmp_full = ((dataOut_V_data_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign dataOut_V_data_V_1_vld_out = dataOut_V_data_V_1_state[1'd0];

assign dataOut_V_keep_V_1_ack_in = dataOut_V_keep_V_1_state[1'd1];

assign dataOut_V_keep_V_1_ack_out = m_axis_ip_TREADY;

assign dataOut_V_keep_V_1_load_A = (~dataOut_V_keep_V_1_sel_wr & dataOut_V_keep_V_1_state_cmp_full);

assign dataOut_V_keep_V_1_load_B = (dataOut_V_keep_V_1_state_cmp_full & dataOut_V_keep_V_1_sel_wr);

assign dataOut_V_keep_V_1_sel = dataOut_V_keep_V_1_sel_rd;

assign dataOut_V_keep_V_1_state_cmp_full = ((dataOut_V_keep_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign dataOut_V_keep_V_1_vld_out = dataOut_V_keep_V_1_state[1'd0];

assign dataOut_V_last_V_1_ack_in = dataOut_V_last_V_1_state[1'd1];

assign dataOut_V_last_V_1_ack_out = m_axis_ip_TREADY;

assign dataOut_V_last_V_1_load_A = (~dataOut_V_last_V_1_sel_wr & dataOut_V_last_V_1_state_cmp_full);

assign dataOut_V_last_V_1_load_B = (dataOut_V_last_V_1_state_cmp_full & dataOut_V_last_V_1_sel_wr);

assign dataOut_V_last_V_1_sel = dataOut_V_last_V_1_sel_rd;

assign dataOut_V_last_V_1_state_cmp_full = ((dataOut_V_last_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign dataOut_V_last_V_1_vld_out = dataOut_V_last_V_1_state[1'd0];

assign grp_fu_167_p3 = dataStreamBuffer4_V_dout[32'd72];

assign grp_nbreadreq_fu_114_p3 = dataStreamBuffer4_V_empty_n;

assign grp_nbreadreq_fu_128_p3 = headerFifo_V_empty_n;

assign icmp_ln647_1_fu_643_p2 = ((Lo_assign_fu_520_p3 > 22'd111) ? 1'b1 : 1'b0);

assign icmp_ln647_2_fu_306_p2 = ((Lo_assign_1_fu_276_p3 > or_ln78_1_fu_300_p2) ? 1'b1 : 1'b0);

assign icmp_ln647_3_fu_404_p2 = ((Lo_assign_1_fu_276_p3 > 22'd111) ? 1'b1 : 1'b0);

assign icmp_ln647_fu_549_p2 = ((Lo_assign_fu_520_p3 > or_ln78_fu_543_p2) ? 1'b1 : 1'b0);

assign icmp_ln76_1_fu_294_p2 = ((add_ln76_1_fu_288_p2 < 23'd113) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_537_p2 = ((add_ln76_fu_531_p2 < 23'd113) ? 1'b1 : 1'b0);

assign icmp_ln82_1_fu_398_p2 = ((Lo_assign_1_fu_276_p3 < 22'd112) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_637_p2 = ((Lo_assign_fu_520_p3 < 22'd112) ? 1'b1 : 1'b0);

assign lshr_ln647_1_fu_819_p2 = 112'd5192296858534827628530496329220095 >> zext_ln647_1_fu_816_p1;

assign lshr_ln647_2_fu_716_p2 = select_ln647_4_fu_691_p3 >> zext_ln647_2_fu_712_p1;

assign lshr_ln647_3_fu_837_p2 = 112'd5192296858534827628530496329220095 >> zext_ln647_3_fu_834_p1;

assign lshr_ln647_4_fu_386_p2 = select_ln647_7_fu_360_p3 >> zext_ln647_4_fu_382_p1;

assign lshr_ln647_5_fu_758_p2 = 112'd5192296858534827628530496329220095 >> zext_ln647_5_fu_755_p1;

assign lshr_ln647_6_fu_480_p2 = select_ln647_10_fu_454_p3 >> zext_ln647_6_fu_476_p1;

assign lshr_ln647_7_fu_776_p2 = 112'd5192296858534827628530496329220095 >> zext_ln647_7_fu_773_p1;

assign lshr_ln647_fu_626_p2 = select_ln647_1_fu_601_p3 >> zext_ln647_fu_622_p1;

assign m_axis_ip_TDATA = dataOut_V_data_V_1_data_out;

assign m_axis_ip_TKEEP = dataOut_V_keep_V_1_data_out;

assign m_axis_ip_TLAST = dataOut_V_last_V_1_data_out;

assign m_axis_ip_TVALID = dataOut_V_last_V_1_state[1'd0];

assign or_ln78_1_fu_300_p2 = (22'd63 | Lo_assign_1_fu_276_p3);

assign or_ln78_fu_543_p2 = (22'd63 | Lo_assign_fu_520_p3);

assign p_Result_10_fu_843_p2 = (lshr_ln647_3_fu_837_p2 & lshr_ln647_2_reg_983);

assign p_Result_11_fu_764_p2 = (lshr_ln647_5_fu_758_p2 & lshr_ln647_4_reg_948);

assign p_Result_12_fu_782_p2 = (lshr_ln647_7_fu_776_p2 & lshr_ln647_6_reg_958);

assign p_Result_6_fu_791_p5 = {{tmp_data_V_reg_894_pp0_iter1_reg[63:48]}, {trunc_ln215_1_fu_787_p1}};

assign p_Result_9_fu_825_p2 = (lshr_ln647_reg_973 & lshr_ln647_1_fu_819_p2);

assign p_Result_s_fu_852_p5 = {{ap_const_lv64_0[63:48]}, {trunc_ln215_fu_848_p1}};

assign select_ln250_fu_198_p3 = ((grp_fu_167_p3[0:0] === 1'b1) ? 2'd0 : 2'd2);

assign select_ln647_10_fu_454_p3 = ((icmp_ln647_3_fu_404_p2[0:0] === 1'b1) ? tmp_18_fu_418_p4 : header_header_V);

assign select_ln647_11_fu_462_p3 = ((icmp_ln647_3_fu_404_p2[0:0] === 1'b1) ? sub_ln647_11_fu_434_p2 : tmp_17_fu_410_p3);

assign select_ln647_1_fu_601_p3 = ((icmp_ln647_fu_549_p2[0:0] === 1'b1) ? tmp_11_fu_566_p4 : p_Val2_s_reg_922);

assign select_ln647_2_fu_608_p3 = ((icmp_ln647_fu_549_p2[0:0] === 1'b1) ? sub_ln647_1_fu_581_p2 : tmp_10_fu_555_p3);

assign select_ln647_3_fu_683_p3 = ((icmp_ln647_1_fu_643_p2[0:0] === 1'b1) ? add_ln647_fu_665_p2 : sub_ln647_5_fu_677_p2);

assign select_ln647_4_fu_691_p3 = ((icmp_ln647_1_fu_643_p2[0:0] === 1'b1) ? tmp_13_fu_656_p4 : p_Val2_s_reg_922);

assign select_ln647_5_fu_698_p3 = ((icmp_ln647_1_fu_643_p2[0:0] === 1'b1) ? sub_ln647_4_fu_671_p2 : tmp_12_fu_649_p3);

assign select_ln647_6_fu_352_p3 = ((icmp_ln647_2_fu_306_p2[0:0] === 1'b1) ? sub_ln647_7_fu_334_p2 : sub_ln647_9_fu_346_p2);

assign select_ln647_7_fu_360_p3 = ((icmp_ln647_2_fu_306_p2[0:0] === 1'b1) ? tmp_16_fu_324_p4 : header_header_V);

assign select_ln647_8_fu_368_p3 = ((icmp_ln647_2_fu_306_p2[0:0] === 1'b1) ? sub_ln647_8_fu_340_p2 : tmp_15_fu_312_p3);

assign select_ln647_9_fu_446_p3 = ((icmp_ln647_3_fu_404_p2[0:0] === 1'b1) ? add_ln647_1_fu_428_p2 : sub_ln647_12_fu_440_p2);

assign select_ln647_fu_593_p3 = ((icmp_ln647_fu_549_p2[0:0] === 1'b1) ? sub_ln647_fu_575_p2 : sub_ln647_2_fu_587_p2);

assign select_ln76_1_fu_486_p3 = ((icmp_ln76_1_fu_294_p2[0:0] === 1'b1) ? add_ln79_1_fu_392_p2 : header_idx);

assign select_ln76_2_fu_802_p3 = ((icmp_ln76_1_reg_938[0:0] === 1'b1) ? trunc_ln364_1_fu_769_p1 : tmp_data_V_reg_894_pp0_iter1_reg);

assign select_ln76_fu_722_p3 = ((icmp_ln76_fu_537_p2[0:0] === 1'b1) ? add_ln79_fu_632_p2 : packetHeader_idx_rea_reg_915);

assign select_ln82_2_fu_506_p3 = ((and_ln82_1_fu_500_p2[0:0] === 1'b1) ? add_ln79_1_fu_392_p2 : select_ln76_1_fu_486_p3);

assign select_ln82_fu_741_p3 = ((and_ln82_fu_735_p2[0:0] === 1'b1) ? add_ln79_fu_632_p2 : select_ln76_fu_722_p3);

assign sub_ln647_10_fu_376_p2 = ($signed(7'd111) - $signed(select_ln647_6_fu_352_p3));

assign sub_ln647_11_fu_434_p2 = ($signed(7'd111) - $signed(tmp_17_fu_410_p3));

assign sub_ln647_12_fu_440_p2 = ($signed(7'd111) - $signed(tmp_17_fu_410_p3));

assign sub_ln647_13_fu_470_p2 = ($signed(7'd111) - $signed(select_ln647_9_fu_446_p3));

assign sub_ln647_1_fu_581_p2 = ($signed(7'd111) - $signed(tmp_10_fu_555_p3));

assign sub_ln647_2_fu_587_p2 = (trunc_ln647_fu_562_p1 - tmp_10_fu_555_p3);

assign sub_ln647_3_fu_616_p2 = ($signed(7'd111) - $signed(select_ln647_fu_593_p3));

assign sub_ln647_4_fu_671_p2 = ($signed(7'd111) - $signed(tmp_12_fu_649_p3));

assign sub_ln647_5_fu_677_p2 = ($signed(7'd111) - $signed(tmp_12_fu_649_p3));

assign sub_ln647_6_fu_706_p2 = ($signed(7'd111) - $signed(select_ln647_3_fu_683_p3));

assign sub_ln647_7_fu_334_p2 = (tmp_15_fu_312_p3 - trunc_ln647_1_fu_320_p1);

assign sub_ln647_8_fu_340_p2 = ($signed(7'd111) - $signed(tmp_15_fu_312_p3));

assign sub_ln647_9_fu_346_p2 = (trunc_ln647_1_fu_320_p1 - tmp_15_fu_312_p3);

assign sub_ln647_fu_575_p2 = (tmp_10_fu_555_p3 - trunc_ln647_fu_562_p1);

assign tmp_10_fu_555_p3 = {{tmp_9_reg_933}, {6'd0}};

integer ap_tvar_int_0;

always @ (tmp60_reg_909) begin
    for (ap_tvar_int_0 = 112 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 128 - 17) begin
            tmp_11_fu_566_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_11_fu_566_p4[ap_tvar_int_0] = tmp60_reg_909[128 - ap_tvar_int_0];
        end
    end
end

assign tmp_12_fu_649_p3 = {{tmp_8_reg_928}, {6'd0}};

integer ap_tvar_int_1;

always @ (tmp60_reg_909) begin
    for (ap_tvar_int_1 = 112 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 128 - 17) begin
            tmp_13_fu_656_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_13_fu_656_p4[ap_tvar_int_1] = tmp60_reg_909[128 - ap_tvar_int_1];
        end
    end
end

assign tmp_15_fu_312_p3 = {{trunc_ln76_1_fu_272_p1}, {6'd0}};

integer ap_tvar_int_2;

always @ (header_header_V) begin
    for (ap_tvar_int_2 = 112 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 111 - 0) begin
            tmp_16_fu_324_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            tmp_16_fu_324_p4[ap_tvar_int_2] = header_header_V[111 - ap_tvar_int_2];
        end
    end
end

assign tmp_17_fu_410_p3 = {{trunc_ln76_fu_268_p1}, {6'd0}};

integer ap_tvar_int_3;

always @ (header_header_V) begin
    for (ap_tvar_int_3 = 112 - 1; ap_tvar_int_3 >= 0; ap_tvar_int_3 = ap_tvar_int_3 - 1) begin
        if (ap_tvar_int_3 > 111 - 0) begin
            tmp_18_fu_418_p4[ap_tvar_int_3] = 1'b0;
        end else begin
            tmp_18_fu_418_p4[ap_tvar_int_3] = header_header_V[111 - ap_tvar_int_3];
        end
    end
end

assign tmp_data_V_2_fu_808_p3 = ((and_ln82_1_reg_963[0:0] === 1'b1) ? p_Result_6_fu_791_p5 : select_ln76_2_fu_802_p3);

assign tmp_data_V_3_fu_184_p1 = dataStreamBuffer4_V_dout[63:0];

assign tmp_data_V_fu_194_p1 = dataStreamBuffer4_V_dout[63:0];

assign trunc_ln215_1_fu_787_p1 = p_Result_12_fu_782_p2[47:0];

assign trunc_ln215_fu_848_p1 = p_Result_10_fu_843_p2[47:0];

assign trunc_ln364_1_fu_769_p1 = p_Result_11_fu_764_p2[63:0];

assign trunc_ln364_fu_830_p1 = p_Result_9_fu_825_p2[63:0];

assign trunc_ln647_1_fu_320_p1 = or_ln78_1_fu_300_p2[6:0];

assign trunc_ln647_fu_562_p1 = or_ln78_fu_543_p2[6:0];

assign trunc_ln76_1_fu_272_p1 = header_idx[0:0];

assign trunc_ln76_fu_268_p1 = header_idx[0:0];

assign xor_ln76_1_fu_494_p2 = (icmp_ln76_1_fu_294_p2 ^ 1'd1);

assign xor_ln76_fu_729_p2 = (icmp_ln76_fu_537_p2 ^ 1'd1);

assign zext_ln647_1_fu_816_p1 = sub_ln647_3_reg_968;

assign zext_ln647_2_fu_712_p1 = select_ln647_5_fu_698_p3;

assign zext_ln647_3_fu_834_p1 = sub_ln647_6_reg_978;

assign zext_ln647_4_fu_382_p1 = select_ln647_8_fu_368_p3;

assign zext_ln647_5_fu_755_p1 = sub_ln647_10_reg_943;

assign zext_ln647_6_fu_476_p1 = select_ln647_11_fu_462_p3;

assign zext_ln647_7_fu_773_p1 = sub_ln647_13_reg_953;

assign zext_ln647_fu_622_p1 = select_ln647_2_fu_608_p3;

assign zext_ln76_1_fu_284_p1 = Lo_assign_1_fu_276_p3;

assign zext_ln76_fu_527_p1 = Lo_assign_fu_520_p3;

always @ (posedge ap_clk) begin
    sub_ln647_10_reg_943[0] <= 1'b0;
    sub_ln647_13_reg_953[0] <= 1'b0;
    sub_ln647_3_reg_968[0] <= 1'b0;
    sub_ln647_6_reg_978[0] <= 1'b0;
end

endmodule //insert_ethernet_head
