// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module finalize_ipv4_checks (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        subSumFifo_V_sum_V_0_dout,
        subSumFifo_V_sum_V_0_empty_n,
        subSumFifo_V_sum_V_0_read,
        subSumFifo_V_sum_V_1_dout,
        subSumFifo_V_sum_V_1_empty_n,
        subSumFifo_V_sum_V_1_read,
        subSumFifo_V_sum_V_2_dout,
        subSumFifo_V_sum_V_2_empty_n,
        subSumFifo_V_sum_V_2_read,
        subSumFifo_V_sum_V_3_dout,
        subSumFifo_V_sum_V_3_empty_n,
        subSumFifo_V_sum_V_3_read,
        checksumFifo_V_V_din,
        checksumFifo_V_V_full_n,
        checksumFifo_V_V_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [16:0] subSumFifo_V_sum_V_0_dout;
input   subSumFifo_V_sum_V_0_empty_n;
output   subSumFifo_V_sum_V_0_read;
input  [16:0] subSumFifo_V_sum_V_1_dout;
input   subSumFifo_V_sum_V_1_empty_n;
output   subSumFifo_V_sum_V_1_read;
input  [16:0] subSumFifo_V_sum_V_2_dout;
input   subSumFifo_V_sum_V_2_empty_n;
output   subSumFifo_V_sum_V_2_read;
input  [16:0] subSumFifo_V_sum_V_3_dout;
input   subSumFifo_V_sum_V_3_empty_n;
output   subSumFifo_V_sum_V_3_read;
output  [15:0] checksumFifo_V_V_din;
input   checksumFifo_V_V_full_n;
output   checksumFifo_V_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg subSumFifo_V_sum_V_0_read;
reg subSumFifo_V_sum_V_1_read;
reg subSumFifo_V_sum_V_2_read;
reg subSumFifo_V_sum_V_3_read;
reg checksumFifo_V_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    io_acc_block_signal_op6;
wire   [0:0] tmp_nbreadreq_fu_36_p6;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] tmp_reg_199;
reg   [0:0] tmp_reg_199_pp0_iter1_reg;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg    subSumFifo_V_sum_V_0_blk_n;
wire    ap_block_pp0_stage0;
reg    subSumFifo_V_sum_V_1_blk_n;
reg    subSumFifo_V_sum_V_2_blk_n;
reg    subSumFifo_V_sum_V_3_blk_n;
reg    checksumFifo_V_V_blk_n;
wire   [15:0] trunc_ln700_fu_85_p1;
reg   [15:0] trunc_ln700_reg_203;
wire   [15:0] trunc_ln700_1_fu_89_p1;
reg   [15:0] trunc_ln700_1_reg_208;
wire   [15:0] trunc_ln700_2_fu_99_p1;
reg   [15:0] trunc_ln700_2_reg_213;
wire   [15:0] trunc_ln700_3_fu_103_p1;
reg   [15:0] trunc_ln700_3_reg_218;
reg   [0:0] tmp_24_reg_223;
reg   [0:0] tmp_25_reg_228;
wire   [15:0] add_ln769_fu_187_p2;
reg   [15:0] add_ln769_reg_233;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage0_01001;
wire   [16:0] add_ln700_fu_93_p2;
wire   [16:0] add_ln700_1_fu_107_p2;
wire   [15:0] zext_ln214_2_fu_129_p1;
wire   [15:0] add_ln214_fu_132_p2;
wire   [15:0] add_ln214_1_fu_137_p2;
wire   [15:0] zext_ln214_3_fu_146_p1;
wire   [15:0] add_ln214_2_fu_149_p2;
wire   [15:0] add_ln214_3_fu_154_p2;
wire   [16:0] zext_ln214_fu_142_p1;
wire   [16:0] zext_ln214_1_fu_159_p1;
wire   [16:0] add_ln700_2_fu_169_p2;
wire   [0:0] tmp_26_fu_175_p3;
wire   [15:0] add_ln700_3_fu_163_p2;
wire   [15:0] zext_ln214_4_fu_183_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_199 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln769_reg_233 <= add_ln769_fu_187_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_36_p6 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_24_reg_223 <= add_ln700_fu_93_p2[32'd16];
        tmp_25_reg_228 <= add_ln700_1_fu_107_p2[32'd16];
        trunc_ln700_1_reg_208 <= trunc_ln700_1_fu_89_p1;
        trunc_ln700_2_reg_213 <= trunc_ln700_2_fu_99_p1;
        trunc_ln700_3_reg_218 <= trunc_ln700_3_fu_103_p1;
        trunc_ln700_reg_203 <= trunc_ln700_fu_85_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_reg_199 <= tmp_nbreadreq_fu_36_p6;
        tmp_reg_199_pp0_iter1_reg <= tmp_reg_199;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (tmp_reg_199_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        checksumFifo_V_V_blk_n = checksumFifo_V_V_full_n;
    end else begin
        checksumFifo_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_199_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        checksumFifo_V_V_write = 1'b1;
    end else begin
        checksumFifo_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (tmp_nbreadreq_fu_36_p6 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        subSumFifo_V_sum_V_0_blk_n = subSumFifo_V_sum_V_0_empty_n;
    end else begin
        subSumFifo_V_sum_V_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_36_p6 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        subSumFifo_V_sum_V_0_read = 1'b1;
    end else begin
        subSumFifo_V_sum_V_0_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (tmp_nbreadreq_fu_36_p6 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        subSumFifo_V_sum_V_1_blk_n = subSumFifo_V_sum_V_1_empty_n;
    end else begin
        subSumFifo_V_sum_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_36_p6 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        subSumFifo_V_sum_V_1_read = 1'b1;
    end else begin
        subSumFifo_V_sum_V_1_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (tmp_nbreadreq_fu_36_p6 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        subSumFifo_V_sum_V_2_blk_n = subSumFifo_V_sum_V_2_empty_n;
    end else begin
        subSumFifo_V_sum_V_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_36_p6 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        subSumFifo_V_sum_V_2_read = 1'b1;
    end else begin
        subSumFifo_V_sum_V_2_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (tmp_nbreadreq_fu_36_p6 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        subSumFifo_V_sum_V_3_blk_n = subSumFifo_V_sum_V_3_empty_n;
    end else begin
        subSumFifo_V_sum_V_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_36_p6 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        subSumFifo_V_sum_V_3_read = 1'b1;
    end else begin
        subSumFifo_V_sum_V_3_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln214_1_fu_137_p2 = (trunc_ln700_reg_203 + add_ln214_fu_132_p2);

assign add_ln214_2_fu_149_p2 = (zext_ln214_3_fu_146_p1 + trunc_ln700_3_reg_218);

assign add_ln214_3_fu_154_p2 = (trunc_ln700_2_reg_213 + add_ln214_2_fu_149_p2);

assign add_ln214_fu_132_p2 = (zext_ln214_2_fu_129_p1 + trunc_ln700_1_reg_208);

assign add_ln700_1_fu_107_p2 = (subSumFifo_V_sum_V_3_dout + subSumFifo_V_sum_V_1_dout);

assign add_ln700_2_fu_169_p2 = (zext_ln214_fu_142_p1 + zext_ln214_1_fu_159_p1);

assign add_ln700_3_fu_163_p2 = (add_ln214_3_fu_154_p2 + add_ln214_1_fu_137_p2);

assign add_ln700_fu_93_p2 = (subSumFifo_V_sum_V_2_dout + subSumFifo_V_sum_V_0_dout);

assign add_ln769_fu_187_p2 = (add_ln700_3_fu_163_p2 + zext_ln214_4_fu_183_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((tmp_reg_199_pp0_iter1_reg == 1'd1) & (checksumFifo_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_36_p6 == 1'd1) & (io_acc_block_signal_op6 == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((tmp_reg_199_pp0_iter1_reg == 1'd1) & (checksumFifo_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_36_p6 == 1'd1) & (io_acc_block_signal_op6 == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((tmp_reg_199_pp0_iter1_reg == 1'd1) & (checksumFifo_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_36_p6 == 1'd1) & (io_acc_block_signal_op6 == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_36_p6 == 1'd1) & (io_acc_block_signal_op6 == 1'b0)));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((tmp_reg_199_pp0_iter1_reg == 1'd1) & (checksumFifo_V_V_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign checksumFifo_V_V_din = (16'd65535 ^ add_ln769_reg_233);

assign io_acc_block_signal_op6 = (subSumFifo_V_sum_V_3_empty_n & subSumFifo_V_sum_V_2_empty_n & subSumFifo_V_sum_V_1_empty_n & subSumFifo_V_sum_V_0_empty_n);

assign tmp_26_fu_175_p3 = add_ln700_2_fu_169_p2[32'd16];

assign tmp_nbreadreq_fu_36_p6 = (subSumFifo_V_sum_V_3_empty_n & subSumFifo_V_sum_V_2_empty_n & subSumFifo_V_sum_V_1_empty_n & subSumFifo_V_sum_V_0_empty_n);

assign trunc_ln700_1_fu_89_p1 = subSumFifo_V_sum_V_0_dout[15:0];

assign trunc_ln700_2_fu_99_p1 = subSumFifo_V_sum_V_3_dout[15:0];

assign trunc_ln700_3_fu_103_p1 = subSumFifo_V_sum_V_1_dout[15:0];

assign trunc_ln700_fu_85_p1 = subSumFifo_V_sum_V_2_dout[15:0];

assign zext_ln214_1_fu_159_p1 = add_ln214_3_fu_154_p2;

assign zext_ln214_2_fu_129_p1 = tmp_24_reg_223;

assign zext_ln214_3_fu_146_p1 = tmp_25_reg_228;

assign zext_ln214_4_fu_183_p1 = tmp_26_fu_175_p3;

assign zext_ln214_fu_142_p1 = add_ln214_1_fu_137_p2;

endmodule //finalize_ipv4_checks
