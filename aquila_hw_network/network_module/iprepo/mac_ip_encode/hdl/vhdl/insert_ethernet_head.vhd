-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity insert_ethernet_head is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    dataStreamBuffer4_V_dout : IN STD_LOGIC_VECTOR (72 downto 0);
    dataStreamBuffer4_V_empty_n : IN STD_LOGIC;
    dataStreamBuffer4_V_read : OUT STD_LOGIC;
    headerFifo_V_dout : IN STD_LOGIC_VECTOR (128 downto 0);
    headerFifo_V_empty_n : IN STD_LOGIC;
    headerFifo_V_read : OUT STD_LOGIC;
    m_axis_ip_TREADY : IN STD_LOGIC;
    m_axis_ip_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axis_ip_TVALID : OUT STD_LOGIC;
    m_axis_ip_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axis_ip_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of insert_ethernet_head is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv23_40 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000001000000";
    constant ap_const_lv23_71 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000001110001";
    constant ap_const_lv22_3F : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000111111";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv7_6F : STD_LOGIC_VECTOR (6 downto 0) := "1101111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv22_70 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000001110000";
    constant ap_const_lv22_6F : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000001101111";
    constant ap_const_lv7_11 : STD_LOGIC_VECTOR (6 downto 0) := "0010001";
    constant ap_const_lv112_FFFFFFFFFFFFFFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (111 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal grp_nbreadreq_fu_114_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op8_read_state1 : BOOLEAN;
    signal ap_predicate_op14_read_state1 : BOOLEAN;
    signal grp_nbreadreq_fu_128_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op22_read_state1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal dataOut_V_data_V_1_ack_in : STD_LOGIC;
    signal ge_state_load_reg_872 : STD_LOGIC_VECTOR (1 downto 0);
    signal ge_state_load_reg_872_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_5_reg_876 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_876_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op110_write_state3 : BOOLEAN;
    signal tmp_4_reg_890 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_890_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op123_write_state3 : BOOLEAN;
    signal tmp_reg_905 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_905_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op134_write_state3 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal dataOut_V_data_V_1_ack_out : STD_LOGIC;
    signal dataOut_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal dataOut_V_keep_V_1_ack_out : STD_LOGIC;
    signal dataOut_V_keep_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal dataOut_V_last_V_1_ack_out : STD_LOGIC;
    signal dataOut_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ge_state_load_reg_872_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_5_reg_876_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op139_write_state4 : BOOLEAN;
    signal tmp_4_reg_890_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op143_write_state4 : BOOLEAN;
    signal tmp_reg_905_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op146_write_state4 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal dataOut_V_data_V_1_data_in : STD_LOGIC_VECTOR (63 downto 0);
    signal dataOut_V_data_V_1_data_out : STD_LOGIC_VECTOR (63 downto 0);
    signal dataOut_V_data_V_1_vld_in : STD_LOGIC;
    signal dataOut_V_data_V_1_vld_out : STD_LOGIC;
    signal dataOut_V_data_V_1_payload_A : STD_LOGIC_VECTOR (63 downto 0);
    signal dataOut_V_data_V_1_payload_B : STD_LOGIC_VECTOR (63 downto 0);
    signal dataOut_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal dataOut_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal dataOut_V_data_V_1_sel : STD_LOGIC;
    signal dataOut_V_data_V_1_load_A : STD_LOGIC;
    signal dataOut_V_data_V_1_load_B : STD_LOGIC;
    signal dataOut_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal dataOut_V_keep_V_1_data_in : STD_LOGIC_VECTOR (7 downto 0);
    signal dataOut_V_keep_V_1_data_out : STD_LOGIC_VECTOR (7 downto 0);
    signal dataOut_V_keep_V_1_vld_in : STD_LOGIC;
    signal dataOut_V_keep_V_1_vld_out : STD_LOGIC;
    signal dataOut_V_keep_V_1_ack_in : STD_LOGIC;
    signal dataOut_V_keep_V_1_payload_A : STD_LOGIC_VECTOR (7 downto 0);
    signal dataOut_V_keep_V_1_payload_B : STD_LOGIC_VECTOR (7 downto 0);
    signal dataOut_V_keep_V_1_sel_rd : STD_LOGIC := '0';
    signal dataOut_V_keep_V_1_sel_wr : STD_LOGIC := '0';
    signal dataOut_V_keep_V_1_sel : STD_LOGIC;
    signal dataOut_V_keep_V_1_load_A : STD_LOGIC;
    signal dataOut_V_keep_V_1_load_B : STD_LOGIC;
    signal dataOut_V_keep_V_1_state_cmp_full : STD_LOGIC;
    signal dataOut_V_last_V_1_data_in : STD_LOGIC_VECTOR (0 downto 0);
    signal dataOut_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal dataOut_V_last_V_1_vld_in : STD_LOGIC;
    signal dataOut_V_last_V_1_vld_out : STD_LOGIC;
    signal dataOut_V_last_V_1_ack_in : STD_LOGIC;
    signal dataOut_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal dataOut_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal dataOut_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal dataOut_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal dataOut_V_last_V_1_sel : STD_LOGIC;
    signal dataOut_V_last_V_1_load_A : STD_LOGIC;
    signal dataOut_V_last_V_1_load_B : STD_LOGIC;
    signal dataOut_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal ge_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal header_header_V : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal header_idx : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal m_axis_ip_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal headerFifo_V_blk_n : STD_LOGIC;
    signal dataStreamBuffer4_V_blk_n : STD_LOGIC;
    signal reg_175 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_175_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_data_V_3_fu_184_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_data_V_3_reg_880 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_data_V_3_reg_880_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_167_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_3_reg_885 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_3_reg_885_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_V_fu_194_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_data_V_reg_894 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_data_V_reg_894_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_last_V_reg_900 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_reg_900_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp60_reg_909 : STD_LOGIC_VECTOR (128 downto 0);
    signal packetHeader_idx_rea_reg_915 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_reg_922 : STD_LOGIC_VECTOR (111 downto 0);
    signal tmp_8_reg_928 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_933 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_1_fu_294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_1_reg_938 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln647_10_fu_376_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln647_10_reg_943 : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln647_4_fu_386_p2 : STD_LOGIC_VECTOR (111 downto 0);
    signal lshr_ln647_4_reg_948 : STD_LOGIC_VECTOR (111 downto 0);
    signal sub_ln647_13_fu_470_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln647_13_reg_953 : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln647_6_fu_480_p2 : STD_LOGIC_VECTOR (111 downto 0);
    signal lshr_ln647_6_reg_958 : STD_LOGIC_VECTOR (111 downto 0);
    signal and_ln82_1_fu_500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln82_1_reg_963 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln647_3_fu_616_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln647_3_reg_968 : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln647_fu_626_p2 : STD_LOGIC_VECTOR (111 downto 0);
    signal lshr_ln647_reg_973 : STD_LOGIC_VECTOR (111 downto 0);
    signal sub_ln647_6_fu_706_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln647_6_reg_978 : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln647_2_fu_716_p2 : STD_LOGIC_VECTOR (111 downto 0);
    signal lshr_ln647_2_reg_983 : STD_LOGIC_VECTOR (111 downto 0);
    signal and_ln82_fu_735_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln82_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_V_2_fu_808_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal currWord_data_V_fu_864_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal select_ln250_fu_198_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln82_2_fu_506_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln82_fu_741_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal Lo_assign_1_fu_276_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln76_1_fu_284_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln76_1_fu_288_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln78_1_fu_300_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln76_1_fu_272_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_312_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln647_1_fu_320_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln647_2_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln647_7_fu_334_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln647_9_fu_346_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_16_fu_324_p4 : STD_LOGIC_VECTOR (111 downto 0);
    signal sub_ln647_8_fu_340_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_6_fu_352_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_8_fu_368_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_7_fu_360_p3 : STD_LOGIC_VECTOR (111 downto 0);
    signal zext_ln647_4_fu_382_p1 : STD_LOGIC_VECTOR (111 downto 0);
    signal trunc_ln76_fu_268_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_410_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln647_3_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln647_1_fu_428_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln647_12_fu_440_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_18_fu_418_p4 : STD_LOGIC_VECTOR (111 downto 0);
    signal sub_ln647_11_fu_434_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_9_fu_446_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_11_fu_462_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_10_fu_454_p3 : STD_LOGIC_VECTOR (111 downto 0);
    signal zext_ln647_6_fu_476_p1 : STD_LOGIC_VECTOR (111 downto 0);
    signal add_ln79_1_fu_392_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln82_1_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln76_1_fu_494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln76_1_fu_486_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal Lo_assign_fu_520_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln76_fu_527_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln76_fu_531_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln78_fu_543_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_10_fu_555_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln647_fu_562_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln647_fu_549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln647_fu_575_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln647_2_fu_587_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_11_fu_566_p4 : STD_LOGIC_VECTOR (111 downto 0);
    signal sub_ln647_1_fu_581_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_fu_593_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_2_fu_608_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_1_fu_601_p3 : STD_LOGIC_VECTOR (111 downto 0);
    signal zext_ln647_fu_622_p1 : STD_LOGIC_VECTOR (111 downto 0);
    signal tmp_12_fu_649_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln647_1_fu_643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln647_fu_665_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln647_5_fu_677_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_13_fu_656_p4 : STD_LOGIC_VECTOR (111 downto 0);
    signal sub_ln647_4_fu_671_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_3_fu_683_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_5_fu_698_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_4_fu_691_p3 : STD_LOGIC_VECTOR (111 downto 0);
    signal zext_ln647_2_fu_712_p1 : STD_LOGIC_VECTOR (111 downto 0);
    signal icmp_ln76_fu_537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln79_fu_632_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln82_fu_637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln76_fu_729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln76_fu_722_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln647_5_fu_755_p1 : STD_LOGIC_VECTOR (111 downto 0);
    signal lshr_ln647_5_fu_758_p2 : STD_LOGIC_VECTOR (111 downto 0);
    signal p_Result_11_fu_764_p2 : STD_LOGIC_VECTOR (111 downto 0);
    signal zext_ln647_7_fu_773_p1 : STD_LOGIC_VECTOR (111 downto 0);
    signal lshr_ln647_7_fu_776_p2 : STD_LOGIC_VECTOR (111 downto 0);
    signal p_Result_12_fu_782_p2 : STD_LOGIC_VECTOR (111 downto 0);
    signal trunc_ln215_1_fu_787_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal trunc_ln364_1_fu_769_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_6_fu_791_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln76_2_fu_802_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln647_1_fu_816_p1 : STD_LOGIC_VECTOR (111 downto 0);
    signal lshr_ln647_1_fu_819_p2 : STD_LOGIC_VECTOR (111 downto 0);
    signal p_Result_9_fu_825_p2 : STD_LOGIC_VECTOR (111 downto 0);
    signal zext_ln647_3_fu_834_p1 : STD_LOGIC_VECTOR (111 downto 0);
    signal lshr_ln647_3_fu_837_p2 : STD_LOGIC_VECTOR (111 downto 0);
    signal p_Result_10_fu_843_p2 : STD_LOGIC_VECTOR (111 downto 0);
    signal trunc_ln215_fu_848_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_s_fu_852_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln364_fu_830_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to2 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_459 : BOOLEAN;
    signal ap_condition_184 : BOOLEAN;
    signal ap_condition_471 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    dataOut_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                dataOut_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((dataOut_V_data_V_1_vld_out = ap_const_logic_1) and (dataOut_V_data_V_1_ack_out = ap_const_logic_1))) then 
                                        dataOut_V_data_V_1_sel_rd <= not(dataOut_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    dataOut_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                dataOut_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((dataOut_V_data_V_1_ack_in = ap_const_logic_1) and (dataOut_V_data_V_1_vld_in = ap_const_logic_1))) then 
                                        dataOut_V_data_V_1_sel_wr <= not(dataOut_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    dataOut_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                dataOut_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((dataOut_V_data_V_1_vld_in = ap_const_logic_0) and (dataOut_V_data_V_1_ack_out = ap_const_logic_1) and (dataOut_V_data_V_1_state = ap_const_lv2_3)) or ((dataOut_V_data_V_1_state = ap_const_lv2_2) and (dataOut_V_data_V_1_vld_in = ap_const_logic_0)))) then 
                    dataOut_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((dataOut_V_data_V_1_state = ap_const_lv2_1) and (m_axis_ip_TREADY = ap_const_logic_0)) or ((m_axis_ip_TREADY = ap_const_logic_0) and (dataOut_V_data_V_1_vld_in = ap_const_logic_1) and (dataOut_V_data_V_1_state = ap_const_lv2_3)))) then 
                    dataOut_V_data_V_1_state <= ap_const_lv2_1;
                elsif ((((dataOut_V_data_V_1_state = ap_const_lv2_1) and (dataOut_V_data_V_1_ack_out = ap_const_logic_1)) or (not(((dataOut_V_data_V_1_vld_in = ap_const_logic_0) and (dataOut_V_data_V_1_ack_out = ap_const_logic_1))) and not(((m_axis_ip_TREADY = ap_const_logic_0) and (dataOut_V_data_V_1_vld_in = ap_const_logic_1))) and (dataOut_V_data_V_1_state = ap_const_lv2_3)) or ((dataOut_V_data_V_1_state = ap_const_lv2_2) and (dataOut_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    dataOut_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    dataOut_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    dataOut_V_keep_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                dataOut_V_keep_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((dataOut_V_keep_V_1_vld_out = ap_const_logic_1) and (dataOut_V_keep_V_1_ack_out = ap_const_logic_1))) then 
                                        dataOut_V_keep_V_1_sel_rd <= not(dataOut_V_keep_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    dataOut_V_keep_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                dataOut_V_keep_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((dataOut_V_keep_V_1_ack_in = ap_const_logic_1) and (dataOut_V_keep_V_1_vld_in = ap_const_logic_1))) then 
                                        dataOut_V_keep_V_1_sel_wr <= not(dataOut_V_keep_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    dataOut_V_keep_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                dataOut_V_keep_V_1_state <= ap_const_lv2_0;
            else
                if ((((dataOut_V_keep_V_1_vld_in = ap_const_logic_0) and (dataOut_V_keep_V_1_ack_out = ap_const_logic_1) and (dataOut_V_keep_V_1_state = ap_const_lv2_3)) or ((dataOut_V_keep_V_1_state = ap_const_lv2_2) and (dataOut_V_keep_V_1_vld_in = ap_const_logic_0)))) then 
                    dataOut_V_keep_V_1_state <= ap_const_lv2_2;
                elsif ((((dataOut_V_keep_V_1_state = ap_const_lv2_1) and (m_axis_ip_TREADY = ap_const_logic_0)) or ((m_axis_ip_TREADY = ap_const_logic_0) and (dataOut_V_keep_V_1_vld_in = ap_const_logic_1) and (dataOut_V_keep_V_1_state = ap_const_lv2_3)))) then 
                    dataOut_V_keep_V_1_state <= ap_const_lv2_1;
                elsif ((((dataOut_V_keep_V_1_state = ap_const_lv2_1) and (dataOut_V_keep_V_1_ack_out = ap_const_logic_1)) or (not(((dataOut_V_keep_V_1_vld_in = ap_const_logic_0) and (dataOut_V_keep_V_1_ack_out = ap_const_logic_1))) and not(((m_axis_ip_TREADY = ap_const_logic_0) and (dataOut_V_keep_V_1_vld_in = ap_const_logic_1))) and (dataOut_V_keep_V_1_state = ap_const_lv2_3)) or ((dataOut_V_keep_V_1_state = ap_const_lv2_2) and (dataOut_V_keep_V_1_vld_in = ap_const_logic_1)))) then 
                    dataOut_V_keep_V_1_state <= ap_const_lv2_3;
                else 
                    dataOut_V_keep_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    dataOut_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                dataOut_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((dataOut_V_last_V_1_vld_out = ap_const_logic_1) and (dataOut_V_last_V_1_ack_out = ap_const_logic_1))) then 
                                        dataOut_V_last_V_1_sel_rd <= not(dataOut_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    dataOut_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                dataOut_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((dataOut_V_last_V_1_ack_in = ap_const_logic_1) and (dataOut_V_last_V_1_vld_in = ap_const_logic_1))) then 
                                        dataOut_V_last_V_1_sel_wr <= not(dataOut_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    dataOut_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                dataOut_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((dataOut_V_last_V_1_vld_in = ap_const_logic_0) and (dataOut_V_last_V_1_ack_out = ap_const_logic_1) and (dataOut_V_last_V_1_state = ap_const_lv2_3)) or ((dataOut_V_last_V_1_state = ap_const_lv2_2) and (dataOut_V_last_V_1_vld_in = ap_const_logic_0)))) then 
                    dataOut_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((dataOut_V_last_V_1_state = ap_const_lv2_1) and (m_axis_ip_TREADY = ap_const_logic_0)) or ((m_axis_ip_TREADY = ap_const_logic_0) and (dataOut_V_last_V_1_vld_in = ap_const_logic_1) and (dataOut_V_last_V_1_state = ap_const_lv2_3)))) then 
                    dataOut_V_last_V_1_state <= ap_const_lv2_1;
                elsif ((((dataOut_V_last_V_1_state = ap_const_lv2_1) and (dataOut_V_last_V_1_ack_out = ap_const_logic_1)) or (not(((dataOut_V_last_V_1_vld_in = ap_const_logic_0) and (dataOut_V_last_V_1_ack_out = ap_const_logic_1))) and not(((m_axis_ip_TREADY = ap_const_logic_0) and (dataOut_V_last_V_1_vld_in = ap_const_logic_1))) and (dataOut_V_last_V_1_state = ap_const_lv2_3)) or ((dataOut_V_last_V_1_state = ap_const_lv2_2) and (dataOut_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    dataOut_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    dataOut_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ge_state_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_184)) then
                if (((grp_nbreadreq_fu_128_p3 = ap_const_lv1_1) and (ge_state = ap_const_lv2_0))) then 
                    ge_state <= ap_const_lv2_1;
                elsif (((grp_nbreadreq_fu_114_p3 = ap_const_lv1_1) and (ge_state = ap_const_lv2_1))) then 
                    ge_state <= select_ln250_fu_198_p3;
                elsif ((ap_const_boolean_1 = ap_condition_459)) then 
                    ge_state <= ap_const_lv2_0;
                end if;
            end if; 
        end if;
    end process;

    header_idx_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_471)) then
                if (((ge_state_load_reg_872 = ap_const_lv2_0) and (tmp_reg_905 = ap_const_lv1_1))) then 
                    header_idx <= select_ln82_fu_741_p3;
                elsif (((ge_state_load_reg_872 = ap_const_lv2_1) and (tmp_4_reg_890 = ap_const_lv1_1))) then 
                    header_idx <= select_ln82_2_fu_506_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ge_state_load_reg_872 = ap_const_lv2_1) and (tmp_4_reg_890 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln82_1_reg_963 <= and_ln82_1_fu_500_p2;
                icmp_ln76_1_reg_938 <= icmp_ln76_1_fu_294_p2;
                lshr_ln647_4_reg_948 <= lshr_ln647_4_fu_386_p2;
                lshr_ln647_6_reg_958 <= lshr_ln647_6_fu_480_p2;
                    sub_ln647_10_reg_943(6 downto 1) <= sub_ln647_10_fu_376_p2(6 downto 1);
                    sub_ln647_13_reg_953(6 downto 1) <= sub_ln647_13_fu_470_p2(6 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ge_state_load_reg_872 = ap_const_lv2_0) and (tmp_reg_905 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln82_reg_988 <= and_ln82_fu_735_p2;
                lshr_ln647_2_reg_983 <= lshr_ln647_2_fu_716_p2;
                lshr_ln647_reg_973 <= lshr_ln647_fu_626_p2;
                    sub_ln647_3_reg_968(6 downto 1) <= sub_ln647_3_fu_616_p2(6 downto 1);
                    sub_ln647_6_reg_978(6 downto 1) <= sub_ln647_6_fu_706_p2(6 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((dataOut_V_data_V_1_load_A = ap_const_logic_1)) then
                dataOut_V_data_V_1_payload_A <= dataOut_V_data_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((dataOut_V_data_V_1_load_B = ap_const_logic_1)) then
                dataOut_V_data_V_1_payload_B <= dataOut_V_data_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((dataOut_V_keep_V_1_load_A = ap_const_logic_1)) then
                dataOut_V_keep_V_1_payload_A <= dataOut_V_keep_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((dataOut_V_keep_V_1_load_B = ap_const_logic_1)) then
                dataOut_V_keep_V_1_payload_B <= dataOut_V_keep_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((dataOut_V_last_V_1_load_A = ap_const_logic_1)) then
                dataOut_V_last_V_1_payload_A <= dataOut_V_last_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((dataOut_V_last_V_1_load_B = ap_const_logic_1)) then
                dataOut_V_last_V_1_payload_B <= dataOut_V_last_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ge_state_load_reg_872 <= ge_state;
                ge_state_load_reg_872_pp0_iter1_reg <= ge_state_load_reg_872;
                reg_175_pp0_iter1_reg <= reg_175;
                tmp_4_reg_890_pp0_iter1_reg <= tmp_4_reg_890;
                tmp_5_reg_876_pp0_iter1_reg <= tmp_5_reg_876;
                tmp_data_V_3_reg_880_pp0_iter1_reg <= tmp_data_V_3_reg_880;
                tmp_data_V_reg_894_pp0_iter1_reg <= tmp_data_V_reg_894;
                tmp_last_V_3_reg_885_pp0_iter1_reg <= tmp_last_V_3_reg_885;
                tmp_last_V_reg_900_pp0_iter1_reg <= tmp_last_V_reg_900;
                tmp_reg_905_pp0_iter1_reg <= tmp_reg_905;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ge_state_load_reg_872_pp0_iter2_reg <= ge_state_load_reg_872_pp0_iter1_reg;
                tmp_4_reg_890_pp0_iter2_reg <= tmp_4_reg_890_pp0_iter1_reg;
                tmp_5_reg_876_pp0_iter2_reg <= tmp_5_reg_876_pp0_iter1_reg;
                tmp_reg_905_pp0_iter2_reg <= tmp_reg_905_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_128_p3 = ap_const_lv1_1) and (ge_state = ap_const_lv2_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                header_header_V <= headerFifo_V_dout(128 downto 17);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_128_p3 = ap_const_lv1_1) and (ge_state = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_s_reg_922 <= headerFifo_V_dout(128 downto 17);
                packetHeader_idx_rea_reg_915 <= headerFifo_V_dout(16 downto 1);
                tmp_8_reg_928 <= headerFifo_V_dout(1 downto 1);
                tmp_9_reg_933 <= headerFifo_V_dout(1 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_nbreadreq_fu_114_p3 = ap_const_lv1_1) and (ge_state = ap_const_lv2_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((grp_nbreadreq_fu_114_p3 = ap_const_lv1_1) and (ge_state = ap_const_lv2_2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_175 <= dataStreamBuffer4_V_dout(71 downto 64);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op22_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp60_reg_909 <= headerFifo_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ge_state = ap_const_lv2_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_4_reg_890 <= grp_nbreadreq_fu_114_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ge_state = ap_const_lv2_2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_5_reg_876 <= grp_nbreadreq_fu_114_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_114_p3 = ap_const_lv1_1) and (ge_state = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_data_V_3_reg_880 <= tmp_data_V_3_fu_184_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_114_p3 = ap_const_lv1_1) and (ge_state = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_data_V_reg_894 <= tmp_data_V_fu_194_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_114_p3 = ap_const_lv1_1) and (ge_state = ap_const_lv2_2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_last_V_3_reg_885 <= dataStreamBuffer4_V_dout(72 downto 72);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_114_p3 = ap_const_lv1_1) and (ge_state = ap_const_lv2_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_last_V_reg_900 <= dataStreamBuffer4_V_dout(72 downto 72);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ge_state = ap_const_lv2_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_reg_905 <= grp_nbreadreq_fu_128_p3;
            end if;
        end if;
    end process;
    sub_ln647_10_reg_943(0) <= '0';
    sub_ln647_13_reg_953(0) <= '0';
    sub_ln647_3_reg_968(0) <= '0';
    sub_ln647_6_reg_978(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Lo_assign_1_fu_276_p3 <= (header_idx & ap_const_lv6_0);
    Lo_assign_fu_520_p3 <= (packetHeader_idx_rea_reg_915 & ap_const_lv6_0);
    add_ln647_1_fu_428_p2 <= std_logic_vector(unsigned(tmp_17_fu_410_p3) + unsigned(ap_const_lv7_11));
    add_ln647_fu_665_p2 <= std_logic_vector(unsigned(tmp_12_fu_649_p3) + unsigned(ap_const_lv7_11));
    add_ln76_1_fu_288_p2 <= std_logic_vector(unsigned(zext_ln76_1_fu_284_p1) + unsigned(ap_const_lv23_40));
    add_ln76_fu_531_p2 <= std_logic_vector(unsigned(zext_ln76_fu_527_p1) + unsigned(ap_const_lv23_40));
    add_ln79_1_fu_392_p2 <= std_logic_vector(unsigned(header_idx) + unsigned(ap_const_lv16_1));
    add_ln79_fu_632_p2 <= std_logic_vector(unsigned(packetHeader_idx_rea_reg_915) + unsigned(ap_const_lv16_1));
    and_ln82_1_fu_500_p2 <= (xor_ln76_1_fu_494_p2 and icmp_ln82_1_fu_398_p2);
    and_ln82_fu_735_p2 <= (xor_ln76_fu_729_p2 and icmp_ln82_fu_637_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter3, dataStreamBuffer4_V_empty_n, ap_predicate_op8_read_state1, ap_predicate_op14_read_state1, headerFifo_V_empty_n, ap_predicate_op22_read_state1, m_axis_ip_TREADY, dataOut_V_data_V_1_state, dataOut_V_keep_V_1_state, dataOut_V_last_V_1_state)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((headerFifo_V_empty_n = ap_const_logic_0) and (ap_predicate_op22_read_state1 = ap_const_boolean_1)) or ((dataStreamBuffer4_V_empty_n = ap_const_logic_0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1)) or ((dataStreamBuffer4_V_empty_n = ap_const_logic_0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((dataOut_V_last_V_1_state = ap_const_lv2_1) or (dataOut_V_keep_V_1_state = ap_const_lv2_1) or (dataOut_V_data_V_1_state = ap_const_lv2_1) or ((m_axis_ip_TREADY = ap_const_logic_0) and (dataOut_V_last_V_1_state = ap_const_lv2_3)) or ((m_axis_ip_TREADY = ap_const_logic_0) and (dataOut_V_keep_V_1_state = ap_const_lv2_3)) or ((m_axis_ip_TREADY = ap_const_logic_0) and (dataOut_V_data_V_1_state = ap_const_lv2_3)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, dataStreamBuffer4_V_empty_n, ap_predicate_op8_read_state1, ap_predicate_op14_read_state1, headerFifo_V_empty_n, ap_predicate_op22_read_state1, m_axis_ip_TREADY, ap_block_state3_io, dataOut_V_data_V_1_state, dataOut_V_keep_V_1_state, dataOut_V_last_V_1_state, ap_block_state4_io)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((headerFifo_V_empty_n = ap_const_logic_0) and (ap_predicate_op22_read_state1 = ap_const_boolean_1)) or ((dataStreamBuffer4_V_empty_n = ap_const_logic_0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1)) or ((dataStreamBuffer4_V_empty_n = ap_const_logic_0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((dataOut_V_last_V_1_state = ap_const_lv2_1) or (dataOut_V_keep_V_1_state = ap_const_lv2_1) or (dataOut_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state4_io) or ((m_axis_ip_TREADY = ap_const_logic_0) and (dataOut_V_last_V_1_state = ap_const_lv2_3)) or ((m_axis_ip_TREADY = ap_const_logic_0) and (dataOut_V_keep_V_1_state = ap_const_lv2_3)) or ((m_axis_ip_TREADY = ap_const_logic_0) and (dataOut_V_data_V_1_state = ap_const_lv2_3)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_io)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, dataStreamBuffer4_V_empty_n, ap_predicate_op8_read_state1, ap_predicate_op14_read_state1, headerFifo_V_empty_n, ap_predicate_op22_read_state1, m_axis_ip_TREADY, ap_block_state3_io, dataOut_V_data_V_1_state, dataOut_V_keep_V_1_state, dataOut_V_last_V_1_state, ap_block_state4_io)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((headerFifo_V_empty_n = ap_const_logic_0) and (ap_predicate_op22_read_state1 = ap_const_boolean_1)) or ((dataStreamBuffer4_V_empty_n = ap_const_logic_0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1)) or ((dataStreamBuffer4_V_empty_n = ap_const_logic_0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((dataOut_V_last_V_1_state = ap_const_lv2_1) or (dataOut_V_keep_V_1_state = ap_const_lv2_1) or (dataOut_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state4_io) or ((m_axis_ip_TREADY = ap_const_logic_0) and (dataOut_V_last_V_1_state = ap_const_lv2_3)) or ((m_axis_ip_TREADY = ap_const_logic_0) and (dataOut_V_keep_V_1_state = ap_const_lv2_3)) or ((m_axis_ip_TREADY = ap_const_logic_0) and (dataOut_V_data_V_1_state = ap_const_lv2_3)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_io)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg, dataStreamBuffer4_V_empty_n, ap_predicate_op8_read_state1, ap_predicate_op14_read_state1, headerFifo_V_empty_n, ap_predicate_op22_read_state1)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((headerFifo_V_empty_n = ap_const_logic_0) and (ap_predicate_op22_read_state1 = ap_const_boolean_1)) or ((dataStreamBuffer4_V_empty_n = ap_const_logic_0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1)) or ((dataStreamBuffer4_V_empty_n = ap_const_logic_0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1)));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_io_assign_proc : process(dataOut_V_data_V_1_ack_in, ap_predicate_op110_write_state3, ap_predicate_op123_write_state3, ap_predicate_op134_write_state3)
    begin
                ap_block_state3_io <= (((dataOut_V_data_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op110_write_state3 = ap_const_boolean_1)) or ((dataOut_V_data_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op134_write_state3 = ap_const_boolean_1)) or ((dataOut_V_data_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op123_write_state3 = ap_const_boolean_1)));
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_io_assign_proc : process(dataOut_V_data_V_1_ack_in, ap_predicate_op139_write_state4, ap_predicate_op143_write_state4, ap_predicate_op146_write_state4)
    begin
                ap_block_state4_io <= (((dataOut_V_data_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op146_write_state4 = ap_const_boolean_1)) or ((dataOut_V_data_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op143_write_state4 = ap_const_boolean_1)) or ((dataOut_V_data_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op139_write_state4 = ap_const_boolean_1)));
    end process;


    ap_block_state4_pp0_stage0_iter3_assign_proc : process(m_axis_ip_TREADY, dataOut_V_data_V_1_state, dataOut_V_keep_V_1_state, dataOut_V_last_V_1_state)
    begin
                ap_block_state4_pp0_stage0_iter3 <= ((dataOut_V_last_V_1_state = ap_const_lv2_1) or (dataOut_V_keep_V_1_state = ap_const_lv2_1) or (dataOut_V_data_V_1_state = ap_const_lv2_1) or ((m_axis_ip_TREADY = ap_const_logic_0) and (dataOut_V_last_V_1_state = ap_const_lv2_3)) or ((m_axis_ip_TREADY = ap_const_logic_0) and (dataOut_V_keep_V_1_state = ap_const_lv2_3)) or ((m_axis_ip_TREADY = ap_const_logic_0) and (dataOut_V_data_V_1_state = ap_const_lv2_3)));
    end process;


    ap_condition_184_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_184 <= ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_459_assign_proc : process(grp_nbreadreq_fu_114_p3, ge_state, grp_fu_167_p3)
    begin
                ap_condition_459 <= ((grp_fu_167_p3 = ap_const_lv1_1) and (grp_nbreadreq_fu_114_p3 = ap_const_lv1_1) and (ge_state = ap_const_lv2_2));
    end process;


    ap_condition_471_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_471 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op110_write_state3_assign_proc : process(ge_state_load_reg_872_pp0_iter1_reg, tmp_5_reg_876_pp0_iter1_reg)
    begin
                ap_predicate_op110_write_state3 <= ((tmp_5_reg_876_pp0_iter1_reg = ap_const_lv1_1) and (ge_state_load_reg_872_pp0_iter1_reg = ap_const_lv2_2));
    end process;


    ap_predicate_op123_write_state3_assign_proc : process(ge_state_load_reg_872_pp0_iter1_reg, tmp_4_reg_890_pp0_iter1_reg)
    begin
                ap_predicate_op123_write_state3 <= ((ge_state_load_reg_872_pp0_iter1_reg = ap_const_lv2_1) and (tmp_4_reg_890_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op134_write_state3_assign_proc : process(ge_state_load_reg_872_pp0_iter1_reg, tmp_reg_905_pp0_iter1_reg)
    begin
                ap_predicate_op134_write_state3 <= ((ge_state_load_reg_872_pp0_iter1_reg = ap_const_lv2_0) and (tmp_reg_905_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op139_write_state4_assign_proc : process(ge_state_load_reg_872_pp0_iter2_reg, tmp_5_reg_876_pp0_iter2_reg)
    begin
                ap_predicate_op139_write_state4 <= ((tmp_5_reg_876_pp0_iter2_reg = ap_const_lv1_1) and (ge_state_load_reg_872_pp0_iter2_reg = ap_const_lv2_2));
    end process;


    ap_predicate_op143_write_state4_assign_proc : process(ge_state_load_reg_872_pp0_iter2_reg, tmp_4_reg_890_pp0_iter2_reg)
    begin
                ap_predicate_op143_write_state4 <= ((ge_state_load_reg_872_pp0_iter2_reg = ap_const_lv2_1) and (tmp_4_reg_890_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op146_write_state4_assign_proc : process(ge_state_load_reg_872_pp0_iter2_reg, tmp_reg_905_pp0_iter2_reg)
    begin
                ap_predicate_op146_write_state4 <= ((ge_state_load_reg_872_pp0_iter2_reg = ap_const_lv2_0) and (tmp_reg_905_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op14_read_state1_assign_proc : process(grp_nbreadreq_fu_114_p3, ge_state)
    begin
                ap_predicate_op14_read_state1 <= ((grp_nbreadreq_fu_114_p3 = ap_const_lv1_1) and (ge_state = ap_const_lv2_1));
    end process;


    ap_predicate_op22_read_state1_assign_proc : process(grp_nbreadreq_fu_128_p3, ge_state)
    begin
                ap_predicate_op22_read_state1 <= ((grp_nbreadreq_fu_128_p3 = ap_const_lv1_1) and (ge_state = ap_const_lv2_0));
    end process;


    ap_predicate_op8_read_state1_assign_proc : process(grp_nbreadreq_fu_114_p3, ge_state)
    begin
                ap_predicate_op8_read_state1 <= ((grp_nbreadreq_fu_114_p3 = ap_const_lv1_1) and (ge_state = ap_const_lv2_2));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to2)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to2 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    currWord_data_V_fu_864_p3 <= 
        p_Result_s_fu_852_p5 when (and_ln82_reg_988(0) = '1') else 
        trunc_ln364_fu_830_p1;
    dataOut_V_data_V_1_ack_in <= dataOut_V_data_V_1_state(1);
    dataOut_V_data_V_1_ack_out <= m_axis_ip_TREADY;

    dataOut_V_data_V_1_data_in_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op110_write_state3, ap_predicate_op123_write_state3, ap_predicate_op134_write_state3, tmp_data_V_3_reg_880_pp0_iter1_reg, tmp_data_V_2_fu_808_p3, currWord_data_V_fu_864_p3, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((ap_predicate_op134_write_state3 = ap_const_boolean_1)) then 
                dataOut_V_data_V_1_data_in <= currWord_data_V_fu_864_p3;
            elsif ((ap_predicate_op123_write_state3 = ap_const_boolean_1)) then 
                dataOut_V_data_V_1_data_in <= tmp_data_V_2_fu_808_p3;
            elsif ((ap_predicate_op110_write_state3 = ap_const_boolean_1)) then 
                dataOut_V_data_V_1_data_in <= tmp_data_V_3_reg_880_pp0_iter1_reg;
            else 
                dataOut_V_data_V_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            dataOut_V_data_V_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dataOut_V_data_V_1_data_out_assign_proc : process(dataOut_V_data_V_1_payload_A, dataOut_V_data_V_1_payload_B, dataOut_V_data_V_1_sel)
    begin
        if ((dataOut_V_data_V_1_sel = ap_const_logic_1)) then 
            dataOut_V_data_V_1_data_out <= dataOut_V_data_V_1_payload_B;
        else 
            dataOut_V_data_V_1_data_out <= dataOut_V_data_V_1_payload_A;
        end if; 
    end process;

    dataOut_V_data_V_1_load_A <= (not(dataOut_V_data_V_1_sel_wr) and dataOut_V_data_V_1_state_cmp_full);
    dataOut_V_data_V_1_load_B <= (dataOut_V_data_V_1_state_cmp_full and dataOut_V_data_V_1_sel_wr);
    dataOut_V_data_V_1_sel <= dataOut_V_data_V_1_sel_rd;
    dataOut_V_data_V_1_state_cmp_full <= '0' when (dataOut_V_data_V_1_state = ap_const_lv2_1) else '1';

    dataOut_V_data_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op110_write_state3, ap_predicate_op123_write_state3, ap_predicate_op134_write_state3, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op110_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op134_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op123_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            dataOut_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            dataOut_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    dataOut_V_data_V_1_vld_out <= dataOut_V_data_V_1_state(0);
    dataOut_V_keep_V_1_ack_in <= dataOut_V_keep_V_1_state(1);
    dataOut_V_keep_V_1_ack_out <= m_axis_ip_TREADY;

    dataOut_V_keep_V_1_data_in_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op110_write_state3, ap_predicate_op123_write_state3, ap_predicate_op134_write_state3, reg_175_pp0_iter1_reg, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op134_write_state3 = ap_const_boolean_1))) then 
            dataOut_V_keep_V_1_data_in <= ap_const_lv8_FF;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op110_write_state3 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op123_write_state3 = ap_const_boolean_1)))) then 
            dataOut_V_keep_V_1_data_in <= reg_175_pp0_iter1_reg;
        else 
            dataOut_V_keep_V_1_data_in <= "XXXXXXXX";
        end if; 
    end process;


    dataOut_V_keep_V_1_data_out_assign_proc : process(dataOut_V_keep_V_1_payload_A, dataOut_V_keep_V_1_payload_B, dataOut_V_keep_V_1_sel)
    begin
        if ((dataOut_V_keep_V_1_sel = ap_const_logic_1)) then 
            dataOut_V_keep_V_1_data_out <= dataOut_V_keep_V_1_payload_B;
        else 
            dataOut_V_keep_V_1_data_out <= dataOut_V_keep_V_1_payload_A;
        end if; 
    end process;

    dataOut_V_keep_V_1_load_A <= (not(dataOut_V_keep_V_1_sel_wr) and dataOut_V_keep_V_1_state_cmp_full);
    dataOut_V_keep_V_1_load_B <= (dataOut_V_keep_V_1_state_cmp_full and dataOut_V_keep_V_1_sel_wr);
    dataOut_V_keep_V_1_sel <= dataOut_V_keep_V_1_sel_rd;
    dataOut_V_keep_V_1_state_cmp_full <= '0' when (dataOut_V_keep_V_1_state = ap_const_lv2_1) else '1';

    dataOut_V_keep_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op110_write_state3, ap_predicate_op123_write_state3, ap_predicate_op134_write_state3, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op110_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op134_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op123_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            dataOut_V_keep_V_1_vld_in <= ap_const_logic_1;
        else 
            dataOut_V_keep_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    dataOut_V_keep_V_1_vld_out <= dataOut_V_keep_V_1_state(0);
    dataOut_V_last_V_1_ack_in <= dataOut_V_last_V_1_state(1);
    dataOut_V_last_V_1_ack_out <= m_axis_ip_TREADY;

    dataOut_V_last_V_1_data_in_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op110_write_state3, ap_predicate_op123_write_state3, ap_predicate_op134_write_state3, tmp_last_V_3_reg_885_pp0_iter1_reg, tmp_last_V_reg_900_pp0_iter1_reg, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((ap_predicate_op134_write_state3 = ap_const_boolean_1)) then 
                dataOut_V_last_V_1_data_in <= ap_const_lv1_0;
            elsif ((ap_predicate_op123_write_state3 = ap_const_boolean_1)) then 
                dataOut_V_last_V_1_data_in <= tmp_last_V_reg_900_pp0_iter1_reg;
            elsif ((ap_predicate_op110_write_state3 = ap_const_boolean_1)) then 
                dataOut_V_last_V_1_data_in <= tmp_last_V_3_reg_885_pp0_iter1_reg;
            else 
                dataOut_V_last_V_1_data_in <= "X";
            end if;
        else 
            dataOut_V_last_V_1_data_in <= "X";
        end if; 
    end process;


    dataOut_V_last_V_1_data_out_assign_proc : process(dataOut_V_last_V_1_payload_A, dataOut_V_last_V_1_payload_B, dataOut_V_last_V_1_sel)
    begin
        if ((dataOut_V_last_V_1_sel = ap_const_logic_1)) then 
            dataOut_V_last_V_1_data_out <= dataOut_V_last_V_1_payload_B;
        else 
            dataOut_V_last_V_1_data_out <= dataOut_V_last_V_1_payload_A;
        end if; 
    end process;

    dataOut_V_last_V_1_load_A <= (not(dataOut_V_last_V_1_sel_wr) and dataOut_V_last_V_1_state_cmp_full);
    dataOut_V_last_V_1_load_B <= (dataOut_V_last_V_1_state_cmp_full and dataOut_V_last_V_1_sel_wr);
    dataOut_V_last_V_1_sel <= dataOut_V_last_V_1_sel_rd;
    dataOut_V_last_V_1_state_cmp_full <= '0' when (dataOut_V_last_V_1_state = ap_const_lv2_1) else '1';

    dataOut_V_last_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op110_write_state3, ap_predicate_op123_write_state3, ap_predicate_op134_write_state3, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op110_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op134_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op123_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            dataOut_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            dataOut_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    dataOut_V_last_V_1_vld_out <= dataOut_V_last_V_1_state(0);

    dataStreamBuffer4_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, dataStreamBuffer4_V_empty_n, ap_predicate_op8_read_state1, ap_predicate_op14_read_state1, ap_block_pp0_stage0)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1)))) then 
            dataStreamBuffer4_V_blk_n <= dataStreamBuffer4_V_empty_n;
        else 
            dataStreamBuffer4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    dataStreamBuffer4_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op8_read_state1, ap_predicate_op14_read_state1, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            dataStreamBuffer4_V_read <= ap_const_logic_1;
        else 
            dataStreamBuffer4_V_read <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_167_p3 <= dataStreamBuffer4_V_dout(72 downto 72);
    grp_nbreadreq_fu_114_p3 <= (0=>(dataStreamBuffer4_V_empty_n), others=>'-');
    grp_nbreadreq_fu_128_p3 <= (0=>(headerFifo_V_empty_n), others=>'-');

    headerFifo_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, headerFifo_V_empty_n, ap_predicate_op22_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op22_read_state1 = ap_const_boolean_1))) then 
            headerFifo_V_blk_n <= headerFifo_V_empty_n;
        else 
            headerFifo_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    headerFifo_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op22_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op22_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            headerFifo_V_read <= ap_const_logic_1;
        else 
            headerFifo_V_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln647_1_fu_643_p2 <= "1" when (unsigned(Lo_assign_fu_520_p3) > unsigned(ap_const_lv22_6F)) else "0";
    icmp_ln647_2_fu_306_p2 <= "1" when (unsigned(Lo_assign_1_fu_276_p3) > unsigned(or_ln78_1_fu_300_p2)) else "0";
    icmp_ln647_3_fu_404_p2 <= "1" when (unsigned(Lo_assign_1_fu_276_p3) > unsigned(ap_const_lv22_6F)) else "0";
    icmp_ln647_fu_549_p2 <= "1" when (unsigned(Lo_assign_fu_520_p3) > unsigned(or_ln78_fu_543_p2)) else "0";
    icmp_ln76_1_fu_294_p2 <= "1" when (unsigned(add_ln76_1_fu_288_p2) < unsigned(ap_const_lv23_71)) else "0";
    icmp_ln76_fu_537_p2 <= "1" when (unsigned(add_ln76_fu_531_p2) < unsigned(ap_const_lv23_71)) else "0";
    icmp_ln82_1_fu_398_p2 <= "1" when (unsigned(Lo_assign_1_fu_276_p3) < unsigned(ap_const_lv22_70)) else "0";
    icmp_ln82_fu_637_p2 <= "1" when (unsigned(Lo_assign_fu_520_p3) < unsigned(ap_const_lv22_70)) else "0";
    lshr_ln647_1_fu_819_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv112_FFFFFFFFFFFFFFFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln647_1_fu_816_p1(31-1 downto 0)))));
    lshr_ln647_2_fu_716_p2 <= std_logic_vector(shift_right(unsigned(select_ln647_4_fu_691_p3),to_integer(unsigned('0' & zext_ln647_2_fu_712_p1(31-1 downto 0)))));
    lshr_ln647_3_fu_837_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv112_FFFFFFFFFFFFFFFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln647_3_fu_834_p1(31-1 downto 0)))));
    lshr_ln647_4_fu_386_p2 <= std_logic_vector(shift_right(unsigned(select_ln647_7_fu_360_p3),to_integer(unsigned('0' & zext_ln647_4_fu_382_p1(31-1 downto 0)))));
    lshr_ln647_5_fu_758_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv112_FFFFFFFFFFFFFFFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln647_5_fu_755_p1(31-1 downto 0)))));
    lshr_ln647_6_fu_480_p2 <= std_logic_vector(shift_right(unsigned(select_ln647_10_fu_454_p3),to_integer(unsigned('0' & zext_ln647_6_fu_476_p1(31-1 downto 0)))));
    lshr_ln647_7_fu_776_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv112_FFFFFFFFFFFFFFFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln647_7_fu_773_p1(31-1 downto 0)))));
    lshr_ln647_fu_626_p2 <= std_logic_vector(shift_right(unsigned(select_ln647_1_fu_601_p3),to_integer(unsigned('0' & zext_ln647_fu_622_p1(31-1 downto 0)))));
    m_axis_ip_TDATA <= dataOut_V_data_V_1_data_out;

    m_axis_ip_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_predicate_op110_write_state3, ap_predicate_op123_write_state3, ap_predicate_op134_write_state3, dataOut_V_data_V_1_state, ap_predicate_op139_write_state4, ap_predicate_op143_write_state4, ap_predicate_op146_write_state4, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op110_write_state3 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_predicate_op146_write_state4 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_predicate_op143_write_state4 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_predicate_op139_write_state4 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op134_write_state3 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op123_write_state3 = ap_const_boolean_1)))) then 
            m_axis_ip_TDATA_blk_n <= dataOut_V_data_V_1_state(1);
        else 
            m_axis_ip_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    m_axis_ip_TKEEP <= dataOut_V_keep_V_1_data_out;
    m_axis_ip_TLAST <= dataOut_V_last_V_1_data_out;
    m_axis_ip_TVALID <= dataOut_V_last_V_1_state(0);
    or_ln78_1_fu_300_p2 <= (ap_const_lv22_3F or Lo_assign_1_fu_276_p3);
    or_ln78_fu_543_p2 <= (ap_const_lv22_3F or Lo_assign_fu_520_p3);
    p_Result_10_fu_843_p2 <= (lshr_ln647_3_fu_837_p2 and lshr_ln647_2_reg_983);
    p_Result_11_fu_764_p2 <= (lshr_ln647_5_fu_758_p2 and lshr_ln647_4_reg_948);
    p_Result_12_fu_782_p2 <= (lshr_ln647_7_fu_776_p2 and lshr_ln647_6_reg_958);
    p_Result_6_fu_791_p5 <= (tmp_data_V_reg_894_pp0_iter1_reg(63 downto 48) & trunc_ln215_1_fu_787_p1);
    p_Result_9_fu_825_p2 <= (lshr_ln647_reg_973 and lshr_ln647_1_fu_819_p2);
    p_Result_s_fu_852_p5 <= (ap_const_lv64_0(63 downto 48) & trunc_ln215_fu_848_p1);
    select_ln250_fu_198_p3 <= 
        ap_const_lv2_0 when (grp_fu_167_p3(0) = '1') else 
        ap_const_lv2_2;
    select_ln647_10_fu_454_p3 <= 
        tmp_18_fu_418_p4 when (icmp_ln647_3_fu_404_p2(0) = '1') else 
        header_header_V;
    select_ln647_11_fu_462_p3 <= 
        sub_ln647_11_fu_434_p2 when (icmp_ln647_3_fu_404_p2(0) = '1') else 
        tmp_17_fu_410_p3;
    select_ln647_1_fu_601_p3 <= 
        tmp_11_fu_566_p4 when (icmp_ln647_fu_549_p2(0) = '1') else 
        p_Val2_s_reg_922;
    select_ln647_2_fu_608_p3 <= 
        sub_ln647_1_fu_581_p2 when (icmp_ln647_fu_549_p2(0) = '1') else 
        tmp_10_fu_555_p3;
    select_ln647_3_fu_683_p3 <= 
        add_ln647_fu_665_p2 when (icmp_ln647_1_fu_643_p2(0) = '1') else 
        sub_ln647_5_fu_677_p2;
    select_ln647_4_fu_691_p3 <= 
        tmp_13_fu_656_p4 when (icmp_ln647_1_fu_643_p2(0) = '1') else 
        p_Val2_s_reg_922;
    select_ln647_5_fu_698_p3 <= 
        sub_ln647_4_fu_671_p2 when (icmp_ln647_1_fu_643_p2(0) = '1') else 
        tmp_12_fu_649_p3;
    select_ln647_6_fu_352_p3 <= 
        sub_ln647_7_fu_334_p2 when (icmp_ln647_2_fu_306_p2(0) = '1') else 
        sub_ln647_9_fu_346_p2;
    select_ln647_7_fu_360_p3 <= 
        tmp_16_fu_324_p4 when (icmp_ln647_2_fu_306_p2(0) = '1') else 
        header_header_V;
    select_ln647_8_fu_368_p3 <= 
        sub_ln647_8_fu_340_p2 when (icmp_ln647_2_fu_306_p2(0) = '1') else 
        tmp_15_fu_312_p3;
    select_ln647_9_fu_446_p3 <= 
        add_ln647_1_fu_428_p2 when (icmp_ln647_3_fu_404_p2(0) = '1') else 
        sub_ln647_12_fu_440_p2;
    select_ln647_fu_593_p3 <= 
        sub_ln647_fu_575_p2 when (icmp_ln647_fu_549_p2(0) = '1') else 
        sub_ln647_2_fu_587_p2;
    select_ln76_1_fu_486_p3 <= 
        add_ln79_1_fu_392_p2 when (icmp_ln76_1_fu_294_p2(0) = '1') else 
        header_idx;
    select_ln76_2_fu_802_p3 <= 
        trunc_ln364_1_fu_769_p1 when (icmp_ln76_1_reg_938(0) = '1') else 
        tmp_data_V_reg_894_pp0_iter1_reg;
    select_ln76_fu_722_p3 <= 
        add_ln79_fu_632_p2 when (icmp_ln76_fu_537_p2(0) = '1') else 
        packetHeader_idx_rea_reg_915;
    select_ln82_2_fu_506_p3 <= 
        add_ln79_1_fu_392_p2 when (and_ln82_1_fu_500_p2(0) = '1') else 
        select_ln76_1_fu_486_p3;
    select_ln82_fu_741_p3 <= 
        add_ln79_fu_632_p2 when (and_ln82_fu_735_p2(0) = '1') else 
        select_ln76_fu_722_p3;
    sub_ln647_10_fu_376_p2 <= std_logic_vector(signed(ap_const_lv7_6F) - signed(select_ln647_6_fu_352_p3));
    sub_ln647_11_fu_434_p2 <= std_logic_vector(signed(ap_const_lv7_6F) - signed(tmp_17_fu_410_p3));
    sub_ln647_12_fu_440_p2 <= std_logic_vector(signed(ap_const_lv7_6F) - signed(tmp_17_fu_410_p3));
    sub_ln647_13_fu_470_p2 <= std_logic_vector(signed(ap_const_lv7_6F) - signed(select_ln647_9_fu_446_p3));
    sub_ln647_1_fu_581_p2 <= std_logic_vector(signed(ap_const_lv7_6F) - signed(tmp_10_fu_555_p3));
    sub_ln647_2_fu_587_p2 <= std_logic_vector(unsigned(trunc_ln647_fu_562_p1) - unsigned(tmp_10_fu_555_p3));
    sub_ln647_3_fu_616_p2 <= std_logic_vector(signed(ap_const_lv7_6F) - signed(select_ln647_fu_593_p3));
    sub_ln647_4_fu_671_p2 <= std_logic_vector(signed(ap_const_lv7_6F) - signed(tmp_12_fu_649_p3));
    sub_ln647_5_fu_677_p2 <= std_logic_vector(signed(ap_const_lv7_6F) - signed(tmp_12_fu_649_p3));
    sub_ln647_6_fu_706_p2 <= std_logic_vector(signed(ap_const_lv7_6F) - signed(select_ln647_3_fu_683_p3));
    sub_ln647_7_fu_334_p2 <= std_logic_vector(unsigned(tmp_15_fu_312_p3) - unsigned(trunc_ln647_1_fu_320_p1));
    sub_ln647_8_fu_340_p2 <= std_logic_vector(signed(ap_const_lv7_6F) - signed(tmp_15_fu_312_p3));
    sub_ln647_9_fu_346_p2 <= std_logic_vector(unsigned(trunc_ln647_1_fu_320_p1) - unsigned(tmp_15_fu_312_p3));
    sub_ln647_fu_575_p2 <= std_logic_vector(unsigned(tmp_10_fu_555_p3) - unsigned(trunc_ln647_fu_562_p1));
    tmp_10_fu_555_p3 <= (tmp_9_reg_933 & ap_const_lv6_0);
    
    tmp_11_fu_566_p4_proc : process(tmp60_reg_909)
    variable vlo_cpy : STD_LOGIC_VECTOR(129+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(129+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(129 - 1 downto 0);
    variable tmp_11_fu_566_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(129 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(129 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(129 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(8 - 1 downto 0) := ap_const_lv32_80(8 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(8 - 1 downto 0) := ap_const_lv32_11(8 - 1 downto 0);
        v0_cpy := tmp60_reg_909;
        if (vlo_cpy(8 - 1 downto 0) > vhi_cpy(8 - 1 downto 0)) then
            vhi_cpy(8-1 downto 0) := std_logic_vector(129-1-unsigned(ap_const_lv32_11(8-1 downto 0)));
            vlo_cpy(8-1 downto 0) := std_logic_vector(129-1-unsigned(ap_const_lv32_80(8-1 downto 0)));
            for tmp_11_fu_566_p4_i in 0 to 129-1 loop
                v0_cpy(tmp_11_fu_566_p4_i) := tmp60_reg_909(129-1-tmp_11_fu_566_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(8-1 downto 0)))));

        section := (others=>'0');
        section(8-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(8-1 downto 0)) - unsigned(vlo_cpy(8-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(129-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_11_fu_566_p4 <= resvalue(112-1 downto 0);
    end process;

    tmp_12_fu_649_p3 <= (tmp_8_reg_928 & ap_const_lv6_0);
    
    tmp_13_fu_656_p4_proc : process(tmp60_reg_909)
    variable vlo_cpy : STD_LOGIC_VECTOR(129+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(129+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(129 - 1 downto 0);
    variable tmp_13_fu_656_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(129 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(129 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(129 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(8 - 1 downto 0) := ap_const_lv32_80(8 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(8 - 1 downto 0) := ap_const_lv32_11(8 - 1 downto 0);
        v0_cpy := tmp60_reg_909;
        if (vlo_cpy(8 - 1 downto 0) > vhi_cpy(8 - 1 downto 0)) then
            vhi_cpy(8-1 downto 0) := std_logic_vector(129-1-unsigned(ap_const_lv32_11(8-1 downto 0)));
            vlo_cpy(8-1 downto 0) := std_logic_vector(129-1-unsigned(ap_const_lv32_80(8-1 downto 0)));
            for tmp_13_fu_656_p4_i in 0 to 129-1 loop
                v0_cpy(tmp_13_fu_656_p4_i) := tmp60_reg_909(129-1-tmp_13_fu_656_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(8-1 downto 0)))));

        section := (others=>'0');
        section(8-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(8-1 downto 0)) - unsigned(vlo_cpy(8-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(129-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_13_fu_656_p4 <= resvalue(112-1 downto 0);
    end process;

    tmp_15_fu_312_p3 <= (trunc_ln76_1_fu_272_p1 & ap_const_lv6_0);
    
    tmp_16_fu_324_p4_proc : process(header_header_V)
    variable vlo_cpy : STD_LOGIC_VECTOR(112+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(112+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(112 - 1 downto 0);
    variable tmp_16_fu_324_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(112 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(112 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(112 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(7 - 1 downto 0) := ap_const_lv32_6F(7 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(7 - 1 downto 0) := ap_const_lv32_0(7 - 1 downto 0);
        v0_cpy := header_header_V;
        if (vlo_cpy(7 - 1 downto 0) > vhi_cpy(7 - 1 downto 0)) then
            vhi_cpy(7-1 downto 0) := std_logic_vector(112-1-unsigned(ap_const_lv32_0(7-1 downto 0)));
            vlo_cpy(7-1 downto 0) := std_logic_vector(112-1-unsigned(ap_const_lv32_6F(7-1 downto 0)));
            for tmp_16_fu_324_p4_i in 0 to 112-1 loop
                v0_cpy(tmp_16_fu_324_p4_i) := header_header_V(112-1-tmp_16_fu_324_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(7-1 downto 0)))));

        section := (others=>'0');
        section(7-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(7-1 downto 0)) - unsigned(vlo_cpy(7-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(112-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_16_fu_324_p4 <= resvalue(112-1 downto 0);
    end process;

    tmp_17_fu_410_p3 <= (trunc_ln76_fu_268_p1 & ap_const_lv6_0);
    
    tmp_18_fu_418_p4_proc : process(header_header_V)
    variable vlo_cpy : STD_LOGIC_VECTOR(112+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(112+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(112 - 1 downto 0);
    variable tmp_18_fu_418_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(112 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(112 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(112 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(7 - 1 downto 0) := ap_const_lv32_6F(7 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(7 - 1 downto 0) := ap_const_lv32_0(7 - 1 downto 0);
        v0_cpy := header_header_V;
        if (vlo_cpy(7 - 1 downto 0) > vhi_cpy(7 - 1 downto 0)) then
            vhi_cpy(7-1 downto 0) := std_logic_vector(112-1-unsigned(ap_const_lv32_0(7-1 downto 0)));
            vlo_cpy(7-1 downto 0) := std_logic_vector(112-1-unsigned(ap_const_lv32_6F(7-1 downto 0)));
            for tmp_18_fu_418_p4_i in 0 to 112-1 loop
                v0_cpy(tmp_18_fu_418_p4_i) := header_header_V(112-1-tmp_18_fu_418_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(7-1 downto 0)))));

        section := (others=>'0');
        section(7-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(7-1 downto 0)) - unsigned(vlo_cpy(7-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(112-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_18_fu_418_p4 <= resvalue(112-1 downto 0);
    end process;

    tmp_data_V_2_fu_808_p3 <= 
        p_Result_6_fu_791_p5 when (and_ln82_1_reg_963(0) = '1') else 
        select_ln76_2_fu_802_p3;
    tmp_data_V_3_fu_184_p1 <= dataStreamBuffer4_V_dout(64 - 1 downto 0);
    tmp_data_V_fu_194_p1 <= dataStreamBuffer4_V_dout(64 - 1 downto 0);
    trunc_ln215_1_fu_787_p1 <= p_Result_12_fu_782_p2(48 - 1 downto 0);
    trunc_ln215_fu_848_p1 <= p_Result_10_fu_843_p2(48 - 1 downto 0);
    trunc_ln364_1_fu_769_p1 <= p_Result_11_fu_764_p2(64 - 1 downto 0);
    trunc_ln364_fu_830_p1 <= p_Result_9_fu_825_p2(64 - 1 downto 0);
    trunc_ln647_1_fu_320_p1 <= or_ln78_1_fu_300_p2(7 - 1 downto 0);
    trunc_ln647_fu_562_p1 <= or_ln78_fu_543_p2(7 - 1 downto 0);
    trunc_ln76_1_fu_272_p1 <= header_idx(1 - 1 downto 0);
    trunc_ln76_fu_268_p1 <= header_idx(1 - 1 downto 0);
    xor_ln76_1_fu_494_p2 <= (icmp_ln76_1_fu_294_p2 xor ap_const_lv1_1);
    xor_ln76_fu_729_p2 <= (icmp_ln76_fu_537_p2 xor ap_const_lv1_1);
    zext_ln647_1_fu_816_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln647_3_reg_968),112));
    zext_ln647_2_fu_712_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln647_5_fu_698_p3),112));
    zext_ln647_3_fu_834_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln647_6_reg_978),112));
    zext_ln647_4_fu_382_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln647_8_fu_368_p3),112));
    zext_ln647_5_fu_755_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln647_10_reg_943),112));
    zext_ln647_6_fu_476_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln647_11_fu_462_p3),112));
    zext_ln647_7_fu_773_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln647_13_reg_953),112));
    zext_ln647_fu_622_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln647_2_fu_608_p3),112));
    zext_ln76_1_fu_284_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Lo_assign_1_fu_276_p3),23));
    zext_ln76_fu_527_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Lo_assign_fu_520_p3),23));
end behav;
