-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity extract_ip_address is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    s_axis_ip_TVALID : IN STD_LOGIC;
    dataStreamBuffer0_V_din : OUT STD_LOGIC_VECTOR (72 downto 0);
    dataStreamBuffer0_V_full_n : IN STD_LOGIC;
    dataStreamBuffer0_V_write : OUT STD_LOGIC;
    arpTableOut_V_V_TREADY : IN STD_LOGIC;
    s_axis_ip_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    s_axis_ip_TREADY : OUT STD_LOGIC;
    s_axis_ip_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
    s_axis_ip_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    arpTableOut_V_V_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    arpTableOut_V_V_TVALID : OUT STD_LOGIC;
    regSubNetMask_V : IN STD_LOGIC_VECTOR (31 downto 0);
    regDefaultGateway_V : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of extract_ip_address is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv23_40 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000001000000";
    constant ap_const_lv23_A0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000010100000";
    constant ap_const_lv22_3F : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000111111";
    constant ap_const_lv22_9F : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000010011111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv8_9F : STD_LOGIC_VECTOR (7 downto 0) := "10011111";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv160_lc_2 : STD_LOGIC_VECTOR (159 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal tmp_nbreadreq_fu_104_p5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal tmp_reg_497 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal arpTableOut_V_V_1_ack_in : STD_LOGIC;
    signal tmp_reg_497_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln53_reg_551 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln53_reg_551_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_564 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op76_write_state4 : BOOLEAN;
    signal ap_predicate_op77_write_state4 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal arpTableOut_V_V_1_ack_out : STD_LOGIC;
    signal arpTableOut_V_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal tmp_reg_497_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln53_reg_551_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_564_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op82_write_state5 : BOOLEAN;
    signal ap_predicate_op84_write_state5 : BOOLEAN;
    signal ap_block_state5_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal arpTableOut_V_V_1_data_in : STD_LOGIC_VECTOR (31 downto 0);
    signal arpTableOut_V_V_1_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal arpTableOut_V_V_1_vld_in : STD_LOGIC;
    signal arpTableOut_V_V_1_vld_out : STD_LOGIC;
    signal arpTableOut_V_V_1_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal arpTableOut_V_V_1_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal arpTableOut_V_V_1_sel_rd : STD_LOGIC := '0';
    signal arpTableOut_V_V_1_sel_wr : STD_LOGIC := '0';
    signal arpTableOut_V_V_1_sel : STD_LOGIC;
    signal arpTableOut_V_V_1_load_A : STD_LOGIC;
    signal arpTableOut_V_V_1_load_B : STD_LOGIC;
    signal arpTableOut_V_V_1_state_cmp_full : STD_LOGIC;
    signal header_ready : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal header_idx_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal header_header_V_1 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000101";
    signal metaWritten : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal s_axis_ip_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal arpTableOut_V_V_TDATA_blk_n : STD_LOGIC;
    signal dataStreamBuffer0_V_blk_n : STD_LOGIC;
    signal tmp_reg_497_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_V_reg_501 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_keep_V_reg_507 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_last_V_reg_512 : STD_LOGIC_VECTOR (0 downto 0);
    signal header_ready_load_load_fu_182_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal header_ready_load_reg_518 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln58_fu_191_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln58_reg_522 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln58_1_fu_233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_1_reg_527 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln58_1_fu_239_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln58_1_reg_535 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln73_fu_257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln73_reg_541 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln67_fu_263_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln67_reg_546 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln53_fu_440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln67_fu_446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dstIpAddress_V_fu_460_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal dstIpAddress_V_reg_559 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln879_fu_480_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_phi_ln73_phi_fu_143_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln73_reg_140 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_fu_250_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_write_flag_1_i_i_phi_fu_152_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_write_flag_1_i_i_reg_149 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln58_fu_243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_metaWritten_flag_0_i_phi_fu_162_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_metaWritten_flag_0_i_reg_159 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln67_fu_269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln67_fu_275_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln58_fu_411_p2 : STD_LOGIC_VECTOR (159 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal Lo_assign_fu_195_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln58_fu_203_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln58_fu_207_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln58_fu_213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln60_fu_219_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln58_fu_225_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_27_fu_302_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln58_fu_309_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln58_1_fu_315_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln58_3_fu_327_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln58_2_fu_321_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln58_1_fu_334_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_2_fu_299_p1 : STD_LOGIC_VECTOR (159 downto 0);
    signal zext_ln58_1_fu_340_p1 : STD_LOGIC_VECTOR (159 downto 0);
    signal shl_ln58_fu_352_p2 : STD_LOGIC_VECTOR (159 downto 0);
    signal tmp_28_fu_358_p4 : STD_LOGIC_VECTOR (159 downto 0);
    signal zext_ln58_2_fu_344_p1 : STD_LOGIC_VECTOR (159 downto 0);
    signal zext_ln58_3_fu_348_p1 : STD_LOGIC_VECTOR (159 downto 0);
    signal shl_ln58_1_fu_375_p2 : STD_LOGIC_VECTOR (159 downto 0);
    signal lshr_ln58_fu_381_p2 : STD_LOGIC_VECTOR (159 downto 0);
    signal and_ln58_fu_387_p2 : STD_LOGIC_VECTOR (159 downto 0);
    signal xor_ln58_1_fu_393_p2 : STD_LOGIC_VECTOR (159 downto 0);
    signal select_ln58_4_fu_368_p3 : STD_LOGIC_VECTOR (159 downto 0);
    signal and_ln58_1_fu_399_p2 : STD_LOGIC_VECTOR (159 downto 0);
    signal and_ln58_2_fu_405_p2 : STD_LOGIC_VECTOR (159 downto 0);
    signal xor_ln53_fu_435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln879_fu_470_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln879_fu_475_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to3 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_221 : BOOLEAN;
    signal ap_condition_206 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    arpTableOut_V_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                arpTableOut_V_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((arpTableOut_V_V_1_ack_out = ap_const_logic_1) and (arpTableOut_V_V_1_vld_out = ap_const_logic_1))) then 
                                        arpTableOut_V_V_1_sel_rd <= not(arpTableOut_V_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    arpTableOut_V_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                arpTableOut_V_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((arpTableOut_V_V_1_ack_in = ap_const_logic_1) and (arpTableOut_V_V_1_vld_in = ap_const_logic_1))) then 
                                        arpTableOut_V_V_1_sel_wr <= not(arpTableOut_V_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    arpTableOut_V_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                arpTableOut_V_V_1_state <= ap_const_lv2_0;
            else
                if ((((arpTableOut_V_V_1_state = ap_const_lv2_3) and (arpTableOut_V_V_1_vld_in = ap_const_logic_0) and (arpTableOut_V_V_1_ack_out = ap_const_logic_1)) or ((arpTableOut_V_V_1_state = ap_const_lv2_2) and (arpTableOut_V_V_1_vld_in = ap_const_logic_0)))) then 
                    arpTableOut_V_V_1_state <= ap_const_lv2_2;
                elsif ((((arpTableOut_V_V_1_state = ap_const_lv2_1) and (arpTableOut_V_V_TREADY = ap_const_logic_0)) or ((arpTableOut_V_V_1_state = ap_const_lv2_3) and (arpTableOut_V_V_TREADY = ap_const_logic_0) and (arpTableOut_V_V_1_vld_in = ap_const_logic_1)))) then 
                    arpTableOut_V_V_1_state <= ap_const_lv2_1;
                elsif ((((arpTableOut_V_V_1_state = ap_const_lv2_1) and (arpTableOut_V_V_1_ack_out = ap_const_logic_1)) or (not(((arpTableOut_V_V_1_vld_in = ap_const_logic_0) and (arpTableOut_V_V_1_ack_out = ap_const_logic_1))) and not(((arpTableOut_V_V_TREADY = ap_const_logic_0) and (arpTableOut_V_V_1_vld_in = ap_const_logic_1))) and (arpTableOut_V_V_1_state = ap_const_lv2_3)) or ((arpTableOut_V_V_1_state = ap_const_lv2_2) and (arpTableOut_V_V_1_vld_in = ap_const_logic_1)))) then 
                    arpTableOut_V_V_1_state <= ap_const_lv2_3;
                else 
                    arpTableOut_V_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((arpTableOut_V_V_1_load_A = ap_const_logic_1)) then
                arpTableOut_V_V_1_payload_A <= arpTableOut_V_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((arpTableOut_V_V_1_load_B = ap_const_logic_1)) then
                arpTableOut_V_V_1_payload_B <= arpTableOut_V_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln53_reg_551 = ap_const_lv1_0) and (tmp_reg_497_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                dstIpAddress_V_reg_559 <= header_header_V_1(159 downto 128);
                icmp_ln879_reg_564 <= icmp_ln879_fu_480_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((header_ready_load_reg_518 = ap_const_lv1_0) and (tmp_reg_497 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                header_header_V_1 <= or_ln58_fu_411_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_nbreadreq_fu_104_p5 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                header_idx_1 <= select_ln67_fu_275_p3;
                header_ready <= and_ln67_fu_269_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_nbreadreq_fu_104_p5 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                header_ready_load_reg_518 <= header_ready;
                or_ln73_reg_541 <= or_ln73_fu_257_p2;
                tmp_data_V_reg_501 <= s_axis_ip_TDATA;
                tmp_keep_V_reg_507 <= s_axis_ip_TKEEP;
                tmp_last_V_reg_512 <= s_axis_ip_TLAST;
                xor_ln67_reg_546 <= xor_ln67_fu_263_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((header_ready_load_load_fu_182_p1 = ap_const_lv1_0) and (tmp_nbreadreq_fu_104_p5 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln58_1_reg_527 <= icmp_ln58_1_fu_233_p2;
                    trunc_ln58_1_reg_535(7 downto 5) <= trunc_ln58_1_fu_239_p1(7 downto 5);
                trunc_ln58_reg_522 <= trunc_ln58_fu_191_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln879_reg_564_pp0_iter3_reg <= icmp_ln879_reg_564;
                or_ln53_reg_551_pp0_iter2_reg <= or_ln53_reg_551;
                or_ln53_reg_551_pp0_iter3_reg <= or_ln53_reg_551_pp0_iter2_reg;
                tmp_reg_497_pp0_iter2_reg <= tmp_reg_497_pp0_iter1_reg;
                tmp_reg_497_pp0_iter3_reg <= tmp_reg_497_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_497 = ap_const_lv1_1) and (or_ln67_fu_446_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                metaWritten <= xor_ln67_reg_546;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_497 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                or_ln53_reg_551 <= or_ln53_fu_440_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_reg_497 <= tmp_nbreadreq_fu_104_p5;
                tmp_reg_497_pp0_iter1_reg <= tmp_reg_497;
            end if;
        end if;
    end process;
    trunc_ln58_1_reg_535(4 downto 0) <= "11111";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Lo_assign_fu_195_p3 <= (header_idx_1 & ap_const_lv6_0);
    add_ln58_fu_207_p2 <= std_logic_vector(unsigned(zext_ln58_fu_203_p1) + unsigned(ap_const_lv23_40));
    add_ln67_fu_250_p2 <= std_logic_vector(unsigned(header_idx_1) + unsigned(ap_const_lv16_1));
    and_ln58_1_fu_399_p2 <= (xor_ln58_1_fu_393_p2 and header_header_V_1);
    and_ln58_2_fu_405_p2 <= (select_ln58_4_fu_368_p3 and and_ln58_fu_387_p2);
    and_ln58_fu_387_p2 <= (shl_ln58_1_fu_375_p2 and lshr_ln58_fu_381_p2);
    and_ln67_fu_269_p2 <= (xor_ln67_fu_263_p2 and or_ln73_fu_257_p2);
    and_ln879_fu_475_p2 <= (xor_ln879_fu_470_p2 and regSubNetMask_V);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, s_axis_ip_TVALID, tmp_nbreadreq_fu_104_p5, dataStreamBuffer0_V_full_n, tmp_reg_497, arpTableOut_V_V_TREADY, arpTableOut_V_V_1_state)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((tmp_reg_497 = ap_const_lv1_1) and (dataStreamBuffer0_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_104_p5 = ap_const_lv1_1) and (s_axis_ip_TVALID = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and ((arpTableOut_V_V_1_state = ap_const_lv2_1) or ((arpTableOut_V_V_1_state = ap_const_lv2_3) and (arpTableOut_V_V_TREADY = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, s_axis_ip_TVALID, tmp_nbreadreq_fu_104_p5, dataStreamBuffer0_V_full_n, tmp_reg_497, arpTableOut_V_V_TREADY, ap_block_state4_io, arpTableOut_V_V_1_state, ap_block_state5_io)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_io)) or ((tmp_reg_497 = ap_const_lv1_1) and (dataStreamBuffer0_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_104_p5 = ap_const_lv1_1) and (s_axis_ip_TVALID = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and ((arpTableOut_V_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state5_io) or ((arpTableOut_V_V_1_state = ap_const_lv2_3) and (arpTableOut_V_V_TREADY = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, s_axis_ip_TVALID, tmp_nbreadreq_fu_104_p5, dataStreamBuffer0_V_full_n, tmp_reg_497, arpTableOut_V_V_TREADY, ap_block_state4_io, arpTableOut_V_V_1_state, ap_block_state5_io)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_io)) or ((tmp_reg_497 = ap_const_lv1_1) and (dataStreamBuffer0_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_104_p5 = ap_const_lv1_1) and (s_axis_ip_TVALID = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and ((arpTableOut_V_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state5_io) or ((arpTableOut_V_V_1_state = ap_const_lv2_3) and (arpTableOut_V_V_TREADY = ap_const_logic_0)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg, s_axis_ip_TVALID, tmp_nbreadreq_fu_104_p5)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_104_p5 = ap_const_lv1_1) and (s_axis_ip_TVALID = ap_const_logic_0)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(dataStreamBuffer0_V_full_n, tmp_reg_497)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((tmp_reg_497 = ap_const_lv1_1) and (dataStreamBuffer0_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_io_assign_proc : process(arpTableOut_V_V_1_ack_in, ap_predicate_op76_write_state4, ap_predicate_op77_write_state4)
    begin
                ap_block_state4_io <= (((arpTableOut_V_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op77_write_state4 = ap_const_boolean_1)) or ((arpTableOut_V_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op76_write_state4 = ap_const_boolean_1)));
    end process;

        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_io_assign_proc : process(arpTableOut_V_V_1_ack_in, ap_predicate_op82_write_state5, ap_predicate_op84_write_state5)
    begin
                ap_block_state5_io <= (((arpTableOut_V_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op84_write_state5 = ap_const_boolean_1)) or ((arpTableOut_V_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op82_write_state5 = ap_const_boolean_1)));
    end process;


    ap_block_state5_pp0_stage0_iter4_assign_proc : process(arpTableOut_V_V_TREADY, arpTableOut_V_V_1_state)
    begin
                ap_block_state5_pp0_stage0_iter4 <= ((arpTableOut_V_V_1_state = ap_const_lv2_1) or ((arpTableOut_V_V_1_state = ap_const_lv2_3) and (arpTableOut_V_V_TREADY = ap_const_logic_0)));
    end process;


    ap_condition_206_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_104_p5, ap_block_pp0_stage0)
    begin
                ap_condition_206 <= ((tmp_nbreadreq_fu_104_p5 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_221_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_497, ap_block_pp0_stage0)
    begin
                ap_condition_221 <= ((tmp_reg_497 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to3 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_metaWritten_flag_0_i_phi_fu_162_p4_assign_proc : process(or_ln53_fu_440_p2, ap_phi_reg_pp0_iter1_metaWritten_flag_0_i_reg_159, ap_condition_221)
    begin
        if ((ap_const_boolean_1 = ap_condition_221)) then
            if ((or_ln53_fu_440_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_metaWritten_flag_0_i_phi_fu_162_p4 <= ap_const_lv1_0;
            elsif ((or_ln53_fu_440_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_metaWritten_flag_0_i_phi_fu_162_p4 <= ap_const_lv1_1;
            else 
                ap_phi_mux_metaWritten_flag_0_i_phi_fu_162_p4 <= ap_phi_reg_pp0_iter1_metaWritten_flag_0_i_reg_159;
            end if;
        else 
            ap_phi_mux_metaWritten_flag_0_i_phi_fu_162_p4 <= ap_phi_reg_pp0_iter1_metaWritten_flag_0_i_reg_159;
        end if; 
    end process;


    ap_phi_mux_phi_ln73_phi_fu_143_p4_assign_proc : process(header_idx_1, header_ready_load_load_fu_182_p1, ap_phi_reg_pp0_iter0_phi_ln73_reg_140, add_ln67_fu_250_p2, ap_condition_206)
    begin
        if ((ap_const_boolean_1 = ap_condition_206)) then
            if ((header_ready_load_load_fu_182_p1 = ap_const_lv1_0)) then 
                ap_phi_mux_phi_ln73_phi_fu_143_p4 <= add_ln67_fu_250_p2;
            elsif ((header_ready_load_load_fu_182_p1 = ap_const_lv1_1)) then 
                ap_phi_mux_phi_ln73_phi_fu_143_p4 <= header_idx_1;
            else 
                ap_phi_mux_phi_ln73_phi_fu_143_p4 <= ap_phi_reg_pp0_iter0_phi_ln73_reg_140;
            end if;
        else 
            ap_phi_mux_phi_ln73_phi_fu_143_p4 <= ap_phi_reg_pp0_iter0_phi_ln73_reg_140;
        end if; 
    end process;


    ap_phi_mux_write_flag_1_i_i_phi_fu_152_p4_assign_proc : process(header_ready_load_load_fu_182_p1, ap_phi_reg_pp0_iter0_write_flag_1_i_i_reg_149, xor_ln58_fu_243_p2, ap_condition_206)
    begin
        if ((ap_const_boolean_1 = ap_condition_206)) then
            if ((header_ready_load_load_fu_182_p1 = ap_const_lv1_0)) then 
                ap_phi_mux_write_flag_1_i_i_phi_fu_152_p4 <= xor_ln58_fu_243_p2;
            elsif ((header_ready_load_load_fu_182_p1 = ap_const_lv1_1)) then 
                ap_phi_mux_write_flag_1_i_i_phi_fu_152_p4 <= ap_const_lv1_0;
            else 
                ap_phi_mux_write_flag_1_i_i_phi_fu_152_p4 <= ap_phi_reg_pp0_iter0_write_flag_1_i_i_reg_149;
            end if;
        else 
            ap_phi_mux_write_flag_1_i_i_phi_fu_152_p4 <= ap_phi_reg_pp0_iter0_write_flag_1_i_i_reg_149;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_phi_ln73_reg_140 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_write_flag_1_i_i_reg_149 <= "X";
    ap_phi_reg_pp0_iter1_metaWritten_flag_0_i_reg_159 <= "X";

    ap_predicate_op76_write_state4_assign_proc : process(tmp_reg_497_pp0_iter2_reg, or_ln53_reg_551_pp0_iter2_reg, icmp_ln879_reg_564)
    begin
                ap_predicate_op76_write_state4 <= ((icmp_ln879_reg_564 = ap_const_lv1_0) and (or_ln53_reg_551_pp0_iter2_reg = ap_const_lv1_0) and (tmp_reg_497_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op77_write_state4_assign_proc : process(tmp_reg_497_pp0_iter2_reg, or_ln53_reg_551_pp0_iter2_reg, icmp_ln879_reg_564)
    begin
                ap_predicate_op77_write_state4 <= ((or_ln53_reg_551_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln879_reg_564 = ap_const_lv1_1) and (tmp_reg_497_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op82_write_state5_assign_proc : process(tmp_reg_497_pp0_iter3_reg, or_ln53_reg_551_pp0_iter3_reg, icmp_ln879_reg_564_pp0_iter3_reg)
    begin
                ap_predicate_op82_write_state5 <= ((icmp_ln879_reg_564_pp0_iter3_reg = ap_const_lv1_0) and (or_ln53_reg_551_pp0_iter3_reg = ap_const_lv1_0) and (tmp_reg_497_pp0_iter3_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op84_write_state5_assign_proc : process(tmp_reg_497_pp0_iter3_reg, or_ln53_reg_551_pp0_iter3_reg, icmp_ln879_reg_564_pp0_iter3_reg)
    begin
                ap_predicate_op84_write_state5 <= ((or_ln53_reg_551_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln879_reg_564_pp0_iter3_reg = ap_const_lv1_1) and (tmp_reg_497_pp0_iter3_reg = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to3)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to3 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    arpTableOut_V_V_1_ack_in <= arpTableOut_V_V_1_state(1);
    arpTableOut_V_V_1_ack_out <= arpTableOut_V_V_TREADY;

    arpTableOut_V_V_1_data_in_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op76_write_state4, ap_predicate_op77_write_state4, regDefaultGateway_V, dstIpAddress_V_reg_559, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
            if ((ap_predicate_op77_write_state4 = ap_const_boolean_1)) then 
                arpTableOut_V_V_1_data_in <= dstIpAddress_V_reg_559;
            elsif ((ap_predicate_op76_write_state4 = ap_const_boolean_1)) then 
                arpTableOut_V_V_1_data_in <= regDefaultGateway_V;
            else 
                arpTableOut_V_V_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            arpTableOut_V_V_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    arpTableOut_V_V_1_data_out_assign_proc : process(arpTableOut_V_V_1_payload_A, arpTableOut_V_V_1_payload_B, arpTableOut_V_V_1_sel)
    begin
        if ((arpTableOut_V_V_1_sel = ap_const_logic_1)) then 
            arpTableOut_V_V_1_data_out <= arpTableOut_V_V_1_payload_B;
        else 
            arpTableOut_V_V_1_data_out <= arpTableOut_V_V_1_payload_A;
        end if; 
    end process;

    arpTableOut_V_V_1_load_A <= (not(arpTableOut_V_V_1_sel_wr) and arpTableOut_V_V_1_state_cmp_full);
    arpTableOut_V_V_1_load_B <= (arpTableOut_V_V_1_state_cmp_full and arpTableOut_V_V_1_sel_wr);
    arpTableOut_V_V_1_sel <= arpTableOut_V_V_1_sel_rd;
    arpTableOut_V_V_1_state_cmp_full <= '0' when (arpTableOut_V_V_1_state = ap_const_lv2_1) else '1';

    arpTableOut_V_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op76_write_state4, ap_predicate_op77_write_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_predicate_op77_write_state4 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_predicate_op76_write_state4 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            arpTableOut_V_V_1_vld_in <= ap_const_logic_1;
        else 
            arpTableOut_V_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    arpTableOut_V_V_1_vld_out <= arpTableOut_V_V_1_state(0);
    arpTableOut_V_V_TDATA <= arpTableOut_V_V_1_data_out;

    arpTableOut_V_V_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_predicate_op76_write_state4, ap_predicate_op77_write_state4, arpTableOut_V_V_1_state, ap_predicate_op82_write_state5, ap_predicate_op84_write_state5, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_predicate_op77_write_state4 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_predicate_op76_write_state4 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_predicate_op84_write_state5 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_predicate_op82_write_state5 = ap_const_boolean_1)))) then 
            arpTableOut_V_V_TDATA_blk_n <= arpTableOut_V_V_1_state(1);
        else 
            arpTableOut_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    arpTableOut_V_V_TVALID <= arpTableOut_V_V_1_state(0);

    dataStreamBuffer0_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, dataStreamBuffer0_V_full_n, tmp_reg_497, ap_block_pp0_stage0)
    begin
        if (((tmp_reg_497 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dataStreamBuffer0_V_blk_n <= dataStreamBuffer0_V_full_n;
        else 
            dataStreamBuffer0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dataStreamBuffer0_V_din <= ((tmp_last_V_reg_512 & tmp_keep_V_reg_507) & tmp_data_V_reg_501);

    dataStreamBuffer0_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_497, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_reg_497 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dataStreamBuffer0_V_write <= ap_const_logic_1;
        else 
            dataStreamBuffer0_V_write <= ap_const_logic_0;
        end if; 
    end process;

    dstIpAddress_V_fu_460_p4 <= header_header_V_1(159 downto 128);
    header_ready_load_load_fu_182_p1 <= header_ready;
    icmp_ln58_1_fu_233_p2 <= "1" when (unsigned(Lo_assign_fu_195_p3) > unsigned(select_ln58_fu_225_p3)) else "0";
    icmp_ln58_fu_213_p2 <= "1" when (unsigned(add_ln58_fu_207_p2) < unsigned(ap_const_lv23_A0)) else "0";
    icmp_ln879_fu_480_p2 <= "1" when (and_ln879_fu_475_p2 = ap_const_lv32_0) else "0";
    lshr_ln58_fu_381_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv160_lc_2),to_integer(unsigned('0' & zext_ln58_3_fu_348_p1(31-1 downto 0)))));
    or_ln53_fu_440_p2 <= (xor_ln53_fu_435_p2 or metaWritten);
    or_ln58_fu_411_p2 <= (and_ln58_2_fu_405_p2 or and_ln58_1_fu_399_p2);
    or_ln60_fu_219_p2 <= (ap_const_lv22_3F or Lo_assign_fu_195_p3);
    or_ln67_fu_446_p2 <= (tmp_last_V_reg_512 or ap_phi_mux_metaWritten_flag_0_i_phi_fu_162_p4);
    or_ln73_fu_257_p2 <= (header_ready or ap_phi_mux_write_flag_1_i_i_phi_fu_152_p4);

    s_axis_ip_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, s_axis_ip_TVALID, tmp_nbreadreq_fu_104_p5, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (tmp_nbreadreq_fu_104_p5 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            s_axis_ip_TDATA_blk_n <= s_axis_ip_TVALID;
        else 
            s_axis_ip_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    s_axis_ip_TREADY_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_104_p5, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_nbreadreq_fu_104_p5 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            s_axis_ip_TREADY <= ap_const_logic_1;
        else 
            s_axis_ip_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    select_ln58_1_fu_315_p3 <= 
        tmp_27_fu_302_p3 when (icmp_ln58_1_reg_527(0) = '1') else 
        trunc_ln58_1_reg_535;
    select_ln58_2_fu_321_p3 <= 
        trunc_ln58_1_reg_535 when (icmp_ln58_1_reg_527(0) = '1') else 
        tmp_27_fu_302_p3;
    select_ln58_3_fu_327_p3 <= 
        sub_ln58_fu_309_p2 when (icmp_ln58_1_reg_527(0) = '1') else 
        tmp_27_fu_302_p3;
    select_ln58_4_fu_368_p3 <= 
        tmp_28_fu_358_p4 when (icmp_ln58_1_reg_527(0) = '1') else 
        shl_ln58_fu_352_p2;
    select_ln58_fu_225_p3 <= 
        or_ln60_fu_219_p2 when (icmp_ln58_fu_213_p2(0) = '1') else 
        ap_const_lv22_9F;
    select_ln67_fu_275_p3 <= 
        ap_const_lv16_0 when (s_axis_ip_TLAST(0) = '1') else 
        ap_phi_mux_phi_ln73_phi_fu_143_p4;
    shl_ln58_1_fu_375_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv160_lc_2),to_integer(unsigned('0' & zext_ln58_2_fu_344_p1(31-1 downto 0)))));
    shl_ln58_fu_352_p2 <= std_logic_vector(shift_left(unsigned(tmp_V_2_fu_299_p1),to_integer(unsigned('0' & zext_ln58_1_fu_340_p1(31-1 downto 0)))));
    sub_ln58_1_fu_334_p2 <= std_logic_vector(signed(ap_const_lv8_9F) - signed(select_ln58_1_fu_315_p3));
    sub_ln58_fu_309_p2 <= std_logic_vector(signed(ap_const_lv8_9F) - signed(tmp_27_fu_302_p3));
    tmp_27_fu_302_p3 <= (trunc_ln58_reg_522 & ap_const_lv6_0);
    
    tmp_28_fu_358_p4_proc : process(shl_ln58_fu_352_p2)
    variable vlo_cpy : STD_LOGIC_VECTOR(160+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(160+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(160 - 1 downto 0);
    variable tmp_28_fu_358_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(160 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(160 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(160 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(8 - 1 downto 0) := ap_const_lv32_9F(8 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(8 - 1 downto 0) := ap_const_lv32_0(8 - 1 downto 0);
        v0_cpy := shl_ln58_fu_352_p2;
        if (vlo_cpy(8 - 1 downto 0) > vhi_cpy(8 - 1 downto 0)) then
            vhi_cpy(8-1 downto 0) := std_logic_vector(160-1-unsigned(ap_const_lv32_0(8-1 downto 0)));
            vlo_cpy(8-1 downto 0) := std_logic_vector(160-1-unsigned(ap_const_lv32_9F(8-1 downto 0)));
            for tmp_28_fu_358_p4_i in 0 to 160-1 loop
                v0_cpy(tmp_28_fu_358_p4_i) := shl_ln58_fu_352_p2(160-1-tmp_28_fu_358_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(8-1 downto 0)))));

        section := (others=>'0');
        section(8-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(8-1 downto 0)) - unsigned(vlo_cpy(8-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(160-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_28_fu_358_p4 <= resvalue(160-1 downto 0);
    end process;

    tmp_V_2_fu_299_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_data_V_reg_501),160));
    tmp_nbreadreq_fu_104_p5 <= (0=>(s_axis_ip_TVALID), others=>'-');
    trunc_ln58_1_fu_239_p1 <= select_ln58_fu_225_p3(8 - 1 downto 0);
    trunc_ln58_fu_191_p1 <= header_idx_1(2 - 1 downto 0);
    xor_ln53_fu_435_p2 <= (or_ln73_reg_541 xor ap_const_lv1_1);
    xor_ln58_1_fu_393_p2 <= (ap_const_lv160_lc_2 xor and_ln58_fu_387_p2);
    xor_ln58_fu_243_p2 <= (icmp_ln58_fu_213_p2 xor ap_const_lv1_1);
    xor_ln67_fu_263_p2 <= (s_axis_ip_TLAST xor ap_const_lv1_1);
    xor_ln879_fu_470_p2 <= (regDefaultGateway_V xor dstIpAddress_V_fu_460_p4);
    zext_ln58_1_fu_340_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln58_3_fu_327_p3),160));
    zext_ln58_2_fu_344_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln58_2_fu_321_p3),160));
    zext_ln58_3_fu_348_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln58_1_fu_334_p2),160));
    zext_ln58_fu_203_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Lo_assign_fu_195_p3),23));
end behav;
