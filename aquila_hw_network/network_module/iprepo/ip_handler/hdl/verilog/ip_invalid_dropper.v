// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ip_invalid_dropper (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        ipDataCheckFifo_V_dout,
        ipDataCheckFifo_V_empty_n,
        ipDataCheckFifo_V_read,
        validChecksumFifo_V_dout,
        validChecksumFifo_V_empty_n,
        validChecksumFifo_V_read,
        validIpAddressFifo_V_dout,
        validIpAddressFifo_V_empty_n,
        validIpAddressFifo_V_read,
        ipDataDropFifo_V_din,
        ipDataDropFifo_V_full_n,
        ipDataDropFifo_V_write,
        ipv4ValidFifo_V_din,
        ipv4ValidFifo_V_full_n,
        ipv4ValidFifo_V_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [72:0] ipDataCheckFifo_V_dout;
input   ipDataCheckFifo_V_empty_n;
output   ipDataCheckFifo_V_read;
input  [0:0] validChecksumFifo_V_dout;
input   validChecksumFifo_V_empty_n;
output   validChecksumFifo_V_read;
input  [0:0] validIpAddressFifo_V_dout;
input   validIpAddressFifo_V_empty_n;
output   validIpAddressFifo_V_read;
output  [72:0] ipDataDropFifo_V_din;
input   ipDataDropFifo_V_full_n;
output   ipDataDropFifo_V_write;
output  [0:0] ipv4ValidFifo_V_din;
input   ipv4ValidFifo_V_full_n;
output   ipv4ValidFifo_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg ipDataCheckFifo_V_read;
reg validChecksumFifo_V_read;
reg validIpAddressFifo_V_read;
reg ipDataDropFifo_V_write;
reg[0:0] ipv4ValidFifo_V_din;
reg ipv4ValidFifo_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire   [0:0] grp_nbreadreq_fu_56_p3;
reg    ap_predicate_op6_read_state1;
reg    ap_predicate_op11_read_state1;
wire   [0:0] tmp_nbreadreq_fu_70_p3;
wire   [0:0] tmp_5_nbreadreq_fu_78_p3;
reg    ap_predicate_op19_read_state1;
reg    ap_predicate_op20_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [1:0] iid_state_load_reg_155;
reg   [0:0] tmp_3_reg_167;
reg    ap_predicate_op38_write_state2;
reg   [0:0] tmp_reg_180;
reg   [0:0] tmp_5_reg_184;
reg   [0:0] and_ln195_reg_188;
reg    ap_predicate_op42_write_state2;
reg    ap_predicate_op43_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [1:0] iid_state;
reg    validChecksumFifo_V_blk_n;
wire    ap_block_pp0_stage0;
reg    validIpAddressFifo_V_blk_n;
reg    ipv4ValidFifo_V_blk_n;
reg    ipDataCheckFifo_V_blk_n;
reg    ipDataDropFifo_V_blk_n;
wire   [0:0] grp_fu_125_p3;
reg   [72:0] tmp39_reg_171;
wire   [0:0] and_ln195_fu_143_p2;
reg    ap_block_pp0_stage0_subdone;
reg   [1:0] ap_phi_mux_storemerge_i_phi_fu_117_p4;
wire   [1:0] ap_phi_reg_pp0_iter0_storemerge_i_reg_114;
reg    ap_block_pp0_stage0_01001;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_256;
reg    ap_condition_213;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 iid_state = 2'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_5_nbreadreq_fu_78_p3 == 1'd1) & (tmp_nbreadreq_fu_70_p3 == 1'd1) & (iid_state == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iid_state <= ap_phi_mux_storemerge_i_phi_fu_117_p4;
    end else if ((((grp_fu_125_p3 == 1'd1) & (grp_nbreadreq_fu_56_p3 == 1'd1) & (iid_state == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((grp_fu_125_p3 == 1'd1) & (grp_nbreadreq_fu_56_p3 == 1'd1) & (iid_state == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        iid_state <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_5_nbreadreq_fu_78_p3 == 1'd1) & (tmp_nbreadreq_fu_70_p3 == 1'd1) & (iid_state == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln195_reg_188 <= and_ln195_fu_143_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iid_state_load_reg_155 <= iid_state;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op11_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp39_reg_171 <= ipDataCheckFifo_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((iid_state == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_3_reg_167 <= grp_nbreadreq_fu_56_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_nbreadreq_fu_70_p3 == 1'd1) & (iid_state == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_5_reg_184 <= tmp_5_nbreadreq_fu_78_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((iid_state == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_reg_180 <= tmp_nbreadreq_fu_70_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_256)) begin
        if ((1'd1 == and_ln195_fu_143_p2)) begin
            ap_phi_mux_storemerge_i_phi_fu_117_p4 = 2'd1;
        end else if ((1'd0 == and_ln195_fu_143_p2)) begin
            ap_phi_mux_storemerge_i_phi_fu_117_p4 = 2'd2;
        end else begin
            ap_phi_mux_storemerge_i_phi_fu_117_p4 = ap_phi_reg_pp0_iter0_storemerge_i_reg_114;
        end
    end else begin
        ap_phi_mux_storemerge_i_phi_fu_117_p4 = ap_phi_reg_pp0_iter0_storemerge_i_reg_114;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op11_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op6_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        ipDataCheckFifo_V_blk_n = ipDataCheckFifo_V_empty_n;
    end else begin
        ipDataCheckFifo_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op11_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op6_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ipDataCheckFifo_V_read = 1'b1;
    end else begin
        ipDataCheckFifo_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op38_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ipDataDropFifo_V_blk_n = ipDataDropFifo_V_full_n;
    end else begin
        ipDataDropFifo_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op38_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ipDataDropFifo_V_write = 1'b1;
    end else begin
        ipDataDropFifo_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op43_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op42_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        ipv4ValidFifo_V_blk_n = ipv4ValidFifo_V_full_n;
    end else begin
        ipv4ValidFifo_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_213)) begin
        if ((ap_predicate_op43_write_state2 == 1'b1)) begin
            ipv4ValidFifo_V_din = 1'd1;
        end else if ((ap_predicate_op42_write_state2 == 1'b1)) begin
            ipv4ValidFifo_V_din = 1'd0;
        end else begin
            ipv4ValidFifo_V_din = 'bx;
        end
    end else begin
        ipv4ValidFifo_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op43_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op42_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ipv4ValidFifo_V_write = 1'b1;
    end else begin
        ipv4ValidFifo_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op19_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        validChecksumFifo_V_blk_n = validChecksumFifo_V_empty_n;
    end else begin
        validChecksumFifo_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op19_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        validChecksumFifo_V_read = 1'b1;
    end else begin
        validChecksumFifo_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op20_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        validIpAddressFifo_V_blk_n = validIpAddressFifo_V_empty_n;
    end else begin
        validIpAddressFifo_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op20_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        validIpAddressFifo_V_read = 1'b1;
    end else begin
        validIpAddressFifo_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln195_fu_143_p2 = (validIpAddressFifo_V_dout & validChecksumFifo_V_dout);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((validIpAddressFifo_V_empty_n == 1'b0) & (ap_predicate_op20_read_state1 == 1'b1)) | ((validChecksumFifo_V_empty_n == 1'b0) & (ap_predicate_op19_read_state1 == 1'b1)) | ((ipDataCheckFifo_V_empty_n == 1'b0) & (ap_predicate_op11_read_state1 == 1'b1)) | ((ipDataCheckFifo_V_empty_n == 1'b0) & (ap_predicate_op6_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ipDataDropFifo_V_full_n == 1'b0) & (ap_predicate_op38_write_state2 == 1'b1)) | ((ipv4ValidFifo_V_full_n == 1'b0) & (ap_predicate_op43_write_state2 == 1'b1)) | ((ipv4ValidFifo_V_full_n == 1'b0) & (ap_predicate_op42_write_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((validIpAddressFifo_V_empty_n == 1'b0) & (ap_predicate_op20_read_state1 == 1'b1)) | ((validChecksumFifo_V_empty_n == 1'b0) & (ap_predicate_op19_read_state1 == 1'b1)) | ((ipDataCheckFifo_V_empty_n == 1'b0) & (ap_predicate_op11_read_state1 == 1'b1)) | ((ipDataCheckFifo_V_empty_n == 1'b0) & (ap_predicate_op6_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ipDataDropFifo_V_full_n == 1'b0) & (ap_predicate_op38_write_state2 == 1'b1)) | ((ipv4ValidFifo_V_full_n == 1'b0) & (ap_predicate_op43_write_state2 == 1'b1)) | ((ipv4ValidFifo_V_full_n == 1'b0) & (ap_predicate_op42_write_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((validIpAddressFifo_V_empty_n == 1'b0) & (ap_predicate_op20_read_state1 == 1'b1)) | ((validChecksumFifo_V_empty_n == 1'b0) & (ap_predicate_op19_read_state1 == 1'b1)) | ((ipDataCheckFifo_V_empty_n == 1'b0) & (ap_predicate_op11_read_state1 == 1'b1)) | ((ipDataCheckFifo_V_empty_n == 1'b0) & (ap_predicate_op6_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ipDataDropFifo_V_full_n == 1'b0) & (ap_predicate_op38_write_state2 == 1'b1)) | ((ipv4ValidFifo_V_full_n == 1'b0) & (ap_predicate_op43_write_state2 == 1'b1)) | ((ipv4ValidFifo_V_full_n == 1'b0) & (ap_predicate_op42_write_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((validIpAddressFifo_V_empty_n == 1'b0) & (ap_predicate_op20_read_state1 == 1'b1)) | ((validChecksumFifo_V_empty_n == 1'b0) & (ap_predicate_op19_read_state1 == 1'b1)) | ((ipDataCheckFifo_V_empty_n == 1'b0) & (ap_predicate_op11_read_state1 == 1'b1)) | ((ipDataCheckFifo_V_empty_n == 1'b0) & (ap_predicate_op6_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((ipDataDropFifo_V_full_n == 1'b0) & (ap_predicate_op38_write_state2 == 1'b1)) | ((ipv4ValidFifo_V_full_n == 1'b0) & (ap_predicate_op43_write_state2 == 1'b1)) | ((ipv4ValidFifo_V_full_n == 1'b0) & (ap_predicate_op42_write_state2 == 1'b1)));
end

always @ (*) begin
    ap_condition_213 = ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_256 = ((tmp_5_nbreadreq_fu_78_p3 == 1'd1) & (tmp_nbreadreq_fu_70_p3 == 1'd1) & (iid_state == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_storemerge_i_reg_114 = 'bx;

always @ (*) begin
    ap_predicate_op11_read_state1 = ((grp_nbreadreq_fu_56_p3 == 1'd1) & (iid_state == 2'd1));
end

always @ (*) begin
    ap_predicate_op19_read_state1 = ((tmp_5_nbreadreq_fu_78_p3 == 1'd1) & (tmp_nbreadreq_fu_70_p3 == 1'd1) & (iid_state == 2'd0));
end

always @ (*) begin
    ap_predicate_op20_read_state1 = ((tmp_5_nbreadreq_fu_78_p3 == 1'd1) & (tmp_nbreadreq_fu_70_p3 == 1'd1) & (iid_state == 2'd0));
end

always @ (*) begin
    ap_predicate_op38_write_state2 = ((iid_state_load_reg_155 == 2'd1) & (tmp_3_reg_167 == 1'd1));
end

always @ (*) begin
    ap_predicate_op42_write_state2 = ((iid_state_load_reg_155 == 2'd0) & (tmp_5_reg_184 == 1'd1) & (tmp_reg_180 == 1'd1) & (1'd0 == and_ln195_reg_188));
end

always @ (*) begin
    ap_predicate_op43_write_state2 = ((iid_state_load_reg_155 == 2'd0) & (1'd1 == and_ln195_reg_188) & (tmp_5_reg_184 == 1'd1) & (tmp_reg_180 == 1'd1));
end

always @ (*) begin
    ap_predicate_op6_read_state1 = ((grp_nbreadreq_fu_56_p3 == 1'd1) & (iid_state == 2'd2));
end

assign grp_fu_125_p3 = ipDataCheckFifo_V_dout[32'd72];

assign grp_nbreadreq_fu_56_p3 = ipDataCheckFifo_V_empty_n;

assign ipDataDropFifo_V_din = tmp39_reg_171;

assign tmp_5_nbreadreq_fu_78_p3 = validIpAddressFifo_V_empty_n;

assign tmp_nbreadreq_fu_70_p3 = validChecksumFifo_V_empty_n;

endmodule //ip_invalid_dropper
