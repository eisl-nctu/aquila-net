// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module extract_ip_meta_64_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        ipDataFifo_V_dout,
        ipDataFifo_V_empty_n,
        ipDataFifo_V_read,
        ipDataMetaFifo_V_dat_din,
        ipDataMetaFifo_V_dat_full_n,
        ipDataMetaFifo_V_dat_write,
        ipDataMetaFifo_V_kee_din,
        ipDataMetaFifo_V_kee_full_n,
        ipDataMetaFifo_V_kee_write,
        ipDataMetaFifo_V_las_din,
        ipDataMetaFifo_V_las_full_n,
        ipDataMetaFifo_V_las_write,
        validIpAddressFifo_V_din,
        validIpAddressFifo_V_full_n,
        validIpAddressFifo_V_write,
        ipv4ProtocolFifo_V_V_din,
        ipv4ProtocolFifo_V_V_full_n,
        ipv4ProtocolFifo_V_V_write,
        myIpAddress_V
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [72:0] ipDataFifo_V_dout;
input   ipDataFifo_V_empty_n;
output   ipDataFifo_V_read;
output  [63:0] ipDataMetaFifo_V_dat_din;
input   ipDataMetaFifo_V_dat_full_n;
output   ipDataMetaFifo_V_dat_write;
output  [7:0] ipDataMetaFifo_V_kee_din;
input   ipDataMetaFifo_V_kee_full_n;
output   ipDataMetaFifo_V_kee_write;
output  [0:0] ipDataMetaFifo_V_las_din;
input   ipDataMetaFifo_V_las_full_n;
output   ipDataMetaFifo_V_las_write;
output  [0:0] validIpAddressFifo_V_din;
input   validIpAddressFifo_V_full_n;
output   validIpAddressFifo_V_write;
output  [7:0] ipv4ProtocolFifo_V_V_din;
input   ipv4ProtocolFifo_V_V_full_n;
output   ipv4ProtocolFifo_V_V_write;
input  [31:0] myIpAddress_V;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg ipDataFifo_V_read;
reg ipDataMetaFifo_V_dat_write;
reg ipDataMetaFifo_V_kee_write;
reg ipDataMetaFifo_V_las_write;
reg validIpAddressFifo_V_write;
reg ipv4ProtocolFifo_V_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire   [0:0] tmp_nbreadreq_fu_108_p3;
reg    ap_block_state1_pp0_stage0_iter0;
wire    io_acc_block_signal_op56;
reg   [0:0] tmp_reg_515;
reg    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] tmp_reg_515_pp0_iter1_reg;
reg   [0:0] or_ln153_reg_569;
reg    ap_predicate_op78_write_state3;
reg    ap_predicate_op80_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] header_ready_1;
reg   [15:0] header_idx;
reg   [159:0] header_header_V;
reg   [0:0] metaWritten;
reg    ipDataFifo_V_blk_n;
wire    ap_block_pp0_stage0;
reg    ipDataMetaFifo_V_dat_blk_n;
reg    ipDataMetaFifo_V_kee_blk_n;
reg    ipDataMetaFifo_V_las_blk_n;
reg    validIpAddressFifo_V_blk_n;
reg    ipv4ProtocolFifo_V_V_blk_n;
wire   [63:0] tmp_data_V_fu_179_p1;
reg   [63:0] tmp_data_V_reg_519;
reg   [7:0] tmp_keep_V_reg_525;
wire   [0:0] tmp_last_V_fu_193_p3;
reg   [0:0] tmp_last_V_reg_530;
wire   [0:0] header_ready_1_load_load_fu_201_p1;
reg   [0:0] header_ready_1_load_reg_536;
wire   [1:0] trunc_ln58_fu_210_p1;
reg   [1:0] trunc_ln58_reg_540;
wire   [0:0] icmp_ln58_1_fu_252_p2;
reg   [0:0] icmp_ln58_1_reg_545;
wire   [7:0] trunc_ln58_1_fu_258_p1;
reg   [7:0] trunc_ln58_1_reg_553;
wire   [0:0] or_ln73_fu_276_p2;
reg   [0:0] or_ln73_reg_559;
wire   [0:0] xor_ln162_fu_282_p2;
reg   [0:0] xor_ln162_reg_564;
wire   [0:0] or_ln153_fu_451_p2;
wire   [0:0] or_ln162_fu_457_p2;
reg    ap_block_pp0_stage0_subdone;
reg   [15:0] ap_phi_mux_phi_ln73_phi_fu_152_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_phi_ln73_reg_149;
wire   [15:0] add_ln67_fu_269_p2;
reg   [0:0] ap_phi_mux_write_flag_1_i_i_phi_fu_161_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_write_flag_1_i_i_reg_158;
wire   [0:0] xor_ln58_fu_262_p2;
reg   [0:0] ap_phi_mux_metaWritten_flag_0_i_phi_fu_171_p4;
wire   [0:0] ap_phi_reg_pp0_iter1_metaWritten_flag_0_i_reg_168;
wire   [0:0] and_ln162_fu_288_p2;
wire   [15:0] select_ln162_fu_294_p3;
wire   [159:0] or_ln58_fu_430_p2;
reg    ap_block_pp0_stage0_01001;
wire   [21:0] Lo_assign_fu_214_p3;
wire   [22:0] zext_ln58_fu_222_p1;
wire   [22:0] add_ln58_fu_226_p2;
wire   [0:0] icmp_ln58_fu_232_p2;
wire   [21:0] or_ln60_fu_238_p2;
wire   [21:0] select_ln58_fu_244_p3;
wire   [7:0] tmp_13_fu_321_p3;
wire   [7:0] sub_ln58_fu_328_p2;
wire   [7:0] select_ln58_1_fu_334_p3;
wire   [7:0] select_ln58_3_fu_346_p3;
wire   [7:0] select_ln58_2_fu_340_p3;
wire   [7:0] sub_ln58_1_fu_353_p2;
wire   [159:0] tmp_V_1_fu_318_p1;
wire   [159:0] zext_ln58_1_fu_359_p1;
wire   [159:0] shl_ln58_fu_371_p2;
reg   [159:0] tmp_14_fu_377_p4;
wire   [159:0] zext_ln58_2_fu_363_p1;
wire   [159:0] zext_ln58_3_fu_367_p1;
wire   [159:0] shl_ln58_1_fu_394_p2;
wire   [159:0] lshr_ln58_fu_400_p2;
wire   [159:0] and_ln58_fu_406_p2;
wire   [159:0] xor_ln58_1_fu_412_p2;
wire   [159:0] select_ln58_4_fu_387_p3;
wire   [159:0] and_ln58_1_fu_418_p2;
wire   [159:0] and_ln58_2_fu_424_p2;
wire   [0:0] xor_ln153_fu_446_p2;
wire   [31:0] dstIpAddress_V_fu_471_p4;
wire   [0:0] icmp_ln879_fu_481_p2;
wire   [0:0] icmp_ln879_4_fu_486_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_123;
reg    ap_condition_118;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 header_ready_1 = 1'd0;
#0 header_idx = 16'd0;
#0 header_header_V = 160'd1180591620717411303493;
#0 metaWritten = 1'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((header_ready_1_load_reg_536 == 1'd0) & (tmp_reg_515 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        header_header_V <= or_ln58_fu_430_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_nbreadreq_fu_108_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        header_idx <= select_ln162_fu_294_p3;
        header_ready_1 <= and_ln162_fu_288_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_nbreadreq_fu_108_p3 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        header_ready_1_load_reg_536 <= header_ready_1;
        or_ln73_reg_559 <= or_ln73_fu_276_p2;
        tmp_data_V_reg_519 <= tmp_data_V_fu_179_p1;
        tmp_keep_V_reg_525 <= {{ipDataFifo_V_dout[71:64]}};
        tmp_last_V_reg_530 <= ipDataFifo_V_dout[32'd72];
        xor_ln162_reg_564 <= xor_ln162_fu_282_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((header_ready_1_load_load_fu_201_p1 == 1'd0) & (tmp_nbreadreq_fu_108_p3 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln58_1_reg_545 <= icmp_ln58_1_fu_252_p2;
        trunc_ln58_1_reg_553[7 : 5] <= trunc_ln58_1_fu_258_p1[7 : 5];
        trunc_ln58_reg_540 <= trunc_ln58_fu_210_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_515 == 1'd1) & (or_ln162_fu_457_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        metaWritten <= xor_ln162_reg_564;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_515 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        or_ln153_reg_569 <= or_ln153_fu_451_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_reg_515 <= tmp_nbreadreq_fu_108_p3;
        tmp_reg_515_pp0_iter1_reg <= tmp_reg_515;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_123)) begin
        if ((or_ln153_fu_451_p2 == 1'd1)) begin
            ap_phi_mux_metaWritten_flag_0_i_phi_fu_171_p4 = 1'd0;
        end else if ((or_ln153_fu_451_p2 == 1'd0)) begin
            ap_phi_mux_metaWritten_flag_0_i_phi_fu_171_p4 = 1'd1;
        end else begin
            ap_phi_mux_metaWritten_flag_0_i_phi_fu_171_p4 = ap_phi_reg_pp0_iter1_metaWritten_flag_0_i_reg_168;
        end
    end else begin
        ap_phi_mux_metaWritten_flag_0_i_phi_fu_171_p4 = ap_phi_reg_pp0_iter1_metaWritten_flag_0_i_reg_168;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_118)) begin
        if ((header_ready_1_load_load_fu_201_p1 == 1'd0)) begin
            ap_phi_mux_phi_ln73_phi_fu_152_p4 = add_ln67_fu_269_p2;
        end else if ((header_ready_1_load_load_fu_201_p1 == 1'd1)) begin
            ap_phi_mux_phi_ln73_phi_fu_152_p4 = header_idx;
        end else begin
            ap_phi_mux_phi_ln73_phi_fu_152_p4 = ap_phi_reg_pp0_iter0_phi_ln73_reg_149;
        end
    end else begin
        ap_phi_mux_phi_ln73_phi_fu_152_p4 = ap_phi_reg_pp0_iter0_phi_ln73_reg_149;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_118)) begin
        if ((header_ready_1_load_load_fu_201_p1 == 1'd0)) begin
            ap_phi_mux_write_flag_1_i_i_phi_fu_161_p4 = xor_ln58_fu_262_p2;
        end else if ((header_ready_1_load_load_fu_201_p1 == 1'd1)) begin
            ap_phi_mux_write_flag_1_i_i_phi_fu_161_p4 = 1'd0;
        end else begin
            ap_phi_mux_write_flag_1_i_i_phi_fu_161_p4 = ap_phi_reg_pp0_iter0_write_flag_1_i_i_reg_158;
        end
    end else begin
        ap_phi_mux_write_flag_1_i_i_phi_fu_161_p4 = ap_phi_reg_pp0_iter0_write_flag_1_i_i_reg_158;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (tmp_nbreadreq_fu_108_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ipDataFifo_V_blk_n = ipDataFifo_V_empty_n;
    end else begin
        ipDataFifo_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_108_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ipDataFifo_V_read = 1'b1;
    end else begin
        ipDataFifo_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_515 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ipDataMetaFifo_V_dat_blk_n = ipDataMetaFifo_V_dat_full_n;
    end else begin
        ipDataMetaFifo_V_dat_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_reg_515 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ipDataMetaFifo_V_dat_write = 1'b1;
    end else begin
        ipDataMetaFifo_V_dat_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_515 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ipDataMetaFifo_V_kee_blk_n = ipDataMetaFifo_V_kee_full_n;
    end else begin
        ipDataMetaFifo_V_kee_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_reg_515 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ipDataMetaFifo_V_kee_write = 1'b1;
    end else begin
        ipDataMetaFifo_V_kee_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_515 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ipDataMetaFifo_V_las_blk_n = ipDataMetaFifo_V_las_full_n;
    end else begin
        ipDataMetaFifo_V_las_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_reg_515 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ipDataMetaFifo_V_las_write = 1'b1;
    end else begin
        ipDataMetaFifo_V_las_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op80_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ipv4ProtocolFifo_V_V_blk_n = ipv4ProtocolFifo_V_V_full_n;
    end else begin
        ipv4ProtocolFifo_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op80_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ipv4ProtocolFifo_V_V_write = 1'b1;
    end else begin
        ipv4ProtocolFifo_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op78_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        validIpAddressFifo_V_blk_n = validIpAddressFifo_V_full_n;
    end else begin
        validIpAddressFifo_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op78_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        validIpAddressFifo_V_write = 1'b1;
    end else begin
        validIpAddressFifo_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Lo_assign_fu_214_p3 = {{header_idx}, {6'd0}};

assign add_ln58_fu_226_p2 = (zext_ln58_fu_222_p1 + 23'd64);

assign add_ln67_fu_269_p2 = (header_idx + 16'd1);

assign and_ln162_fu_288_p2 = (xor_ln162_fu_282_p2 & or_ln73_fu_276_p2);

assign and_ln58_1_fu_418_p2 = (xor_ln58_1_fu_412_p2 & header_header_V);

assign and_ln58_2_fu_424_p2 = (select_ln58_4_fu_387_p3 & and_ln58_fu_406_p2);

assign and_ln58_fu_406_p2 = (shl_ln58_1_fu_394_p2 & lshr_ln58_fu_400_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((ipv4ProtocolFifo_V_V_full_n == 1'b0) & (ap_predicate_op80_write_state3 == 1'b1)) | ((validIpAddressFifo_V_full_n == 1'b0) & (ap_predicate_op78_write_state3 == 1'b1)))) | ((tmp_reg_515 == 1'd1) & (io_acc_block_signal_op56 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_108_p3 == 1'd1) & (ipDataFifo_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((ipv4ProtocolFifo_V_V_full_n == 1'b0) & (ap_predicate_op80_write_state3 == 1'b1)) | ((validIpAddressFifo_V_full_n == 1'b0) & (ap_predicate_op78_write_state3 == 1'b1)))) | ((tmp_reg_515 == 1'd1) & (io_acc_block_signal_op56 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_108_p3 == 1'd1) & (ipDataFifo_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((ipv4ProtocolFifo_V_V_full_n == 1'b0) & (ap_predicate_op80_write_state3 == 1'b1)) | ((validIpAddressFifo_V_full_n == 1'b0) & (ap_predicate_op78_write_state3 == 1'b1)))) | ((tmp_reg_515 == 1'd1) & (io_acc_block_signal_op56 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_108_p3 == 1'd1) & (ipDataFifo_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_108_p3 == 1'd1) & (ipDataFifo_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((tmp_reg_515 == 1'd1) & (io_acc_block_signal_op56 == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (((ipv4ProtocolFifo_V_V_full_n == 1'b0) & (ap_predicate_op80_write_state3 == 1'b1)) | ((validIpAddressFifo_V_full_n == 1'b0) & (ap_predicate_op78_write_state3 == 1'b1)));
end

always @ (*) begin
    ap_condition_118 = ((tmp_nbreadreq_fu_108_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_123 = ((tmp_reg_515 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_phi_ln73_reg_149 = 'bx;

assign ap_phi_reg_pp0_iter0_write_flag_1_i_i_reg_158 = 'bx;

assign ap_phi_reg_pp0_iter1_metaWritten_flag_0_i_reg_168 = 'bx;

always @ (*) begin
    ap_predicate_op78_write_state3 = ((or_ln153_reg_569 == 1'd0) & (tmp_reg_515_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op80_write_state3 = ((or_ln153_reg_569 == 1'd0) & (tmp_reg_515_pp0_iter1_reg == 1'd1));
end

assign dstIpAddress_V_fu_471_p4 = {{header_header_V[159:128]}};

assign header_ready_1_load_load_fu_201_p1 = header_ready_1;

assign icmp_ln58_1_fu_252_p2 = ((Lo_assign_fu_214_p3 > select_ln58_fu_244_p3) ? 1'b1 : 1'b0);

assign icmp_ln58_fu_232_p2 = ((add_ln58_fu_226_p2 < 23'd160) ? 1'b1 : 1'b0);

assign icmp_ln879_4_fu_486_p2 = ((dstIpAddress_V_fu_471_p4 == 32'd4294967295) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_481_p2 = ((dstIpAddress_V_fu_471_p4 == myIpAddress_V) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op56 = (ipDataMetaFifo_V_las_full_n & ipDataMetaFifo_V_kee_full_n & ipDataMetaFifo_V_dat_full_n);

assign ipDataMetaFifo_V_dat_din = tmp_data_V_reg_519;

assign ipDataMetaFifo_V_kee_din = tmp_keep_V_reg_525;

assign ipDataMetaFifo_V_las_din = tmp_last_V_reg_530;

assign ipv4ProtocolFifo_V_V_din = {{header_header_V[79:72]}};

assign lshr_ln58_fu_400_p2 = 160'd1461501637330902918203684832716283019655932542975 >> zext_ln58_3_fu_367_p1;

assign or_ln153_fu_451_p2 = (xor_ln153_fu_446_p2 | metaWritten);

assign or_ln162_fu_457_p2 = (tmp_last_V_reg_530 | ap_phi_mux_metaWritten_flag_0_i_phi_fu_171_p4);

assign or_ln58_fu_430_p2 = (and_ln58_2_fu_424_p2 | and_ln58_1_fu_418_p2);

assign or_ln60_fu_238_p2 = (22'd63 | Lo_assign_fu_214_p3);

assign or_ln73_fu_276_p2 = (header_ready_1 | ap_phi_mux_write_flag_1_i_i_phi_fu_161_p4);

assign select_ln162_fu_294_p3 = ((tmp_last_V_fu_193_p3[0:0] === 1'b1) ? 16'd0 : ap_phi_mux_phi_ln73_phi_fu_152_p4);

assign select_ln58_1_fu_334_p3 = ((icmp_ln58_1_reg_545[0:0] === 1'b1) ? tmp_13_fu_321_p3 : trunc_ln58_1_reg_553);

assign select_ln58_2_fu_340_p3 = ((icmp_ln58_1_reg_545[0:0] === 1'b1) ? trunc_ln58_1_reg_553 : tmp_13_fu_321_p3);

assign select_ln58_3_fu_346_p3 = ((icmp_ln58_1_reg_545[0:0] === 1'b1) ? sub_ln58_fu_328_p2 : tmp_13_fu_321_p3);

assign select_ln58_4_fu_387_p3 = ((icmp_ln58_1_reg_545[0:0] === 1'b1) ? tmp_14_fu_377_p4 : shl_ln58_fu_371_p2);

assign select_ln58_fu_244_p3 = ((icmp_ln58_fu_232_p2[0:0] === 1'b1) ? or_ln60_fu_238_p2 : 22'd159);

assign shl_ln58_1_fu_394_p2 = 160'd1461501637330902918203684832716283019655932542975 << zext_ln58_2_fu_363_p1;

assign shl_ln58_fu_371_p2 = tmp_V_1_fu_318_p1 << zext_ln58_1_fu_359_p1;

assign sub_ln58_1_fu_353_p2 = ($signed(8'd159) - $signed(select_ln58_1_fu_334_p3));

assign sub_ln58_fu_328_p2 = ($signed(8'd159) - $signed(tmp_13_fu_321_p3));

assign tmp_13_fu_321_p3 = {{trunc_ln58_reg_540}, {6'd0}};

integer ap_tvar_int_0;

always @ (shl_ln58_fu_371_p2) begin
    for (ap_tvar_int_0 = 160 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 159 - 0) begin
            tmp_14_fu_377_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_14_fu_377_p4[ap_tvar_int_0] = shl_ln58_fu_371_p2[159 - ap_tvar_int_0];
        end
    end
end

assign tmp_V_1_fu_318_p1 = tmp_data_V_reg_519;

assign tmp_data_V_fu_179_p1 = ipDataFifo_V_dout[63:0];

assign tmp_last_V_fu_193_p3 = ipDataFifo_V_dout[32'd72];

assign tmp_nbreadreq_fu_108_p3 = ipDataFifo_V_empty_n;

assign trunc_ln58_1_fu_258_p1 = select_ln58_fu_244_p3[7:0];

assign trunc_ln58_fu_210_p1 = header_idx[1:0];

assign validIpAddressFifo_V_din = (icmp_ln879_fu_481_p2 | icmp_ln879_4_fu_486_p2);

assign xor_ln153_fu_446_p2 = (or_ln73_reg_559 ^ 1'd1);

assign xor_ln162_fu_282_p2 = (tmp_last_V_fu_193_p3 ^ 1'd1);

assign xor_ln58_1_fu_412_p2 = (160'd1461501637330902918203684832716283019655932542975 ^ and_ln58_fu_406_p2);

assign xor_ln58_fu_262_p2 = (icmp_ln58_fu_232_p2 ^ 1'd1);

assign zext_ln58_1_fu_359_p1 = select_ln58_3_fu_346_p3;

assign zext_ln58_2_fu_363_p1 = select_ln58_2_fu_340_p3;

assign zext_ln58_3_fu_367_p1 = sub_ln58_1_fu_353_p2;

assign zext_ln58_fu_222_p1 = Lo_assign_fu_214_p3;

always @ (posedge ap_clk) begin
    trunc_ln58_1_reg_553[4:0] <= 5'b11111;
end

endmodule //extract_ip_meta_64_s
