-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity route_by_eth_protoco is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    etherTypeFifo_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    etherTypeFifo_V_V_empty_n : IN STD_LOGIC;
    etherTypeFifo_V_V_read : OUT STD_LOGIC;
    ethDataFifo_V_data_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    ethDataFifo_V_data_V_empty_n : IN STD_LOGIC;
    ethDataFifo_V_data_V_read : OUT STD_LOGIC;
    ethDataFifo_V_keep_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    ethDataFifo_V_keep_V_empty_n : IN STD_LOGIC;
    ethDataFifo_V_keep_V_read : OUT STD_LOGIC;
    ethDataFifo_V_last_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    ethDataFifo_V_last_V_empty_n : IN STD_LOGIC;
    ethDataFifo_V_last_V_read : OUT STD_LOGIC;
    ipv6ShiftFifo_V_data_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    ipv6ShiftFifo_V_data_full_n : IN STD_LOGIC;
    ipv6ShiftFifo_V_data_write : OUT STD_LOGIC;
    ipv6ShiftFifo_V_keep_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    ipv6ShiftFifo_V_keep_full_n : IN STD_LOGIC;
    ipv6ShiftFifo_V_keep_write : OUT STD_LOGIC;
    ipv6ShiftFifo_V_last_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    ipv6ShiftFifo_V_last_full_n : IN STD_LOGIC;
    ipv6ShiftFifo_V_last_write : OUT STD_LOGIC;
    ipv4ShiftFifo_V_data_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    ipv4ShiftFifo_V_data_full_n : IN STD_LOGIC;
    ipv4ShiftFifo_V_data_write : OUT STD_LOGIC;
    ipv4ShiftFifo_V_keep_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    ipv4ShiftFifo_V_keep_full_n : IN STD_LOGIC;
    ipv4ShiftFifo_V_keep_write : OUT STD_LOGIC;
    ipv4ShiftFifo_V_last_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    ipv4ShiftFifo_V_last_full_n : IN STD_LOGIC;
    ipv4ShiftFifo_V_last_write : OUT STD_LOGIC;
    m_axis_arp_TREADY : IN STD_LOGIC;
    m_axis_arp_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axis_arp_TVALID : OUT STD_LOGIC;
    m_axis_arp_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axis_arp_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of route_by_eth_protoco is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv16_806 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000110";
    constant ap_const_lv16_800 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_const_lv16_86DD : STD_LOGIC_VECTOR (15 downto 0) := "1000011011011101";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal tmp_1_nbreadreq_fu_74_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_nbreadreq_fu_82_p5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op10_read_state1 : BOOLEAN;
    signal io_acc_block_signal_op12 : STD_LOGIC;
    signal ap_predicate_op12_read_state1 : BOOLEAN;
    signal io_acc_block_signal_op20 : STD_LOGIC;
    signal ap_predicate_op20_read_state1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal io_acc_block_signal_op35 : STD_LOGIC;
    signal rep_fsmState_V_load_reg_225 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_246 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_257 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_reg_261 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_3_reg_265 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op35_write_state2 : BOOLEAN;
    signal io_acc_block_signal_op36 : STD_LOGIC;
    signal ap_predicate_op36_write_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ARPdataOut_V_data_V_1_ack_in : STD_LOGIC;
    signal tmp_1_reg_229 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_233 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_reg_242 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op32_write_state2 : BOOLEAN;
    signal ap_predicate_op37_write_state2 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal ARPdataOut_V_data_V_1_ack_out : STD_LOGIC;
    signal ARPdataOut_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ARPdataOut_V_keep_V_1_ack_out : STD_LOGIC;
    signal ARPdataOut_V_keep_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ARPdataOut_V_last_V_1_ack_out : STD_LOGIC;
    signal ARPdataOut_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal rep_fsmState_V_load_reg_225_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_229_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_233_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_reg_242_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op51_write_state3 : BOOLEAN;
    signal tmp_reg_246_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_257_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op60_write_state3 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ARPdataOut_V_data_V_1_data_out : STD_LOGIC_VECTOR (63 downto 0);
    signal ARPdataOut_V_data_V_1_vld_in : STD_LOGIC;
    signal ARPdataOut_V_data_V_1_vld_out : STD_LOGIC;
    signal ARPdataOut_V_data_V_1_payload_A : STD_LOGIC_VECTOR (63 downto 0);
    signal ARPdataOut_V_data_V_1_payload_B : STD_LOGIC_VECTOR (63 downto 0);
    signal ARPdataOut_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal ARPdataOut_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal ARPdataOut_V_data_V_1_sel : STD_LOGIC;
    signal ARPdataOut_V_data_V_1_load_A : STD_LOGIC;
    signal ARPdataOut_V_data_V_1_load_B : STD_LOGIC;
    signal ARPdataOut_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal ARPdataOut_V_keep_V_1_data_out : STD_LOGIC_VECTOR (7 downto 0);
    signal ARPdataOut_V_keep_V_1_vld_in : STD_LOGIC;
    signal ARPdataOut_V_keep_V_1_vld_out : STD_LOGIC;
    signal ARPdataOut_V_keep_V_1_ack_in : STD_LOGIC;
    signal ARPdataOut_V_keep_V_1_payload_A : STD_LOGIC_VECTOR (7 downto 0);
    signal ARPdataOut_V_keep_V_1_payload_B : STD_LOGIC_VECTOR (7 downto 0);
    signal ARPdataOut_V_keep_V_1_sel_rd : STD_LOGIC := '0';
    signal ARPdataOut_V_keep_V_1_sel_wr : STD_LOGIC := '0';
    signal ARPdataOut_V_keep_V_1_sel : STD_LOGIC;
    signal ARPdataOut_V_keep_V_1_load_A : STD_LOGIC;
    signal ARPdataOut_V_keep_V_1_load_B : STD_LOGIC;
    signal ARPdataOut_V_keep_V_1_state_cmp_full : STD_LOGIC;
    signal ARPdataOut_V_last_V_1_data_in : STD_LOGIC_VECTOR (0 downto 0);
    signal ARPdataOut_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal ARPdataOut_V_last_V_1_vld_in : STD_LOGIC;
    signal ARPdataOut_V_last_V_1_vld_out : STD_LOGIC;
    signal ARPdataOut_V_last_V_1_ack_in : STD_LOGIC;
    signal ARPdataOut_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal ARPdataOut_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal ARPdataOut_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal ARPdataOut_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal ARPdataOut_V_last_V_1_sel : STD_LOGIC;
    signal ARPdataOut_V_last_V_1_load_A : STD_LOGIC;
    signal ARPdataOut_V_last_V_1_load_B : STD_LOGIC;
    signal ARPdataOut_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal rep_fsmState_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal rep_etherType_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal m_axis_arp_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal etherTypeFifo_V_V_blk_n : STD_LOGIC;
    signal ethDataFifo_V_data_V_blk_n : STD_LOGIC;
    signal ethDataFifo_V_keep_V_blk_n : STD_LOGIC;
    signal ethDataFifo_V_last_V_blk_n : STD_LOGIC;
    signal ipv4ShiftFifo_V_data_blk_n : STD_LOGIC;
    signal ipv4ShiftFifo_V_keep_blk_n : STD_LOGIC;
    signal ipv4ShiftFifo_V_last_blk_n : STD_LOGIC;
    signal ipv6ShiftFifo_V_data_blk_n : STD_LOGIC;
    signal ipv6ShiftFifo_V_keep_blk_n : STD_LOGIC;
    signal ipv6ShiftFifo_V_last_blk_n : STD_LOGIC;
    signal reg_161 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_168 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_157_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_2_reg_237 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_fu_189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_reg_250 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_201_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_fu_207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_3_fu_213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_503 : BOOLEAN;
    signal ap_condition_575 : BOOLEAN;
    signal ap_condition_574 : BOOLEAN;


begin




    ARPdataOut_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ARPdataOut_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ARPdataOut_V_data_V_1_vld_out) and (ap_const_logic_1 = ARPdataOut_V_data_V_1_ack_out))) then 
                                        ARPdataOut_V_data_V_1_sel_rd <= not(ARPdataOut_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    ARPdataOut_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ARPdataOut_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ARPdataOut_V_data_V_1_vld_in) and (ap_const_logic_1 = ARPdataOut_V_data_V_1_ack_in))) then 
                                        ARPdataOut_V_data_V_1_sel_wr <= not(ARPdataOut_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    ARPdataOut_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ARPdataOut_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = ARPdataOut_V_data_V_1_vld_in) and (ap_const_logic_1 = ARPdataOut_V_data_V_1_ack_out) and (ap_const_lv2_3 = ARPdataOut_V_data_V_1_state)) or ((ap_const_logic_0 = ARPdataOut_V_data_V_1_vld_in) and (ap_const_lv2_2 = ARPdataOut_V_data_V_1_state)))) then 
                    ARPdataOut_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((m_axis_arp_TREADY = ap_const_logic_0) and (ap_const_lv2_1 = ARPdataOut_V_data_V_1_state)) or ((m_axis_arp_TREADY = ap_const_logic_0) and (ap_const_logic_1 = ARPdataOut_V_data_V_1_vld_in) and (ap_const_lv2_3 = ARPdataOut_V_data_V_1_state)))) then 
                    ARPdataOut_V_data_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = ARPdataOut_V_data_V_1_ack_out) and (ap_const_lv2_1 = ARPdataOut_V_data_V_1_state)) or (not(((ap_const_logic_0 = ARPdataOut_V_data_V_1_vld_in) and (ap_const_logic_1 = ARPdataOut_V_data_V_1_ack_out))) and not(((m_axis_arp_TREADY = ap_const_logic_0) and (ap_const_logic_1 = ARPdataOut_V_data_V_1_vld_in))) and (ap_const_lv2_3 = ARPdataOut_V_data_V_1_state)) or ((ap_const_logic_1 = ARPdataOut_V_data_V_1_vld_in) and (ap_const_lv2_2 = ARPdataOut_V_data_V_1_state)))) then 
                    ARPdataOut_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    ARPdataOut_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ARPdataOut_V_keep_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ARPdataOut_V_keep_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ARPdataOut_V_keep_V_1_vld_out) and (ap_const_logic_1 = ARPdataOut_V_keep_V_1_ack_out))) then 
                                        ARPdataOut_V_keep_V_1_sel_rd <= not(ARPdataOut_V_keep_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    ARPdataOut_V_keep_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ARPdataOut_V_keep_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ARPdataOut_V_keep_V_1_ack_in) and (ap_const_logic_1 = ARPdataOut_V_keep_V_1_vld_in))) then 
                                        ARPdataOut_V_keep_V_1_sel_wr <= not(ARPdataOut_V_keep_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    ARPdataOut_V_keep_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ARPdataOut_V_keep_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = ARPdataOut_V_keep_V_1_vld_in) and (ap_const_logic_1 = ARPdataOut_V_keep_V_1_ack_out) and (ap_const_lv2_3 = ARPdataOut_V_keep_V_1_state)) or ((ap_const_logic_0 = ARPdataOut_V_keep_V_1_vld_in) and (ap_const_lv2_2 = ARPdataOut_V_keep_V_1_state)))) then 
                    ARPdataOut_V_keep_V_1_state <= ap_const_lv2_2;
                elsif ((((m_axis_arp_TREADY = ap_const_logic_0) and (ap_const_lv2_1 = ARPdataOut_V_keep_V_1_state)) or ((m_axis_arp_TREADY = ap_const_logic_0) and (ap_const_logic_1 = ARPdataOut_V_keep_V_1_vld_in) and (ap_const_lv2_3 = ARPdataOut_V_keep_V_1_state)))) then 
                    ARPdataOut_V_keep_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = ARPdataOut_V_keep_V_1_ack_out) and (ap_const_lv2_1 = ARPdataOut_V_keep_V_1_state)) or (not(((ap_const_logic_0 = ARPdataOut_V_keep_V_1_vld_in) and (ap_const_logic_1 = ARPdataOut_V_keep_V_1_ack_out))) and not(((m_axis_arp_TREADY = ap_const_logic_0) and (ap_const_logic_1 = ARPdataOut_V_keep_V_1_vld_in))) and (ap_const_lv2_3 = ARPdataOut_V_keep_V_1_state)) or ((ap_const_logic_1 = ARPdataOut_V_keep_V_1_vld_in) and (ap_const_lv2_2 = ARPdataOut_V_keep_V_1_state)))) then 
                    ARPdataOut_V_keep_V_1_state <= ap_const_lv2_3;
                else 
                    ARPdataOut_V_keep_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ARPdataOut_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ARPdataOut_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ARPdataOut_V_last_V_1_vld_out) and (ap_const_logic_1 = ARPdataOut_V_last_V_1_ack_out))) then 
                                        ARPdataOut_V_last_V_1_sel_rd <= not(ARPdataOut_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    ARPdataOut_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ARPdataOut_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ARPdataOut_V_last_V_1_ack_in) and (ap_const_logic_1 = ARPdataOut_V_last_V_1_vld_in))) then 
                                        ARPdataOut_V_last_V_1_sel_wr <= not(ARPdataOut_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    ARPdataOut_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ARPdataOut_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = ARPdataOut_V_last_V_1_vld_in) and (ap_const_logic_1 = ARPdataOut_V_last_V_1_ack_out) and (ap_const_lv2_3 = ARPdataOut_V_last_V_1_state)) or ((ap_const_logic_0 = ARPdataOut_V_last_V_1_vld_in) and (ap_const_lv2_2 = ARPdataOut_V_last_V_1_state)))) then 
                    ARPdataOut_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((m_axis_arp_TREADY = ap_const_logic_0) and (ap_const_lv2_1 = ARPdataOut_V_last_V_1_state)) or ((m_axis_arp_TREADY = ap_const_logic_0) and (ap_const_logic_1 = ARPdataOut_V_last_V_1_vld_in) and (ap_const_lv2_3 = ARPdataOut_V_last_V_1_state)))) then 
                    ARPdataOut_V_last_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = ARPdataOut_V_last_V_1_ack_out) and (ap_const_lv2_1 = ARPdataOut_V_last_V_1_state)) or (not(((ap_const_logic_0 = ARPdataOut_V_last_V_1_vld_in) and (ap_const_logic_1 = ARPdataOut_V_last_V_1_ack_out))) and not(((m_axis_arp_TREADY = ap_const_logic_0) and (ap_const_logic_1 = ARPdataOut_V_last_V_1_vld_in))) and (ap_const_lv2_3 = ARPdataOut_V_last_V_1_state)) or ((ap_const_logic_1 = ARPdataOut_V_last_V_1_vld_in) and (ap_const_lv2_2 = ARPdataOut_V_last_V_1_state)))) then 
                    ARPdataOut_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    ARPdataOut_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    rep_fsmState_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_574)) then
                if (((grp_fu_157_p1 = ap_const_lv1_1) and (rep_fsmState_V = ap_const_lv1_1))) then 
                    rep_fsmState_V <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_condition_575)) then 
                    rep_fsmState_V <= ap_const_lv1_1;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ARPdataOut_V_data_V_1_load_A)) then
                ARPdataOut_V_data_V_1_payload_A <= reg_161;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ARPdataOut_V_data_V_1_load_B)) then
                ARPdataOut_V_data_V_1_payload_B <= reg_161;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ARPdataOut_V_keep_V_1_load_A)) then
                ARPdataOut_V_keep_V_1_payload_A <= reg_168;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ARPdataOut_V_keep_V_1_load_B)) then
                ARPdataOut_V_keep_V_1_payload_B <= reg_168;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ARPdataOut_V_last_V_1_load_A)) then
                ARPdataOut_V_last_V_1_payload_A <= ARPdataOut_V_last_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ARPdataOut_V_last_V_1_load_B)) then
                ARPdataOut_V_last_V_1_payload_B <= ARPdataOut_V_last_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_82_p5 = ap_const_lv1_1) and (icmp_ln879_fu_201_p2 = ap_const_lv1_0) and (rep_fsmState_V = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln879_1_reg_261 <= icmp_ln879_1_fu_207_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_82_p5 = ap_const_lv1_1) and (tmp_1_nbreadreq_fu_74_p3 = ap_const_lv1_1) and (rep_fsmState_V = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln879_2_reg_242 <= icmp_ln879_2_fu_189_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln879_2_reg_242_pp0_iter1_reg <= icmp_ln879_2_reg_242;
                icmp_ln879_reg_257_pp0_iter1_reg <= icmp_ln879_reg_257;
                rep_fsmState_V_load_reg_225 <= rep_fsmState_V;
                rep_fsmState_V_load_reg_225_pp0_iter1_reg <= rep_fsmState_V_load_reg_225;
                tmp_1_reg_229_pp0_iter1_reg <= tmp_1_reg_229;
                tmp_2_reg_233_pp0_iter1_reg <= tmp_2_reg_233;
                tmp_reg_246_pp0_iter1_reg <= tmp_reg_246;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_82_p5 = ap_const_lv1_1) and (icmp_ln879_1_fu_207_p2 = ap_const_lv1_0) and (icmp_ln879_fu_201_p2 = ap_const_lv1_0) and (rep_fsmState_V = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln879_3_reg_265 <= icmp_ln879_3_fu_213_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_82_p5 = ap_const_lv1_1) and (rep_fsmState_V = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln879_reg_257 <= icmp_ln879_fu_201_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_nbreadreq_fu_82_p5 = ap_const_lv1_1) and (rep_fsmState_V = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((grp_nbreadreq_fu_82_p5 = ap_const_lv1_1) and (tmp_1_nbreadreq_fu_74_p3 = ap_const_lv1_1) and (rep_fsmState_V = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                reg_161 <= ethDataFifo_V_data_V_dout;
                reg_168 <= ethDataFifo_V_keep_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_82_p5 = ap_const_lv1_1) and (tmp_1_nbreadreq_fu_74_p3 = ap_const_lv1_1) and (rep_fsmState_V = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                rep_etherType_V <= etherTypeFifo_V_V_dout;
                tmp_last_V_2_reg_237 <= ethDataFifo_V_last_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((rep_fsmState_V = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_1_reg_229 <= tmp_1_nbreadreq_fu_74_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1_nbreadreq_fu_74_p3 = ap_const_lv1_1) and (rep_fsmState_V = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_2_reg_233 <= grp_nbreadreq_fu_82_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_82_p5 = ap_const_lv1_1) and (rep_fsmState_V = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_last_V_reg_250 <= ethDataFifo_V_last_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((rep_fsmState_V = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_reg_246 <= grp_nbreadreq_fu_82_p5;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ARPdataOut_V_data_V_1_ack_in <= ARPdataOut_V_data_V_1_state(1);
    ARPdataOut_V_data_V_1_ack_out <= m_axis_arp_TREADY;

    ARPdataOut_V_data_V_1_data_out_assign_proc : process(ARPdataOut_V_data_V_1_payload_A, ARPdataOut_V_data_V_1_payload_B, ARPdataOut_V_data_V_1_sel)
    begin
        if ((ap_const_logic_1 = ARPdataOut_V_data_V_1_sel)) then 
            ARPdataOut_V_data_V_1_data_out <= ARPdataOut_V_data_V_1_payload_B;
        else 
            ARPdataOut_V_data_V_1_data_out <= ARPdataOut_V_data_V_1_payload_A;
        end if; 
    end process;

    ARPdataOut_V_data_V_1_load_A <= (not(ARPdataOut_V_data_V_1_sel_wr) and ARPdataOut_V_data_V_1_state_cmp_full);
    ARPdataOut_V_data_V_1_load_B <= (ARPdataOut_V_data_V_1_state_cmp_full and ARPdataOut_V_data_V_1_sel_wr);
    ARPdataOut_V_data_V_1_sel <= ARPdataOut_V_data_V_1_sel_rd;
    ARPdataOut_V_data_V_1_state_cmp_full <= '0' when (ARPdataOut_V_data_V_1_state = ap_const_lv2_1) else '1';

    ARPdataOut_V_data_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op32_write_state2, ap_predicate_op37_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op37_write_state2 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)))) then 
            ARPdataOut_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            ARPdataOut_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    ARPdataOut_V_data_V_1_vld_out <= ARPdataOut_V_data_V_1_state(0);
    ARPdataOut_V_keep_V_1_ack_in <= ARPdataOut_V_keep_V_1_state(1);
    ARPdataOut_V_keep_V_1_ack_out <= m_axis_arp_TREADY;

    ARPdataOut_V_keep_V_1_data_out_assign_proc : process(ARPdataOut_V_keep_V_1_payload_A, ARPdataOut_V_keep_V_1_payload_B, ARPdataOut_V_keep_V_1_sel)
    begin
        if ((ap_const_logic_1 = ARPdataOut_V_keep_V_1_sel)) then 
            ARPdataOut_V_keep_V_1_data_out <= ARPdataOut_V_keep_V_1_payload_B;
        else 
            ARPdataOut_V_keep_V_1_data_out <= ARPdataOut_V_keep_V_1_payload_A;
        end if; 
    end process;

    ARPdataOut_V_keep_V_1_load_A <= (not(ARPdataOut_V_keep_V_1_sel_wr) and ARPdataOut_V_keep_V_1_state_cmp_full);
    ARPdataOut_V_keep_V_1_load_B <= (ARPdataOut_V_keep_V_1_state_cmp_full and ARPdataOut_V_keep_V_1_sel_wr);
    ARPdataOut_V_keep_V_1_sel <= ARPdataOut_V_keep_V_1_sel_rd;
    ARPdataOut_V_keep_V_1_state_cmp_full <= '0' when (ARPdataOut_V_keep_V_1_state = ap_const_lv2_1) else '1';

    ARPdataOut_V_keep_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op32_write_state2, ap_predicate_op37_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op37_write_state2 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)))) then 
            ARPdataOut_V_keep_V_1_vld_in <= ap_const_logic_1;
        else 
            ARPdataOut_V_keep_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    ARPdataOut_V_keep_V_1_vld_out <= ARPdataOut_V_keep_V_1_state(0);
    ARPdataOut_V_last_V_1_ack_in <= ARPdataOut_V_last_V_1_state(1);
    ARPdataOut_V_last_V_1_ack_out <= m_axis_arp_TREADY;

    ARPdataOut_V_last_V_1_data_in_assign_proc : process(ap_predicate_op32_write_state2, ap_predicate_op37_write_state2, tmp_last_V_2_reg_237, tmp_last_V_reg_250, ap_condition_503)
    begin
        if ((ap_const_boolean_1 = ap_condition_503)) then
            if ((ap_predicate_op37_write_state2 = ap_const_boolean_1)) then 
                ARPdataOut_V_last_V_1_data_in <= tmp_last_V_reg_250;
            elsif ((ap_predicate_op32_write_state2 = ap_const_boolean_1)) then 
                ARPdataOut_V_last_V_1_data_in <= tmp_last_V_2_reg_237;
            else 
                ARPdataOut_V_last_V_1_data_in <= "X";
            end if;
        else 
            ARPdataOut_V_last_V_1_data_in <= "X";
        end if; 
    end process;


    ARPdataOut_V_last_V_1_data_out_assign_proc : process(ARPdataOut_V_last_V_1_payload_A, ARPdataOut_V_last_V_1_payload_B, ARPdataOut_V_last_V_1_sel)
    begin
        if ((ap_const_logic_1 = ARPdataOut_V_last_V_1_sel)) then 
            ARPdataOut_V_last_V_1_data_out <= ARPdataOut_V_last_V_1_payload_B;
        else 
            ARPdataOut_V_last_V_1_data_out <= ARPdataOut_V_last_V_1_payload_A;
        end if; 
    end process;

    ARPdataOut_V_last_V_1_load_A <= (not(ARPdataOut_V_last_V_1_sel_wr) and ARPdataOut_V_last_V_1_state_cmp_full);
    ARPdataOut_V_last_V_1_load_B <= (ARPdataOut_V_last_V_1_state_cmp_full and ARPdataOut_V_last_V_1_sel_wr);
    ARPdataOut_V_last_V_1_sel <= ARPdataOut_V_last_V_1_sel_rd;
    ARPdataOut_V_last_V_1_state_cmp_full <= '0' when (ARPdataOut_V_last_V_1_state = ap_const_lv2_1) else '1';

    ARPdataOut_V_last_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op32_write_state2, ap_predicate_op37_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op37_write_state2 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)))) then 
            ARPdataOut_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            ARPdataOut_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    ARPdataOut_V_last_V_1_vld_out <= ARPdataOut_V_last_V_1_state(0);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, etherTypeFifo_V_V_empty_n, ap_predicate_op10_read_state1, io_acc_block_signal_op12, ap_predicate_op12_read_state1, io_acc_block_signal_op20, ap_predicate_op20_read_state1, io_acc_block_signal_op35, ap_predicate_op35_write_state2, io_acc_block_signal_op36, ap_predicate_op36_write_state2, m_axis_arp_TREADY, ARPdataOut_V_data_V_1_state, ARPdataOut_V_keep_V_1_state, ARPdataOut_V_last_V_1_state)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((io_acc_block_signal_op20 = ap_const_logic_0) and (ap_predicate_op20_read_state1 = ap_const_boolean_1)) or ((io_acc_block_signal_op12 = ap_const_logic_0) and (ap_predicate_op12_read_state1 = ap_const_boolean_1)) or ((etherTypeFifo_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op10_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_lv2_1 = ARPdataOut_V_last_V_1_state) or (ap_const_lv2_1 = ARPdataOut_V_keep_V_1_state) or (ap_const_lv2_1 = ARPdataOut_V_data_V_1_state) or ((m_axis_arp_TREADY = ap_const_logic_0) and (ap_const_lv2_3 = ARPdataOut_V_last_V_1_state)) or ((m_axis_arp_TREADY = ap_const_logic_0) and (ap_const_lv2_3 = ARPdataOut_V_keep_V_1_state)) or ((m_axis_arp_TREADY = ap_const_logic_0) and (ap_const_lv2_3 = ARPdataOut_V_data_V_1_state)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((io_acc_block_signal_op36 = ap_const_logic_0) and (ap_predicate_op36_write_state2 = ap_const_boolean_1)) or ((io_acc_block_signal_op35 = ap_const_logic_0) and (ap_predicate_op35_write_state2 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, etherTypeFifo_V_V_empty_n, ap_predicate_op10_read_state1, io_acc_block_signal_op12, ap_predicate_op12_read_state1, io_acc_block_signal_op20, ap_predicate_op20_read_state1, io_acc_block_signal_op35, ap_predicate_op35_write_state2, io_acc_block_signal_op36, ap_predicate_op36_write_state2, m_axis_arp_TREADY, ap_block_state2_io, ARPdataOut_V_data_V_1_state, ARPdataOut_V_keep_V_1_state, ARPdataOut_V_last_V_1_state, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((io_acc_block_signal_op20 = ap_const_logic_0) and (ap_predicate_op20_read_state1 = ap_const_boolean_1)) or ((io_acc_block_signal_op12 = ap_const_logic_0) and (ap_predicate_op12_read_state1 = ap_const_boolean_1)) or ((etherTypeFifo_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op10_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_lv2_1 = ARPdataOut_V_last_V_1_state) or (ap_const_lv2_1 = ARPdataOut_V_keep_V_1_state) or (ap_const_lv2_1 = ARPdataOut_V_data_V_1_state) or ((m_axis_arp_TREADY = ap_const_logic_0) and (ap_const_lv2_3 = ARPdataOut_V_last_V_1_state)) or ((m_axis_arp_TREADY = ap_const_logic_0) and (ap_const_lv2_3 = ARPdataOut_V_keep_V_1_state)) or ((m_axis_arp_TREADY = ap_const_logic_0) and (ap_const_lv2_3 = ARPdataOut_V_data_V_1_state)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state2_io) or ((io_acc_block_signal_op36 = ap_const_logic_0) and (ap_predicate_op36_write_state2 = ap_const_boolean_1)) or ((io_acc_block_signal_op35 = ap_const_logic_0) and (ap_predicate_op35_write_state2 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, etherTypeFifo_V_V_empty_n, ap_predicate_op10_read_state1, io_acc_block_signal_op12, ap_predicate_op12_read_state1, io_acc_block_signal_op20, ap_predicate_op20_read_state1, io_acc_block_signal_op35, ap_predicate_op35_write_state2, io_acc_block_signal_op36, ap_predicate_op36_write_state2, m_axis_arp_TREADY, ap_block_state2_io, ARPdataOut_V_data_V_1_state, ARPdataOut_V_keep_V_1_state, ARPdataOut_V_last_V_1_state, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((io_acc_block_signal_op20 = ap_const_logic_0) and (ap_predicate_op20_read_state1 = ap_const_boolean_1)) or ((io_acc_block_signal_op12 = ap_const_logic_0) and (ap_predicate_op12_read_state1 = ap_const_boolean_1)) or ((etherTypeFifo_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op10_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_lv2_1 = ARPdataOut_V_last_V_1_state) or (ap_const_lv2_1 = ARPdataOut_V_keep_V_1_state) or (ap_const_lv2_1 = ARPdataOut_V_data_V_1_state) or ((m_axis_arp_TREADY = ap_const_logic_0) and (ap_const_lv2_3 = ARPdataOut_V_last_V_1_state)) or ((m_axis_arp_TREADY = ap_const_logic_0) and (ap_const_lv2_3 = ARPdataOut_V_keep_V_1_state)) or ((m_axis_arp_TREADY = ap_const_logic_0) and (ap_const_lv2_3 = ARPdataOut_V_data_V_1_state)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state2_io) or ((io_acc_block_signal_op36 = ap_const_logic_0) and (ap_predicate_op36_write_state2 = ap_const_boolean_1)) or ((io_acc_block_signal_op35 = ap_const_logic_0) and (ap_predicate_op35_write_state2 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg, etherTypeFifo_V_V_empty_n, ap_predicate_op10_read_state1, io_acc_block_signal_op12, ap_predicate_op12_read_state1, io_acc_block_signal_op20, ap_predicate_op20_read_state1)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((io_acc_block_signal_op20 = ap_const_logic_0) and (ap_predicate_op20_read_state1 = ap_const_boolean_1)) or ((io_acc_block_signal_op12 = ap_const_logic_0) and (ap_predicate_op12_read_state1 = ap_const_boolean_1)) or ((etherTypeFifo_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op10_read_state1 = ap_const_boolean_1)));
    end process;


    ap_block_state2_io_assign_proc : process(ARPdataOut_V_data_V_1_ack_in, ap_predicate_op32_write_state2, ap_predicate_op37_write_state2)
    begin
                ap_block_state2_io <= (((ap_const_logic_0 = ARPdataOut_V_data_V_1_ack_in) and (ap_predicate_op37_write_state2 = ap_const_boolean_1)) or ((ap_const_logic_0 = ARPdataOut_V_data_V_1_ack_in) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(io_acc_block_signal_op35, ap_predicate_op35_write_state2, io_acc_block_signal_op36, ap_predicate_op36_write_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (((io_acc_block_signal_op36 = ap_const_logic_0) and (ap_predicate_op36_write_state2 = ap_const_boolean_1)) or ((io_acc_block_signal_op35 = ap_const_logic_0) and (ap_predicate_op35_write_state2 = ap_const_boolean_1)));
    end process;


    ap_block_state3_io_assign_proc : process(ARPdataOut_V_data_V_1_ack_in, ap_predicate_op51_write_state3, ap_predicate_op60_write_state3)
    begin
                ap_block_state3_io <= (((ap_const_logic_0 = ARPdataOut_V_data_V_1_ack_in) and (ap_predicate_op60_write_state3 = ap_const_boolean_1)) or ((ap_const_logic_0 = ARPdataOut_V_data_V_1_ack_in) and (ap_predicate_op51_write_state3 = ap_const_boolean_1)));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(m_axis_arp_TREADY, ARPdataOut_V_data_V_1_state, ARPdataOut_V_keep_V_1_state, ARPdataOut_V_last_V_1_state)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((ap_const_lv2_1 = ARPdataOut_V_last_V_1_state) or (ap_const_lv2_1 = ARPdataOut_V_keep_V_1_state) or (ap_const_lv2_1 = ARPdataOut_V_data_V_1_state) or ((m_axis_arp_TREADY = ap_const_logic_0) and (ap_const_lv2_3 = ARPdataOut_V_last_V_1_state)) or ((m_axis_arp_TREADY = ap_const_logic_0) and (ap_const_lv2_3 = ARPdataOut_V_keep_V_1_state)) or ((m_axis_arp_TREADY = ap_const_logic_0) and (ap_const_lv2_3 = ARPdataOut_V_data_V_1_state)));
    end process;


    ap_condition_503_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_01001)
    begin
                ap_condition_503 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_574_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, grp_nbreadreq_fu_82_p5, ap_block_pp0_stage0_11001)
    begin
                ap_condition_574 <= ((grp_nbreadreq_fu_82_p5 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_575_assign_proc : process(tmp_1_nbreadreq_fu_74_p3, rep_fsmState_V, grp_fu_157_p1)
    begin
                ap_condition_575 <= ((tmp_1_nbreadreq_fu_74_p3 = ap_const_lv1_1) and (grp_fu_157_p1 = ap_const_lv1_0) and (rep_fsmState_V = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op10_read_state1_assign_proc : process(tmp_1_nbreadreq_fu_74_p3, grp_nbreadreq_fu_82_p5, rep_fsmState_V)
    begin
                ap_predicate_op10_read_state1 <= ((grp_nbreadreq_fu_82_p5 = ap_const_lv1_1) and (tmp_1_nbreadreq_fu_74_p3 = ap_const_lv1_1) and (rep_fsmState_V = ap_const_lv1_0));
    end process;


    ap_predicate_op12_read_state1_assign_proc : process(tmp_1_nbreadreq_fu_74_p3, grp_nbreadreq_fu_82_p5, rep_fsmState_V)
    begin
                ap_predicate_op12_read_state1 <= ((grp_nbreadreq_fu_82_p5 = ap_const_lv1_1) and (tmp_1_nbreadreq_fu_74_p3 = ap_const_lv1_1) and (rep_fsmState_V = ap_const_lv1_0));
    end process;


    ap_predicate_op20_read_state1_assign_proc : process(grp_nbreadreq_fu_82_p5, rep_fsmState_V)
    begin
                ap_predicate_op20_read_state1 <= ((grp_nbreadreq_fu_82_p5 = ap_const_lv1_1) and (rep_fsmState_V = ap_const_lv1_1));
    end process;


    ap_predicate_op32_write_state2_assign_proc : process(rep_fsmState_V_load_reg_225, tmp_1_reg_229, tmp_2_reg_233, icmp_ln879_2_reg_242)
    begin
                ap_predicate_op32_write_state2 <= ((icmp_ln879_2_reg_242 = ap_const_lv1_1) and (tmp_2_reg_233 = ap_const_lv1_1) and (tmp_1_reg_229 = ap_const_lv1_1) and (rep_fsmState_V_load_reg_225 = ap_const_lv1_0));
    end process;


    ap_predicate_op35_write_state2_assign_proc : process(rep_fsmState_V_load_reg_225, tmp_reg_246, icmp_ln879_reg_257, icmp_ln879_1_reg_261, icmp_ln879_3_reg_265)
    begin
                ap_predicate_op35_write_state2 <= ((icmp_ln879_3_reg_265 = ap_const_lv1_1) and (tmp_reg_246 = ap_const_lv1_1) and (rep_fsmState_V_load_reg_225 = ap_const_lv1_1) and (icmp_ln879_1_reg_261 = ap_const_lv1_0) and (icmp_ln879_reg_257 = ap_const_lv1_0));
    end process;


    ap_predicate_op36_write_state2_assign_proc : process(rep_fsmState_V_load_reg_225, tmp_reg_246, icmp_ln879_reg_257, icmp_ln879_1_reg_261)
    begin
                ap_predicate_op36_write_state2 <= ((icmp_ln879_1_reg_261 = ap_const_lv1_1) and (tmp_reg_246 = ap_const_lv1_1) and (rep_fsmState_V_load_reg_225 = ap_const_lv1_1) and (icmp_ln879_reg_257 = ap_const_lv1_0));
    end process;


    ap_predicate_op37_write_state2_assign_proc : process(rep_fsmState_V_load_reg_225, tmp_reg_246, icmp_ln879_reg_257)
    begin
                ap_predicate_op37_write_state2 <= ((icmp_ln879_reg_257 = ap_const_lv1_1) and (tmp_reg_246 = ap_const_lv1_1) and (rep_fsmState_V_load_reg_225 = ap_const_lv1_1));
    end process;


    ap_predicate_op51_write_state3_assign_proc : process(rep_fsmState_V_load_reg_225_pp0_iter1_reg, tmp_1_reg_229_pp0_iter1_reg, tmp_2_reg_233_pp0_iter1_reg, icmp_ln879_2_reg_242_pp0_iter1_reg)
    begin
                ap_predicate_op51_write_state3 <= ((icmp_ln879_2_reg_242_pp0_iter1_reg = ap_const_lv1_1) and (tmp_2_reg_233_pp0_iter1_reg = ap_const_lv1_1) and (tmp_1_reg_229_pp0_iter1_reg = ap_const_lv1_1) and (rep_fsmState_V_load_reg_225_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op60_write_state3_assign_proc : process(rep_fsmState_V_load_reg_225_pp0_iter1_reg, tmp_reg_246_pp0_iter1_reg, icmp_ln879_reg_257_pp0_iter1_reg)
    begin
                ap_predicate_op60_write_state3 <= ((icmp_ln879_reg_257_pp0_iter1_reg = ap_const_lv1_1) and (tmp_reg_246_pp0_iter1_reg = ap_const_lv1_1) and (rep_fsmState_V_load_reg_225_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ethDataFifo_V_data_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ethDataFifo_V_data_V_empty_n, ap_predicate_op12_read_state1, ap_predicate_op20_read_state1, ap_block_pp0_stage0)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op20_read_state1 = ap_const_boolean_1)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op12_read_state1 = ap_const_boolean_1)))) then 
            ethDataFifo_V_data_V_blk_n <= ethDataFifo_V_data_V_empty_n;
        else 
            ethDataFifo_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ethDataFifo_V_data_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op12_read_state1, ap_predicate_op20_read_state1, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op20_read_state1 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op12_read_state1 = ap_const_boolean_1)))) then 
            ethDataFifo_V_data_V_read <= ap_const_logic_1;
        else 
            ethDataFifo_V_data_V_read <= ap_const_logic_0;
        end if; 
    end process;


    ethDataFifo_V_keep_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ethDataFifo_V_keep_V_empty_n, ap_predicate_op12_read_state1, ap_predicate_op20_read_state1, ap_block_pp0_stage0)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op20_read_state1 = ap_const_boolean_1)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op12_read_state1 = ap_const_boolean_1)))) then 
            ethDataFifo_V_keep_V_blk_n <= ethDataFifo_V_keep_V_empty_n;
        else 
            ethDataFifo_V_keep_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ethDataFifo_V_keep_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op12_read_state1, ap_predicate_op20_read_state1, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op20_read_state1 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op12_read_state1 = ap_const_boolean_1)))) then 
            ethDataFifo_V_keep_V_read <= ap_const_logic_1;
        else 
            ethDataFifo_V_keep_V_read <= ap_const_logic_0;
        end if; 
    end process;


    ethDataFifo_V_last_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ethDataFifo_V_last_V_empty_n, ap_predicate_op12_read_state1, ap_predicate_op20_read_state1, ap_block_pp0_stage0)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op20_read_state1 = ap_const_boolean_1)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op12_read_state1 = ap_const_boolean_1)))) then 
            ethDataFifo_V_last_V_blk_n <= ethDataFifo_V_last_V_empty_n;
        else 
            ethDataFifo_V_last_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ethDataFifo_V_last_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op12_read_state1, ap_predicate_op20_read_state1, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op20_read_state1 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op12_read_state1 = ap_const_boolean_1)))) then 
            ethDataFifo_V_last_V_read <= ap_const_logic_1;
        else 
            ethDataFifo_V_last_V_read <= ap_const_logic_0;
        end if; 
    end process;


    etherTypeFifo_V_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, etherTypeFifo_V_V_empty_n, ap_predicate_op10_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op10_read_state1 = ap_const_boolean_1))) then 
            etherTypeFifo_V_V_blk_n <= etherTypeFifo_V_V_empty_n;
        else 
            etherTypeFifo_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    etherTypeFifo_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op10_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op10_read_state1 = ap_const_boolean_1))) then 
            etherTypeFifo_V_V_read <= ap_const_logic_1;
        else 
            etherTypeFifo_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_157_p1 <= ethDataFifo_V_last_V_dout;
    grp_nbreadreq_fu_82_p5 <= (0=>(ethDataFifo_V_last_V_empty_n and ethDataFifo_V_keep_V_empty_n and ethDataFifo_V_data_V_empty_n), others=>'-');
    icmp_ln879_1_fu_207_p2 <= "1" when (rep_etherType_V = ap_const_lv16_800) else "0";
    icmp_ln879_2_fu_189_p2 <= "1" when (etherTypeFifo_V_V_dout = ap_const_lv16_806) else "0";
    icmp_ln879_3_fu_213_p2 <= "1" when (rep_etherType_V = ap_const_lv16_86DD) else "0";
    icmp_ln879_fu_201_p2 <= "1" when (rep_etherType_V = ap_const_lv16_806) else "0";
    io_acc_block_signal_op12 <= (ethDataFifo_V_last_V_empty_n and ethDataFifo_V_keep_V_empty_n and ethDataFifo_V_data_V_empty_n);
    io_acc_block_signal_op20 <= (ethDataFifo_V_last_V_empty_n and ethDataFifo_V_keep_V_empty_n and ethDataFifo_V_data_V_empty_n);
    io_acc_block_signal_op35 <= (ipv6ShiftFifo_V_last_full_n and ipv6ShiftFifo_V_keep_full_n and ipv6ShiftFifo_V_data_full_n);
    io_acc_block_signal_op36 <= (ipv4ShiftFifo_V_last_full_n and ipv4ShiftFifo_V_keep_full_n and ipv4ShiftFifo_V_data_full_n);

    ipv4ShiftFifo_V_data_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ipv4ShiftFifo_V_data_full_n, ap_predicate_op36_write_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op36_write_state2 = ap_const_boolean_1))) then 
            ipv4ShiftFifo_V_data_blk_n <= ipv4ShiftFifo_V_data_full_n;
        else 
            ipv4ShiftFifo_V_data_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ipv4ShiftFifo_V_data_din <= reg_161;

    ipv4ShiftFifo_V_data_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op36_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op36_write_state2 = ap_const_boolean_1))) then 
            ipv4ShiftFifo_V_data_write <= ap_const_logic_1;
        else 
            ipv4ShiftFifo_V_data_write <= ap_const_logic_0;
        end if; 
    end process;


    ipv4ShiftFifo_V_keep_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ipv4ShiftFifo_V_keep_full_n, ap_predicate_op36_write_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op36_write_state2 = ap_const_boolean_1))) then 
            ipv4ShiftFifo_V_keep_blk_n <= ipv4ShiftFifo_V_keep_full_n;
        else 
            ipv4ShiftFifo_V_keep_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ipv4ShiftFifo_V_keep_din <= reg_168;

    ipv4ShiftFifo_V_keep_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op36_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op36_write_state2 = ap_const_boolean_1))) then 
            ipv4ShiftFifo_V_keep_write <= ap_const_logic_1;
        else 
            ipv4ShiftFifo_V_keep_write <= ap_const_logic_0;
        end if; 
    end process;


    ipv4ShiftFifo_V_last_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ipv4ShiftFifo_V_last_full_n, ap_predicate_op36_write_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op36_write_state2 = ap_const_boolean_1))) then 
            ipv4ShiftFifo_V_last_blk_n <= ipv4ShiftFifo_V_last_full_n;
        else 
            ipv4ShiftFifo_V_last_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ipv4ShiftFifo_V_last_din <= tmp_last_V_reg_250;

    ipv4ShiftFifo_V_last_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op36_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op36_write_state2 = ap_const_boolean_1))) then 
            ipv4ShiftFifo_V_last_write <= ap_const_logic_1;
        else 
            ipv4ShiftFifo_V_last_write <= ap_const_logic_0;
        end if; 
    end process;


    ipv6ShiftFifo_V_data_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ipv6ShiftFifo_V_data_full_n, ap_predicate_op35_write_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op35_write_state2 = ap_const_boolean_1))) then 
            ipv6ShiftFifo_V_data_blk_n <= ipv6ShiftFifo_V_data_full_n;
        else 
            ipv6ShiftFifo_V_data_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ipv6ShiftFifo_V_data_din <= reg_161;

    ipv6ShiftFifo_V_data_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op35_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op35_write_state2 = ap_const_boolean_1))) then 
            ipv6ShiftFifo_V_data_write <= ap_const_logic_1;
        else 
            ipv6ShiftFifo_V_data_write <= ap_const_logic_0;
        end if; 
    end process;


    ipv6ShiftFifo_V_keep_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ipv6ShiftFifo_V_keep_full_n, ap_predicate_op35_write_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op35_write_state2 = ap_const_boolean_1))) then 
            ipv6ShiftFifo_V_keep_blk_n <= ipv6ShiftFifo_V_keep_full_n;
        else 
            ipv6ShiftFifo_V_keep_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ipv6ShiftFifo_V_keep_din <= reg_168;

    ipv6ShiftFifo_V_keep_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op35_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op35_write_state2 = ap_const_boolean_1))) then 
            ipv6ShiftFifo_V_keep_write <= ap_const_logic_1;
        else 
            ipv6ShiftFifo_V_keep_write <= ap_const_logic_0;
        end if; 
    end process;


    ipv6ShiftFifo_V_last_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ipv6ShiftFifo_V_last_full_n, ap_predicate_op35_write_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op35_write_state2 = ap_const_boolean_1))) then 
            ipv6ShiftFifo_V_last_blk_n <= ipv6ShiftFifo_V_last_full_n;
        else 
            ipv6ShiftFifo_V_last_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ipv6ShiftFifo_V_last_din <= tmp_last_V_reg_250;

    ipv6ShiftFifo_V_last_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op35_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op35_write_state2 = ap_const_boolean_1))) then 
            ipv6ShiftFifo_V_last_write <= ap_const_logic_1;
        else 
            ipv6ShiftFifo_V_last_write <= ap_const_logic_0;
        end if; 
    end process;

    m_axis_arp_TDATA <= ARPdataOut_V_data_V_1_data_out;

    m_axis_arp_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_predicate_op32_write_state2, ap_predicate_op37_write_state2, ARPdataOut_V_data_V_1_state, ap_predicate_op51_write_state3, ap_predicate_op60_write_state3, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op60_write_state3 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op51_write_state3 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op37_write_state2 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)))) then 
            m_axis_arp_TDATA_blk_n <= ARPdataOut_V_data_V_1_state(1);
        else 
            m_axis_arp_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    m_axis_arp_TKEEP <= ARPdataOut_V_keep_V_1_data_out;
    m_axis_arp_TLAST <= ARPdataOut_V_last_V_1_data_out;
    m_axis_arp_TVALID <= ARPdataOut_V_last_V_1_state(0);
    tmp_1_nbreadreq_fu_74_p3 <= (0=>(etherTypeFifo_V_V_empty_n), others=>'-');
end behav;
