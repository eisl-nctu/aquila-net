-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ipv4_top is
port (
    s_axis_rx_data_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    s_axis_rx_data_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
    s_axis_rx_data_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axis_rx_meta_V_TDATA : OUT STD_LOGIC_VECTOR (47 downto 0);
    m_axis_rx_data_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axis_rx_data_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axis_rx_data_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axis_tx_meta_V_TDATA : IN STD_LOGIC_VECTOR (47 downto 0);
    s_axis_tx_data_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    s_axis_tx_data_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
    s_axis_tx_data_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axis_tx_data_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axis_tx_data_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axis_tx_data_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    local_ipv4_address_V : IN STD_LOGIC_VECTOR (31 downto 0);
    protocol_V : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    s_axis_rx_data_TVALID : IN STD_LOGIC;
    s_axis_rx_data_TREADY : OUT STD_LOGIC;
    m_axis_rx_meta_V_TVALID : OUT STD_LOGIC;
    m_axis_rx_meta_V_TREADY : IN STD_LOGIC;
    m_axis_rx_data_TVALID : OUT STD_LOGIC;
    m_axis_rx_data_TREADY : IN STD_LOGIC;
    s_axis_tx_data_TVALID : IN STD_LOGIC;
    s_axis_tx_data_TREADY : OUT STD_LOGIC;
    s_axis_tx_meta_V_TVALID : IN STD_LOGIC;
    s_axis_tx_meta_V_TREADY : OUT STD_LOGIC;
    m_axis_tx_data_TVALID : OUT STD_LOGIC;
    m_axis_tx_data_TREADY : IN STD_LOGIC );
end;


architecture behav of ipv4_top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "ipv4_top,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k325t-ffg900-2,HLS_INPUT_CLOCK=6.400000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=6.897500,HLS_SYN_LAT=5,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2261,HLS_SYN_LUT=11155,HLS_VERSION=2019_1}";
    constant ap_const_lv48_0 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal ap_rst_n_inv : STD_LOGIC;
    signal process_ipv4_64_U0_ap_start : STD_LOGIC;
    signal process_ipv4_64_U0_ap_done : STD_LOGIC;
    signal process_ipv4_64_U0_ap_continue : STD_LOGIC;
    signal process_ipv4_64_U0_ap_idle : STD_LOGIC;
    signal process_ipv4_64_U0_ap_ready : STD_LOGIC;
    signal process_ipv4_64_U0_rx_process2dropFifo_1_1_din : STD_LOGIC_VECTOR (63 downto 0);
    signal process_ipv4_64_U0_rx_process2dropFifo_1_1_write : STD_LOGIC;
    signal process_ipv4_64_U0_rx_process2dropFifo_2_0_din : STD_LOGIC_VECTOR (7 downto 0);
    signal process_ipv4_64_U0_rx_process2dropFifo_2_0_write : STD_LOGIC;
    signal process_ipv4_64_U0_rx_process2dropFifo_s_2_din : STD_LOGIC_VECTOR (0 downto 0);
    signal process_ipv4_64_U0_rx_process2dropFifo_s_2_write : STD_LOGIC;
    signal process_ipv4_64_U0_rx_process2dropLengt_1_din : STD_LOGIC_VECTOR (3 downto 0);
    signal process_ipv4_64_U0_rx_process2dropLengt_1_write : STD_LOGIC;
    signal process_ipv4_64_U0_s_axis_rx_data_TREADY : STD_LOGIC;
    signal process_ipv4_64_U0_MetaOut_V_TDATA : STD_LOGIC_VECTOR (47 downto 0);
    signal process_ipv4_64_U0_MetaOut_V_TVALID : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal drop_optional_ip_hea_U0_ap_start : STD_LOGIC;
    signal drop_optional_ip_hea_U0_ap_done : STD_LOGIC;
    signal drop_optional_ip_hea_U0_ap_continue : STD_LOGIC;
    signal drop_optional_ip_hea_U0_ap_idle : STD_LOGIC;
    signal drop_optional_ip_hea_U0_ap_ready : STD_LOGIC;
    signal drop_optional_ip_hea_U0_rx_process2dropFifo_1_1_read : STD_LOGIC;
    signal drop_optional_ip_hea_U0_rx_process2dropFifo_2_0_read : STD_LOGIC;
    signal drop_optional_ip_hea_U0_rx_process2dropFifo_s_2_read : STD_LOGIC;
    signal drop_optional_ip_hea_U0_rx_process2dropLengt_1_read : STD_LOGIC;
    signal drop_optional_ip_hea_U0_m_axis_rx_data_TDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal drop_optional_ip_hea_U0_m_axis_rx_data_TVALID : STD_LOGIC;
    signal drop_optional_ip_hea_U0_m_axis_rx_data_TKEEP : STD_LOGIC_VECTOR (7 downto 0);
    signal drop_optional_ip_hea_U0_m_axis_rx_data_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal lshiftWordByOctet_U0_ap_start : STD_LOGIC;
    signal lshiftWordByOctet_U0_ap_done : STD_LOGIC;
    signal lshiftWordByOctet_U0_ap_continue : STD_LOGIC;
    signal lshiftWordByOctet_U0_ap_idle : STD_LOGIC;
    signal lshiftWordByOctet_U0_ap_ready : STD_LOGIC;
    signal lshiftWordByOctet_U0_tx_shift2ipv4Fifo_V_1_din : STD_LOGIC_VECTOR (63 downto 0);
    signal lshiftWordByOctet_U0_tx_shift2ipv4Fifo_V_1_write : STD_LOGIC;
    signal lshiftWordByOctet_U0_tx_shift2ipv4Fifo_V_2_din : STD_LOGIC_VECTOR (7 downto 0);
    signal lshiftWordByOctet_U0_tx_shift2ipv4Fifo_V_2_write : STD_LOGIC;
    signal lshiftWordByOctet_U0_tx_shift2ipv4Fifo_V_s_din : STD_LOGIC_VECTOR (0 downto 0);
    signal lshiftWordByOctet_U0_tx_shift2ipv4Fifo_V_s_write : STD_LOGIC;
    signal lshiftWordByOctet_U0_s_axis_tx_data_TREADY : STD_LOGIC;
    signal generate_ipv4_64_U0_ap_start : STD_LOGIC;
    signal generate_ipv4_64_U0_ap_done : STD_LOGIC;
    signal generate_ipv4_64_U0_ap_continue : STD_LOGIC;
    signal generate_ipv4_64_U0_ap_idle : STD_LOGIC;
    signal generate_ipv4_64_U0_ap_ready : STD_LOGIC;
    signal generate_ipv4_64_U0_tx_shift2ipv4Fifo_V_1_read : STD_LOGIC;
    signal generate_ipv4_64_U0_tx_shift2ipv4Fifo_V_2_read : STD_LOGIC;
    signal generate_ipv4_64_U0_tx_shift2ipv4Fifo_V_s_read : STD_LOGIC;
    signal generate_ipv4_64_U0_txEng_ipMetaDataFifoIn_V_TREADY : STD_LOGIC;
    signal generate_ipv4_64_U0_m_axis_tx_data_TDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal generate_ipv4_64_U0_m_axis_tx_data_TVALID : STD_LOGIC;
    signal generate_ipv4_64_U0_m_axis_tx_data_TKEEP : STD_LOGIC_VECTOR (7 downto 0);
    signal generate_ipv4_64_U0_m_axis_tx_data_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal rx_process2dropFifo_1_1_full_n : STD_LOGIC;
    signal rx_process2dropFifo_1_1_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal rx_process2dropFifo_1_1_empty_n : STD_LOGIC;
    signal rx_process2dropFifo_2_0_full_n : STD_LOGIC;
    signal rx_process2dropFifo_2_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal rx_process2dropFifo_2_0_empty_n : STD_LOGIC;
    signal rx_process2dropFifo_s_2_full_n : STD_LOGIC;
    signal rx_process2dropFifo_s_2_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal rx_process2dropFifo_s_2_empty_n : STD_LOGIC;
    signal rx_process2dropLengt_1_full_n : STD_LOGIC;
    signal rx_process2dropLengt_1_dout : STD_LOGIC_VECTOR (3 downto 0);
    signal rx_process2dropLengt_1_empty_n : STD_LOGIC;
    signal tx_shift2ipv4Fifo_V_1_full_n : STD_LOGIC;
    signal tx_shift2ipv4Fifo_V_1_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal tx_shift2ipv4Fifo_V_1_empty_n : STD_LOGIC;
    signal tx_shift2ipv4Fifo_V_2_full_n : STD_LOGIC;
    signal tx_shift2ipv4Fifo_V_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal tx_shift2ipv4Fifo_V_2_empty_n : STD_LOGIC;
    signal tx_shift2ipv4Fifo_V_s_full_n : STD_LOGIC;
    signal tx_shift2ipv4Fifo_V_s_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal tx_shift2ipv4Fifo_V_s_empty_n : STD_LOGIC;

    component process_ipv4_64_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_axis_rx_data_TVALID : IN STD_LOGIC;
        rx_process2dropFifo_1_1_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        rx_process2dropFifo_1_1_full_n : IN STD_LOGIC;
        rx_process2dropFifo_1_1_write : OUT STD_LOGIC;
        rx_process2dropFifo_2_0_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        rx_process2dropFifo_2_0_full_n : IN STD_LOGIC;
        rx_process2dropFifo_2_0_write : OUT STD_LOGIC;
        rx_process2dropFifo_s_2_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        rx_process2dropFifo_s_2_full_n : IN STD_LOGIC;
        rx_process2dropFifo_s_2_write : OUT STD_LOGIC;
        rx_process2dropLengt_1_din : OUT STD_LOGIC_VECTOR (3 downto 0);
        rx_process2dropLengt_1_full_n : IN STD_LOGIC;
        rx_process2dropLengt_1_write : OUT STD_LOGIC;
        MetaOut_V_TREADY : IN STD_LOGIC;
        s_axis_rx_data_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        s_axis_rx_data_TREADY : OUT STD_LOGIC;
        s_axis_rx_data_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
        s_axis_rx_data_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        MetaOut_V_TDATA : OUT STD_LOGIC_VECTOR (47 downto 0);
        MetaOut_V_TVALID : OUT STD_LOGIC );
    end component;


    component drop_optional_ip_hea IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        rx_process2dropFifo_1_1_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        rx_process2dropFifo_1_1_empty_n : IN STD_LOGIC;
        rx_process2dropFifo_1_1_read : OUT STD_LOGIC;
        rx_process2dropFifo_2_0_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        rx_process2dropFifo_2_0_empty_n : IN STD_LOGIC;
        rx_process2dropFifo_2_0_read : OUT STD_LOGIC;
        rx_process2dropFifo_s_2_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        rx_process2dropFifo_s_2_empty_n : IN STD_LOGIC;
        rx_process2dropFifo_s_2_read : OUT STD_LOGIC;
        rx_process2dropLengt_1_dout : IN STD_LOGIC_VECTOR (3 downto 0);
        rx_process2dropLengt_1_empty_n : IN STD_LOGIC;
        rx_process2dropLengt_1_read : OUT STD_LOGIC;
        m_axis_rx_data_TREADY : IN STD_LOGIC;
        m_axis_rx_data_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axis_rx_data_TVALID : OUT STD_LOGIC;
        m_axis_rx_data_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axis_rx_data_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component lshiftWordByOctet IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_axis_tx_data_TVALID : IN STD_LOGIC;
        tx_shift2ipv4Fifo_V_1_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        tx_shift2ipv4Fifo_V_1_full_n : IN STD_LOGIC;
        tx_shift2ipv4Fifo_V_1_write : OUT STD_LOGIC;
        tx_shift2ipv4Fifo_V_2_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        tx_shift2ipv4Fifo_V_2_full_n : IN STD_LOGIC;
        tx_shift2ipv4Fifo_V_2_write : OUT STD_LOGIC;
        tx_shift2ipv4Fifo_V_s_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        tx_shift2ipv4Fifo_V_s_full_n : IN STD_LOGIC;
        tx_shift2ipv4Fifo_V_s_write : OUT STD_LOGIC;
        s_axis_tx_data_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        s_axis_tx_data_TREADY : OUT STD_LOGIC;
        s_axis_tx_data_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
        s_axis_tx_data_TLAST : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component generate_ipv4_64_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        tx_shift2ipv4Fifo_V_1_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        tx_shift2ipv4Fifo_V_1_empty_n : IN STD_LOGIC;
        tx_shift2ipv4Fifo_V_1_read : OUT STD_LOGIC;
        tx_shift2ipv4Fifo_V_2_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        tx_shift2ipv4Fifo_V_2_empty_n : IN STD_LOGIC;
        tx_shift2ipv4Fifo_V_2_read : OUT STD_LOGIC;
        tx_shift2ipv4Fifo_V_s_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        tx_shift2ipv4Fifo_V_s_empty_n : IN STD_LOGIC;
        tx_shift2ipv4Fifo_V_s_read : OUT STD_LOGIC;
        txEng_ipMetaDataFifoIn_V_TVALID : IN STD_LOGIC;
        m_axis_tx_data_TREADY : IN STD_LOGIC;
        txEng_ipMetaDataFifoIn_V_TDATA : IN STD_LOGIC_VECTOR (47 downto 0);
        txEng_ipMetaDataFifoIn_V_TREADY : OUT STD_LOGIC;
        m_axis_tx_data_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axis_tx_data_TVALID : OUT STD_LOGIC;
        m_axis_tx_data_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axis_tx_data_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        local_ipv4_address_V : IN STD_LOGIC_VECTOR (31 downto 0);
        protocol_V : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component fifo_w64_d8_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w8_d8_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w1_d8_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w4_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (3 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    process_ipv4_64_U0 : component process_ipv4_64_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => process_ipv4_64_U0_ap_start,
        ap_done => process_ipv4_64_U0_ap_done,
        ap_continue => process_ipv4_64_U0_ap_continue,
        ap_idle => process_ipv4_64_U0_ap_idle,
        ap_ready => process_ipv4_64_U0_ap_ready,
        s_axis_rx_data_TVALID => s_axis_rx_data_TVALID,
        rx_process2dropFifo_1_1_din => process_ipv4_64_U0_rx_process2dropFifo_1_1_din,
        rx_process2dropFifo_1_1_full_n => rx_process2dropFifo_1_1_full_n,
        rx_process2dropFifo_1_1_write => process_ipv4_64_U0_rx_process2dropFifo_1_1_write,
        rx_process2dropFifo_2_0_din => process_ipv4_64_U0_rx_process2dropFifo_2_0_din,
        rx_process2dropFifo_2_0_full_n => rx_process2dropFifo_2_0_full_n,
        rx_process2dropFifo_2_0_write => process_ipv4_64_U0_rx_process2dropFifo_2_0_write,
        rx_process2dropFifo_s_2_din => process_ipv4_64_U0_rx_process2dropFifo_s_2_din,
        rx_process2dropFifo_s_2_full_n => rx_process2dropFifo_s_2_full_n,
        rx_process2dropFifo_s_2_write => process_ipv4_64_U0_rx_process2dropFifo_s_2_write,
        rx_process2dropLengt_1_din => process_ipv4_64_U0_rx_process2dropLengt_1_din,
        rx_process2dropLengt_1_full_n => rx_process2dropLengt_1_full_n,
        rx_process2dropLengt_1_write => process_ipv4_64_U0_rx_process2dropLengt_1_write,
        MetaOut_V_TREADY => m_axis_rx_meta_V_TREADY,
        s_axis_rx_data_TDATA => s_axis_rx_data_TDATA,
        s_axis_rx_data_TREADY => process_ipv4_64_U0_s_axis_rx_data_TREADY,
        s_axis_rx_data_TKEEP => s_axis_rx_data_TKEEP,
        s_axis_rx_data_TLAST => s_axis_rx_data_TLAST,
        MetaOut_V_TDATA => process_ipv4_64_U0_MetaOut_V_TDATA,
        MetaOut_V_TVALID => process_ipv4_64_U0_MetaOut_V_TVALID);

    drop_optional_ip_hea_U0 : component drop_optional_ip_hea
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => drop_optional_ip_hea_U0_ap_start,
        ap_done => drop_optional_ip_hea_U0_ap_done,
        ap_continue => drop_optional_ip_hea_U0_ap_continue,
        ap_idle => drop_optional_ip_hea_U0_ap_idle,
        ap_ready => drop_optional_ip_hea_U0_ap_ready,
        rx_process2dropFifo_1_1_dout => rx_process2dropFifo_1_1_dout,
        rx_process2dropFifo_1_1_empty_n => rx_process2dropFifo_1_1_empty_n,
        rx_process2dropFifo_1_1_read => drop_optional_ip_hea_U0_rx_process2dropFifo_1_1_read,
        rx_process2dropFifo_2_0_dout => rx_process2dropFifo_2_0_dout,
        rx_process2dropFifo_2_0_empty_n => rx_process2dropFifo_2_0_empty_n,
        rx_process2dropFifo_2_0_read => drop_optional_ip_hea_U0_rx_process2dropFifo_2_0_read,
        rx_process2dropFifo_s_2_dout => rx_process2dropFifo_s_2_dout,
        rx_process2dropFifo_s_2_empty_n => rx_process2dropFifo_s_2_empty_n,
        rx_process2dropFifo_s_2_read => drop_optional_ip_hea_U0_rx_process2dropFifo_s_2_read,
        rx_process2dropLengt_1_dout => rx_process2dropLengt_1_dout,
        rx_process2dropLengt_1_empty_n => rx_process2dropLengt_1_empty_n,
        rx_process2dropLengt_1_read => drop_optional_ip_hea_U0_rx_process2dropLengt_1_read,
        m_axis_rx_data_TREADY => m_axis_rx_data_TREADY,
        m_axis_rx_data_TDATA => drop_optional_ip_hea_U0_m_axis_rx_data_TDATA,
        m_axis_rx_data_TVALID => drop_optional_ip_hea_U0_m_axis_rx_data_TVALID,
        m_axis_rx_data_TKEEP => drop_optional_ip_hea_U0_m_axis_rx_data_TKEEP,
        m_axis_rx_data_TLAST => drop_optional_ip_hea_U0_m_axis_rx_data_TLAST);

    lshiftWordByOctet_U0 : component lshiftWordByOctet
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => lshiftWordByOctet_U0_ap_start,
        ap_done => lshiftWordByOctet_U0_ap_done,
        ap_continue => lshiftWordByOctet_U0_ap_continue,
        ap_idle => lshiftWordByOctet_U0_ap_idle,
        ap_ready => lshiftWordByOctet_U0_ap_ready,
        s_axis_tx_data_TVALID => s_axis_tx_data_TVALID,
        tx_shift2ipv4Fifo_V_1_din => lshiftWordByOctet_U0_tx_shift2ipv4Fifo_V_1_din,
        tx_shift2ipv4Fifo_V_1_full_n => tx_shift2ipv4Fifo_V_1_full_n,
        tx_shift2ipv4Fifo_V_1_write => lshiftWordByOctet_U0_tx_shift2ipv4Fifo_V_1_write,
        tx_shift2ipv4Fifo_V_2_din => lshiftWordByOctet_U0_tx_shift2ipv4Fifo_V_2_din,
        tx_shift2ipv4Fifo_V_2_full_n => tx_shift2ipv4Fifo_V_2_full_n,
        tx_shift2ipv4Fifo_V_2_write => lshiftWordByOctet_U0_tx_shift2ipv4Fifo_V_2_write,
        tx_shift2ipv4Fifo_V_s_din => lshiftWordByOctet_U0_tx_shift2ipv4Fifo_V_s_din,
        tx_shift2ipv4Fifo_V_s_full_n => tx_shift2ipv4Fifo_V_s_full_n,
        tx_shift2ipv4Fifo_V_s_write => lshiftWordByOctet_U0_tx_shift2ipv4Fifo_V_s_write,
        s_axis_tx_data_TDATA => s_axis_tx_data_TDATA,
        s_axis_tx_data_TREADY => lshiftWordByOctet_U0_s_axis_tx_data_TREADY,
        s_axis_tx_data_TKEEP => s_axis_tx_data_TKEEP,
        s_axis_tx_data_TLAST => s_axis_tx_data_TLAST);

    generate_ipv4_64_U0 : component generate_ipv4_64_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => generate_ipv4_64_U0_ap_start,
        ap_done => generate_ipv4_64_U0_ap_done,
        ap_continue => generate_ipv4_64_U0_ap_continue,
        ap_idle => generate_ipv4_64_U0_ap_idle,
        ap_ready => generate_ipv4_64_U0_ap_ready,
        tx_shift2ipv4Fifo_V_1_dout => tx_shift2ipv4Fifo_V_1_dout,
        tx_shift2ipv4Fifo_V_1_empty_n => tx_shift2ipv4Fifo_V_1_empty_n,
        tx_shift2ipv4Fifo_V_1_read => generate_ipv4_64_U0_tx_shift2ipv4Fifo_V_1_read,
        tx_shift2ipv4Fifo_V_2_dout => tx_shift2ipv4Fifo_V_2_dout,
        tx_shift2ipv4Fifo_V_2_empty_n => tx_shift2ipv4Fifo_V_2_empty_n,
        tx_shift2ipv4Fifo_V_2_read => generate_ipv4_64_U0_tx_shift2ipv4Fifo_V_2_read,
        tx_shift2ipv4Fifo_V_s_dout => tx_shift2ipv4Fifo_V_s_dout,
        tx_shift2ipv4Fifo_V_s_empty_n => tx_shift2ipv4Fifo_V_s_empty_n,
        tx_shift2ipv4Fifo_V_s_read => generate_ipv4_64_U0_tx_shift2ipv4Fifo_V_s_read,
        txEng_ipMetaDataFifoIn_V_TVALID => s_axis_tx_meta_V_TVALID,
        m_axis_tx_data_TREADY => m_axis_tx_data_TREADY,
        txEng_ipMetaDataFifoIn_V_TDATA => s_axis_tx_meta_V_TDATA,
        txEng_ipMetaDataFifoIn_V_TREADY => generate_ipv4_64_U0_txEng_ipMetaDataFifoIn_V_TREADY,
        m_axis_tx_data_TDATA => generate_ipv4_64_U0_m_axis_tx_data_TDATA,
        m_axis_tx_data_TVALID => generate_ipv4_64_U0_m_axis_tx_data_TVALID,
        m_axis_tx_data_TKEEP => generate_ipv4_64_U0_m_axis_tx_data_TKEEP,
        m_axis_tx_data_TLAST => generate_ipv4_64_U0_m_axis_tx_data_TLAST,
        local_ipv4_address_V => local_ipv4_address_V,
        protocol_V => protocol_V);

    rx_process2dropFifo_1_1_U : component fifo_w64_d8_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => process_ipv4_64_U0_rx_process2dropFifo_1_1_din,
        if_full_n => rx_process2dropFifo_1_1_full_n,
        if_write => process_ipv4_64_U0_rx_process2dropFifo_1_1_write,
        if_dout => rx_process2dropFifo_1_1_dout,
        if_empty_n => rx_process2dropFifo_1_1_empty_n,
        if_read => drop_optional_ip_hea_U0_rx_process2dropFifo_1_1_read);

    rx_process2dropFifo_2_0_U : component fifo_w8_d8_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => process_ipv4_64_U0_rx_process2dropFifo_2_0_din,
        if_full_n => rx_process2dropFifo_2_0_full_n,
        if_write => process_ipv4_64_U0_rx_process2dropFifo_2_0_write,
        if_dout => rx_process2dropFifo_2_0_dout,
        if_empty_n => rx_process2dropFifo_2_0_empty_n,
        if_read => drop_optional_ip_hea_U0_rx_process2dropFifo_2_0_read);

    rx_process2dropFifo_s_2_U : component fifo_w1_d8_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => process_ipv4_64_U0_rx_process2dropFifo_s_2_din,
        if_full_n => rx_process2dropFifo_s_2_full_n,
        if_write => process_ipv4_64_U0_rx_process2dropFifo_s_2_write,
        if_dout => rx_process2dropFifo_s_2_dout,
        if_empty_n => rx_process2dropFifo_s_2_empty_n,
        if_read => drop_optional_ip_hea_U0_rx_process2dropFifo_s_2_read);

    rx_process2dropLengt_1_U : component fifo_w4_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => process_ipv4_64_U0_rx_process2dropLengt_1_din,
        if_full_n => rx_process2dropLengt_1_full_n,
        if_write => process_ipv4_64_U0_rx_process2dropLengt_1_write,
        if_dout => rx_process2dropLengt_1_dout,
        if_empty_n => rx_process2dropLengt_1_empty_n,
        if_read => drop_optional_ip_hea_U0_rx_process2dropLengt_1_read);

    tx_shift2ipv4Fifo_V_1_U : component fifo_w64_d8_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => lshiftWordByOctet_U0_tx_shift2ipv4Fifo_V_1_din,
        if_full_n => tx_shift2ipv4Fifo_V_1_full_n,
        if_write => lshiftWordByOctet_U0_tx_shift2ipv4Fifo_V_1_write,
        if_dout => tx_shift2ipv4Fifo_V_1_dout,
        if_empty_n => tx_shift2ipv4Fifo_V_1_empty_n,
        if_read => generate_ipv4_64_U0_tx_shift2ipv4Fifo_V_1_read);

    tx_shift2ipv4Fifo_V_2_U : component fifo_w8_d8_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => lshiftWordByOctet_U0_tx_shift2ipv4Fifo_V_2_din,
        if_full_n => tx_shift2ipv4Fifo_V_2_full_n,
        if_write => lshiftWordByOctet_U0_tx_shift2ipv4Fifo_V_2_write,
        if_dout => tx_shift2ipv4Fifo_V_2_dout,
        if_empty_n => tx_shift2ipv4Fifo_V_2_empty_n,
        if_read => generate_ipv4_64_U0_tx_shift2ipv4Fifo_V_2_read);

    tx_shift2ipv4Fifo_V_s_U : component fifo_w1_d8_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => lshiftWordByOctet_U0_tx_shift2ipv4Fifo_V_s_din,
        if_full_n => tx_shift2ipv4Fifo_V_s_full_n,
        if_write => lshiftWordByOctet_U0_tx_shift2ipv4Fifo_V_s_write,
        if_dout => tx_shift2ipv4Fifo_V_s_dout,
        if_empty_n => tx_shift2ipv4Fifo_V_s_empty_n,
        if_read => generate_ipv4_64_U0_tx_shift2ipv4Fifo_V_s_read);





    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_continue <= ap_const_logic_0;
    drop_optional_ip_hea_U0_ap_continue <= ap_const_logic_1;
    drop_optional_ip_hea_U0_ap_start <= ap_const_logic_1;
    generate_ipv4_64_U0_ap_continue <= ap_const_logic_1;
    generate_ipv4_64_U0_ap_start <= ap_const_logic_1;
    lshiftWordByOctet_U0_ap_continue <= ap_const_logic_1;
    lshiftWordByOctet_U0_ap_start <= ap_const_logic_1;
    m_axis_rx_data_TDATA <= drop_optional_ip_hea_U0_m_axis_rx_data_TDATA;
    m_axis_rx_data_TKEEP <= drop_optional_ip_hea_U0_m_axis_rx_data_TKEEP;
    m_axis_rx_data_TLAST <= drop_optional_ip_hea_U0_m_axis_rx_data_TLAST;
    m_axis_rx_data_TVALID <= drop_optional_ip_hea_U0_m_axis_rx_data_TVALID;
    m_axis_rx_meta_V_TDATA <= process_ipv4_64_U0_MetaOut_V_TDATA;
    m_axis_rx_meta_V_TVALID <= process_ipv4_64_U0_MetaOut_V_TVALID;
    m_axis_tx_data_TDATA <= generate_ipv4_64_U0_m_axis_tx_data_TDATA;
    m_axis_tx_data_TKEEP <= generate_ipv4_64_U0_m_axis_tx_data_TKEEP;
    m_axis_tx_data_TLAST <= generate_ipv4_64_U0_m_axis_tx_data_TLAST;
    m_axis_tx_data_TVALID <= generate_ipv4_64_U0_m_axis_tx_data_TVALID;
    process_ipv4_64_U0_ap_continue <= ap_const_logic_1;
    process_ipv4_64_U0_ap_start <= ap_const_logic_1;
    s_axis_rx_data_TREADY <= process_ipv4_64_U0_s_axis_rx_data_TREADY;
    s_axis_tx_data_TREADY <= lshiftWordByOctet_U0_s_axis_tx_data_TREADY;
    s_axis_tx_meta_V_TREADY <= generate_ipv4_64_U0_txEng_ipMetaDataFifoIn_V_TREADY;
end behav;
