-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity rxPackageDropper_64_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    rxEng_dataBuffer3_V_dout : IN STD_LOGIC_VECTOR (72 downto 0);
    rxEng_dataBuffer3_V_empty_n : IN STD_LOGIC;
    rxEng_dataBuffer3_V_read : OUT STD_LOGIC;
    rxEng_fsmDropFifo_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    rxEng_fsmDropFifo_V_empty_n : IN STD_LOGIC;
    rxEng_fsmDropFifo_V_read : OUT STD_LOGIC;
    rxEng_metaHandlerDro_1_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    rxEng_metaHandlerDro_1_empty_n : IN STD_LOGIC;
    rxEng_metaHandlerDro_1_read : OUT STD_LOGIC;
    m_axis_rxwrite_data_TREADY : IN STD_LOGIC;
    m_axis_rxwrite_data_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axis_rxwrite_data_TVALID : OUT STD_LOGIC;
    m_axis_rxwrite_data_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axis_rxwrite_data_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of rxPackageDropper_64_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal grp_nbreadreq_fu_66_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op7_read_state1 : BOOLEAN;
    signal ap_predicate_op12_read_state1 : BOOLEAN;
    signal tmp_114_nbreadreq_fu_80_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op19_read_state1 : BOOLEAN;
    signal tmp_nbreadreq_fu_94_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op24_read_state1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal rxBufferDataOut_V_data_V_1_ack_in : STD_LOGIC;
    signal tpf_state_load_reg_181 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_115_reg_193 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op30_write_state2 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal rxBufferDataOut_V_data_V_1_ack_out : STD_LOGIC;
    signal rxBufferDataOut_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal rxBufferDataOut_V_keep_V_1_ack_out : STD_LOGIC;
    signal rxBufferDataOut_V_keep_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal rxBufferDataOut_V_last_V_1_ack_out : STD_LOGIC;
    signal rxBufferDataOut_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal tpf_state_load_reg_181_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_115_reg_193_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op40_write_state3 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal rxBufferDataOut_V_data_V_1_data_out : STD_LOGIC_VECTOR (63 downto 0);
    signal rxBufferDataOut_V_data_V_1_vld_in : STD_LOGIC;
    signal rxBufferDataOut_V_data_V_1_vld_out : STD_LOGIC;
    signal rxBufferDataOut_V_data_V_1_payload_A : STD_LOGIC_VECTOR (63 downto 0);
    signal rxBufferDataOut_V_data_V_1_payload_B : STD_LOGIC_VECTOR (63 downto 0);
    signal rxBufferDataOut_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal rxBufferDataOut_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal rxBufferDataOut_V_data_V_1_sel : STD_LOGIC;
    signal rxBufferDataOut_V_data_V_1_load_A : STD_LOGIC;
    signal rxBufferDataOut_V_data_V_1_load_B : STD_LOGIC;
    signal rxBufferDataOut_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal rxBufferDataOut_V_keep_V_1_data_out : STD_LOGIC_VECTOR (7 downto 0);
    signal rxBufferDataOut_V_keep_V_1_vld_in : STD_LOGIC;
    signal rxBufferDataOut_V_keep_V_1_vld_out : STD_LOGIC;
    signal rxBufferDataOut_V_keep_V_1_ack_in : STD_LOGIC;
    signal rxBufferDataOut_V_keep_V_1_payload_A : STD_LOGIC_VECTOR (7 downto 0);
    signal rxBufferDataOut_V_keep_V_1_payload_B : STD_LOGIC_VECTOR (7 downto 0);
    signal rxBufferDataOut_V_keep_V_1_sel_rd : STD_LOGIC := '0';
    signal rxBufferDataOut_V_keep_V_1_sel_wr : STD_LOGIC := '0';
    signal rxBufferDataOut_V_keep_V_1_sel : STD_LOGIC;
    signal rxBufferDataOut_V_keep_V_1_load_A : STD_LOGIC;
    signal rxBufferDataOut_V_keep_V_1_load_B : STD_LOGIC;
    signal rxBufferDataOut_V_keep_V_1_state_cmp_full : STD_LOGIC;
    signal rxBufferDataOut_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal rxBufferDataOut_V_last_V_1_vld_in : STD_LOGIC;
    signal rxBufferDataOut_V_last_V_1_vld_out : STD_LOGIC;
    signal rxBufferDataOut_V_last_V_1_ack_in : STD_LOGIC;
    signal rxBufferDataOut_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal rxBufferDataOut_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal rxBufferDataOut_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal rxBufferDataOut_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal rxBufferDataOut_V_last_V_1_sel : STD_LOGIC;
    signal rxBufferDataOut_V_last_V_1_load_A : STD_LOGIC;
    signal rxBufferDataOut_V_last_V_1_load_B : STD_LOGIC;
    signal rxBufferDataOut_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal tpf_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal m_axis_rxwrite_data_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal rxEng_metaHandlerDro_1_blk_n : STD_LOGIC;
    signal rxEng_fsmDropFifo_V_blk_n : STD_LOGIC;
    signal rxEng_dataBuffer3_V_blk_n : STD_LOGIC;
    signal grp_fu_121_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_V_fu_139_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_data_V_reg_197 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_keep_V_reg_202 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_last_V_reg_207 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal select_ln1644_fu_153_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln1630_fu_167_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    rxBufferDataOut_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                rxBufferDataOut_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((rxBufferDataOut_V_data_V_1_vld_out = ap_const_logic_1) and (rxBufferDataOut_V_data_V_1_ack_out = ap_const_logic_1))) then 
                                        rxBufferDataOut_V_data_V_1_sel_rd <= not(rxBufferDataOut_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    rxBufferDataOut_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                rxBufferDataOut_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((rxBufferDataOut_V_data_V_1_ack_in = ap_const_logic_1) and (rxBufferDataOut_V_data_V_1_vld_in = ap_const_logic_1))) then 
                                        rxBufferDataOut_V_data_V_1_sel_wr <= not(rxBufferDataOut_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    rxBufferDataOut_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                rxBufferDataOut_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((rxBufferDataOut_V_data_V_1_state = ap_const_lv2_3) and (rxBufferDataOut_V_data_V_1_vld_in = ap_const_logic_0) and (rxBufferDataOut_V_data_V_1_ack_out = ap_const_logic_1)) or ((rxBufferDataOut_V_data_V_1_state = ap_const_lv2_2) and (rxBufferDataOut_V_data_V_1_vld_in = ap_const_logic_0)))) then 
                    rxBufferDataOut_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((rxBufferDataOut_V_data_V_1_state = ap_const_lv2_1) and (m_axis_rxwrite_data_TREADY = ap_const_logic_0)) or ((rxBufferDataOut_V_data_V_1_state = ap_const_lv2_3) and (m_axis_rxwrite_data_TREADY = ap_const_logic_0) and (rxBufferDataOut_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    rxBufferDataOut_V_data_V_1_state <= ap_const_lv2_1;
                elsif ((((rxBufferDataOut_V_data_V_1_state = ap_const_lv2_1) and (rxBufferDataOut_V_data_V_1_ack_out = ap_const_logic_1)) or (not(((rxBufferDataOut_V_data_V_1_vld_in = ap_const_logic_0) and (rxBufferDataOut_V_data_V_1_ack_out = ap_const_logic_1))) and not(((m_axis_rxwrite_data_TREADY = ap_const_logic_0) and (rxBufferDataOut_V_data_V_1_vld_in = ap_const_logic_1))) and (rxBufferDataOut_V_data_V_1_state = ap_const_lv2_3)) or ((rxBufferDataOut_V_data_V_1_state = ap_const_lv2_2) and (rxBufferDataOut_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    rxBufferDataOut_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    rxBufferDataOut_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    rxBufferDataOut_V_keep_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                rxBufferDataOut_V_keep_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((rxBufferDataOut_V_keep_V_1_vld_out = ap_const_logic_1) and (rxBufferDataOut_V_keep_V_1_ack_out = ap_const_logic_1))) then 
                                        rxBufferDataOut_V_keep_V_1_sel_rd <= not(rxBufferDataOut_V_keep_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    rxBufferDataOut_V_keep_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                rxBufferDataOut_V_keep_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((rxBufferDataOut_V_keep_V_1_ack_in = ap_const_logic_1) and (rxBufferDataOut_V_keep_V_1_vld_in = ap_const_logic_1))) then 
                                        rxBufferDataOut_V_keep_V_1_sel_wr <= not(rxBufferDataOut_V_keep_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    rxBufferDataOut_V_keep_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                rxBufferDataOut_V_keep_V_1_state <= ap_const_lv2_0;
            else
                if ((((rxBufferDataOut_V_keep_V_1_state = ap_const_lv2_3) and (rxBufferDataOut_V_keep_V_1_vld_in = ap_const_logic_0) and (rxBufferDataOut_V_keep_V_1_ack_out = ap_const_logic_1)) or ((rxBufferDataOut_V_keep_V_1_state = ap_const_lv2_2) and (rxBufferDataOut_V_keep_V_1_vld_in = ap_const_logic_0)))) then 
                    rxBufferDataOut_V_keep_V_1_state <= ap_const_lv2_2;
                elsif ((((rxBufferDataOut_V_keep_V_1_state = ap_const_lv2_1) and (m_axis_rxwrite_data_TREADY = ap_const_logic_0)) or ((rxBufferDataOut_V_keep_V_1_state = ap_const_lv2_3) and (m_axis_rxwrite_data_TREADY = ap_const_logic_0) and (rxBufferDataOut_V_keep_V_1_vld_in = ap_const_logic_1)))) then 
                    rxBufferDataOut_V_keep_V_1_state <= ap_const_lv2_1;
                elsif ((((rxBufferDataOut_V_keep_V_1_state = ap_const_lv2_1) and (rxBufferDataOut_V_keep_V_1_ack_out = ap_const_logic_1)) or (not(((rxBufferDataOut_V_keep_V_1_vld_in = ap_const_logic_0) and (rxBufferDataOut_V_keep_V_1_ack_out = ap_const_logic_1))) and not(((m_axis_rxwrite_data_TREADY = ap_const_logic_0) and (rxBufferDataOut_V_keep_V_1_vld_in = ap_const_logic_1))) and (rxBufferDataOut_V_keep_V_1_state = ap_const_lv2_3)) or ((rxBufferDataOut_V_keep_V_1_state = ap_const_lv2_2) and (rxBufferDataOut_V_keep_V_1_vld_in = ap_const_logic_1)))) then 
                    rxBufferDataOut_V_keep_V_1_state <= ap_const_lv2_3;
                else 
                    rxBufferDataOut_V_keep_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    rxBufferDataOut_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                rxBufferDataOut_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((rxBufferDataOut_V_last_V_1_vld_out = ap_const_logic_1) and (rxBufferDataOut_V_last_V_1_ack_out = ap_const_logic_1))) then 
                                        rxBufferDataOut_V_last_V_1_sel_rd <= not(rxBufferDataOut_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    rxBufferDataOut_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                rxBufferDataOut_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((rxBufferDataOut_V_last_V_1_ack_in = ap_const_logic_1) and (rxBufferDataOut_V_last_V_1_vld_in = ap_const_logic_1))) then 
                                        rxBufferDataOut_V_last_V_1_sel_wr <= not(rxBufferDataOut_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    rxBufferDataOut_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                rxBufferDataOut_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((rxBufferDataOut_V_last_V_1_state = ap_const_lv2_3) and (rxBufferDataOut_V_last_V_1_vld_in = ap_const_logic_0) and (rxBufferDataOut_V_last_V_1_ack_out = ap_const_logic_1)) or ((rxBufferDataOut_V_last_V_1_state = ap_const_lv2_2) and (rxBufferDataOut_V_last_V_1_vld_in = ap_const_logic_0)))) then 
                    rxBufferDataOut_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((rxBufferDataOut_V_last_V_1_state = ap_const_lv2_1) and (m_axis_rxwrite_data_TREADY = ap_const_logic_0)) or ((rxBufferDataOut_V_last_V_1_state = ap_const_lv2_3) and (m_axis_rxwrite_data_TREADY = ap_const_logic_0) and (rxBufferDataOut_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    rxBufferDataOut_V_last_V_1_state <= ap_const_lv2_1;
                elsif ((((rxBufferDataOut_V_last_V_1_state = ap_const_lv2_1) and (rxBufferDataOut_V_last_V_1_ack_out = ap_const_logic_1)) or (not(((rxBufferDataOut_V_last_V_1_vld_in = ap_const_logic_0) and (rxBufferDataOut_V_last_V_1_ack_out = ap_const_logic_1))) and not(((m_axis_rxwrite_data_TREADY = ap_const_logic_0) and (rxBufferDataOut_V_last_V_1_vld_in = ap_const_logic_1))) and (rxBufferDataOut_V_last_V_1_state = ap_const_lv2_3)) or ((rxBufferDataOut_V_last_V_1_state = ap_const_lv2_2) and (rxBufferDataOut_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    rxBufferDataOut_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    rxBufferDataOut_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    tpf_state_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_nbreadreq_fu_94_p3 = ap_const_lv1_1) and (tpf_state = ap_const_lv2_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                tpf_state <= select_ln1630_fu_167_p3;
            elsif (((tmp_114_nbreadreq_fu_80_p3 = ap_const_lv1_1) and (tpf_state = ap_const_lv2_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                tpf_state <= select_ln1644_fu_153_p3;
            elsif ((((grp_fu_121_p3 = ap_const_lv1_1) and (grp_nbreadreq_fu_66_p3 = ap_const_lv1_1) and (tpf_state = ap_const_lv2_2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((grp_fu_121_p3 = ap_const_lv1_1) and (grp_nbreadreq_fu_66_p3 = ap_const_lv1_1) and (tpf_state = ap_const_lv2_3) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                tpf_state <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((rxBufferDataOut_V_data_V_1_load_A = ap_const_logic_1)) then
                rxBufferDataOut_V_data_V_1_payload_A <= tmp_data_V_reg_197;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((rxBufferDataOut_V_data_V_1_load_B = ap_const_logic_1)) then
                rxBufferDataOut_V_data_V_1_payload_B <= tmp_data_V_reg_197;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((rxBufferDataOut_V_keep_V_1_load_A = ap_const_logic_1)) then
                rxBufferDataOut_V_keep_V_1_payload_A <= tmp_keep_V_reg_202;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((rxBufferDataOut_V_keep_V_1_load_B = ap_const_logic_1)) then
                rxBufferDataOut_V_keep_V_1_payload_B <= tmp_keep_V_reg_202;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((rxBufferDataOut_V_last_V_1_load_A = ap_const_logic_1)) then
                rxBufferDataOut_V_last_V_1_payload_A <= tmp_last_V_reg_207;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((rxBufferDataOut_V_last_V_1_load_B = ap_const_logic_1)) then
                rxBufferDataOut_V_last_V_1_payload_B <= tmp_last_V_reg_207;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tpf_state = ap_const_lv2_2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_115_reg_193 <= grp_nbreadreq_fu_66_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_115_reg_193_pp0_iter1_reg <= tmp_115_reg_193;
                tpf_state_load_reg_181 <= tpf_state;
                tpf_state_load_reg_181_pp0_iter1_reg <= tpf_state_load_reg_181;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_66_p3 = ap_const_lv1_1) and (tpf_state = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_data_V_reg_197 <= tmp_data_V_fu_139_p1;
                tmp_keep_V_reg_202 <= rxEng_dataBuffer3_V_dout(71 downto 64);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_66_p3 = ap_const_lv1_1) and (tpf_state = ap_const_lv2_2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_last_V_reg_207 <= rxEng_dataBuffer3_V_dout(72 downto 72);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter2, rxEng_dataBuffer3_V_empty_n, ap_predicate_op7_read_state1, ap_predicate_op12_read_state1, rxEng_fsmDropFifo_V_empty_n, ap_predicate_op19_read_state1, rxEng_metaHandlerDro_1_empty_n, ap_predicate_op24_read_state1, m_axis_rxwrite_data_TREADY, rxBufferDataOut_V_data_V_1_state, rxBufferDataOut_V_keep_V_1_state, rxBufferDataOut_V_last_V_1_state)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((rxEng_metaHandlerDro_1_empty_n = ap_const_logic_0) and (ap_predicate_op24_read_state1 = ap_const_boolean_1)) or ((rxEng_fsmDropFifo_V_empty_n = ap_const_logic_0) and (ap_predicate_op19_read_state1 = ap_const_boolean_1)) or ((rxEng_dataBuffer3_V_empty_n = ap_const_logic_0) and (ap_predicate_op12_read_state1 = ap_const_boolean_1)) or ((rxEng_dataBuffer3_V_empty_n = ap_const_logic_0) and (ap_predicate_op7_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((rxBufferDataOut_V_last_V_1_state = ap_const_lv2_1) or (rxBufferDataOut_V_keep_V_1_state = ap_const_lv2_1) or (rxBufferDataOut_V_data_V_1_state = ap_const_lv2_1) or ((rxBufferDataOut_V_last_V_1_state = ap_const_lv2_3) and (m_axis_rxwrite_data_TREADY = ap_const_logic_0)) or ((rxBufferDataOut_V_keep_V_1_state = ap_const_lv2_3) and (m_axis_rxwrite_data_TREADY = ap_const_logic_0)) or ((rxBufferDataOut_V_data_V_1_state = ap_const_lv2_3) and (m_axis_rxwrite_data_TREADY = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, rxEng_dataBuffer3_V_empty_n, ap_predicate_op7_read_state1, ap_predicate_op12_read_state1, rxEng_fsmDropFifo_V_empty_n, ap_predicate_op19_read_state1, rxEng_metaHandlerDro_1_empty_n, ap_predicate_op24_read_state1, m_axis_rxwrite_data_TREADY, ap_block_state2_io, rxBufferDataOut_V_data_V_1_state, rxBufferDataOut_V_keep_V_1_state, rxBufferDataOut_V_last_V_1_state, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((rxEng_metaHandlerDro_1_empty_n = ap_const_logic_0) and (ap_predicate_op24_read_state1 = ap_const_boolean_1)) or ((rxEng_fsmDropFifo_V_empty_n = ap_const_logic_0) and (ap_predicate_op19_read_state1 = ap_const_boolean_1)) or ((rxEng_dataBuffer3_V_empty_n = ap_const_logic_0) and (ap_predicate_op12_read_state1 = ap_const_boolean_1)) or ((rxEng_dataBuffer3_V_empty_n = ap_const_logic_0) and (ap_predicate_op7_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((rxBufferDataOut_V_last_V_1_state = ap_const_lv2_1) or (rxBufferDataOut_V_keep_V_1_state = ap_const_lv2_1) or (rxBufferDataOut_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((rxBufferDataOut_V_last_V_1_state = ap_const_lv2_3) and (m_axis_rxwrite_data_TREADY = ap_const_logic_0)) or ((rxBufferDataOut_V_keep_V_1_state = ap_const_lv2_3) and (m_axis_rxwrite_data_TREADY = ap_const_logic_0)) or ((rxBufferDataOut_V_data_V_1_state = ap_const_lv2_3) and (m_axis_rxwrite_data_TREADY = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, rxEng_dataBuffer3_V_empty_n, ap_predicate_op7_read_state1, ap_predicate_op12_read_state1, rxEng_fsmDropFifo_V_empty_n, ap_predicate_op19_read_state1, rxEng_metaHandlerDro_1_empty_n, ap_predicate_op24_read_state1, m_axis_rxwrite_data_TREADY, ap_block_state2_io, rxBufferDataOut_V_data_V_1_state, rxBufferDataOut_V_keep_V_1_state, rxBufferDataOut_V_last_V_1_state, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((rxEng_metaHandlerDro_1_empty_n = ap_const_logic_0) and (ap_predicate_op24_read_state1 = ap_const_boolean_1)) or ((rxEng_fsmDropFifo_V_empty_n = ap_const_logic_0) and (ap_predicate_op19_read_state1 = ap_const_boolean_1)) or ((rxEng_dataBuffer3_V_empty_n = ap_const_logic_0) and (ap_predicate_op12_read_state1 = ap_const_boolean_1)) or ((rxEng_dataBuffer3_V_empty_n = ap_const_logic_0) and (ap_predicate_op7_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((rxBufferDataOut_V_last_V_1_state = ap_const_lv2_1) or (rxBufferDataOut_V_keep_V_1_state = ap_const_lv2_1) or (rxBufferDataOut_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((rxBufferDataOut_V_last_V_1_state = ap_const_lv2_3) and (m_axis_rxwrite_data_TREADY = ap_const_logic_0)) or ((rxBufferDataOut_V_keep_V_1_state = ap_const_lv2_3) and (m_axis_rxwrite_data_TREADY = ap_const_logic_0)) or ((rxBufferDataOut_V_data_V_1_state = ap_const_lv2_3) and (m_axis_rxwrite_data_TREADY = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg, rxEng_dataBuffer3_V_empty_n, ap_predicate_op7_read_state1, ap_predicate_op12_read_state1, rxEng_fsmDropFifo_V_empty_n, ap_predicate_op19_read_state1, rxEng_metaHandlerDro_1_empty_n, ap_predicate_op24_read_state1)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((rxEng_metaHandlerDro_1_empty_n = ap_const_logic_0) and (ap_predicate_op24_read_state1 = ap_const_boolean_1)) or ((rxEng_fsmDropFifo_V_empty_n = ap_const_logic_0) and (ap_predicate_op19_read_state1 = ap_const_boolean_1)) or ((rxEng_dataBuffer3_V_empty_n = ap_const_logic_0) and (ap_predicate_op12_read_state1 = ap_const_boolean_1)) or ((rxEng_dataBuffer3_V_empty_n = ap_const_logic_0) and (ap_predicate_op7_read_state1 = ap_const_boolean_1)));
    end process;


    ap_block_state2_io_assign_proc : process(rxBufferDataOut_V_data_V_1_ack_in, ap_predicate_op30_write_state2)
    begin
                ap_block_state2_io <= ((rxBufferDataOut_V_data_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op30_write_state2 = ap_const_boolean_1));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_io_assign_proc : process(rxBufferDataOut_V_data_V_1_ack_in, ap_predicate_op40_write_state3)
    begin
                ap_block_state3_io <= ((rxBufferDataOut_V_data_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op40_write_state3 = ap_const_boolean_1));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(m_axis_rxwrite_data_TREADY, rxBufferDataOut_V_data_V_1_state, rxBufferDataOut_V_keep_V_1_state, rxBufferDataOut_V_last_V_1_state)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((rxBufferDataOut_V_last_V_1_state = ap_const_lv2_1) or (rxBufferDataOut_V_keep_V_1_state = ap_const_lv2_1) or (rxBufferDataOut_V_data_V_1_state = ap_const_lv2_1) or ((rxBufferDataOut_V_last_V_1_state = ap_const_lv2_3) and (m_axis_rxwrite_data_TREADY = ap_const_logic_0)) or ((rxBufferDataOut_V_keep_V_1_state = ap_const_lv2_3) and (m_axis_rxwrite_data_TREADY = ap_const_logic_0)) or ((rxBufferDataOut_V_data_V_1_state = ap_const_lv2_3) and (m_axis_rxwrite_data_TREADY = ap_const_logic_0)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op12_read_state1_assign_proc : process(grp_nbreadreq_fu_66_p3, tpf_state)
    begin
                ap_predicate_op12_read_state1 <= ((grp_nbreadreq_fu_66_p3 = ap_const_lv1_1) and (tpf_state = ap_const_lv2_2));
    end process;


    ap_predicate_op19_read_state1_assign_proc : process(tmp_114_nbreadreq_fu_80_p3, tpf_state)
    begin
                ap_predicate_op19_read_state1 <= ((tmp_114_nbreadreq_fu_80_p3 = ap_const_lv1_1) and (tpf_state = ap_const_lv2_1));
    end process;


    ap_predicate_op24_read_state1_assign_proc : process(tmp_nbreadreq_fu_94_p3, tpf_state)
    begin
                ap_predicate_op24_read_state1 <= ((tmp_nbreadreq_fu_94_p3 = ap_const_lv1_1) and (tpf_state = ap_const_lv2_0));
    end process;


    ap_predicate_op30_write_state2_assign_proc : process(tpf_state_load_reg_181, tmp_115_reg_193)
    begin
                ap_predicate_op30_write_state2 <= ((tpf_state_load_reg_181 = ap_const_lv2_2) and (tmp_115_reg_193 = ap_const_lv1_1));
    end process;


    ap_predicate_op40_write_state3_assign_proc : process(tpf_state_load_reg_181_pp0_iter1_reg, tmp_115_reg_193_pp0_iter1_reg)
    begin
                ap_predicate_op40_write_state3 <= ((tpf_state_load_reg_181_pp0_iter1_reg = ap_const_lv2_2) and (tmp_115_reg_193_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op7_read_state1_assign_proc : process(grp_nbreadreq_fu_66_p3, tpf_state)
    begin
                ap_predicate_op7_read_state1 <= ((grp_nbreadreq_fu_66_p3 = ap_const_lv1_1) and (tpf_state = ap_const_lv2_3));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_121_p3 <= rxEng_dataBuffer3_V_dout(72 downto 72);
    grp_nbreadreq_fu_66_p3 <= (0=>(rxEng_dataBuffer3_V_empty_n), others=>'-');
    m_axis_rxwrite_data_TDATA <= rxBufferDataOut_V_data_V_1_data_out;

    m_axis_rxwrite_data_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_predicate_op30_write_state2, rxBufferDataOut_V_data_V_1_state, ap_predicate_op40_write_state3, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op30_write_state2 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op40_write_state3 = ap_const_boolean_1)))) then 
            m_axis_rxwrite_data_TDATA_blk_n <= rxBufferDataOut_V_data_V_1_state(1);
        else 
            m_axis_rxwrite_data_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    m_axis_rxwrite_data_TKEEP <= rxBufferDataOut_V_keep_V_1_data_out;
    m_axis_rxwrite_data_TLAST <= rxBufferDataOut_V_last_V_1_data_out;
    m_axis_rxwrite_data_TVALID <= rxBufferDataOut_V_last_V_1_state(0);
    rxBufferDataOut_V_data_V_1_ack_in <= rxBufferDataOut_V_data_V_1_state(1);
    rxBufferDataOut_V_data_V_1_ack_out <= m_axis_rxwrite_data_TREADY;

    rxBufferDataOut_V_data_V_1_data_out_assign_proc : process(rxBufferDataOut_V_data_V_1_payload_A, rxBufferDataOut_V_data_V_1_payload_B, rxBufferDataOut_V_data_V_1_sel)
    begin
        if ((rxBufferDataOut_V_data_V_1_sel = ap_const_logic_1)) then 
            rxBufferDataOut_V_data_V_1_data_out <= rxBufferDataOut_V_data_V_1_payload_B;
        else 
            rxBufferDataOut_V_data_V_1_data_out <= rxBufferDataOut_V_data_V_1_payload_A;
        end if; 
    end process;

    rxBufferDataOut_V_data_V_1_load_A <= (rxBufferDataOut_V_data_V_1_state_cmp_full and not(rxBufferDataOut_V_data_V_1_sel_wr));
    rxBufferDataOut_V_data_V_1_load_B <= (rxBufferDataOut_V_data_V_1_state_cmp_full and rxBufferDataOut_V_data_V_1_sel_wr);
    rxBufferDataOut_V_data_V_1_sel <= rxBufferDataOut_V_data_V_1_sel_rd;
    rxBufferDataOut_V_data_V_1_state_cmp_full <= '0' when (rxBufferDataOut_V_data_V_1_state = ap_const_lv2_1) else '1';

    rxBufferDataOut_V_data_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op30_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op30_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            rxBufferDataOut_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            rxBufferDataOut_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    rxBufferDataOut_V_data_V_1_vld_out <= rxBufferDataOut_V_data_V_1_state(0);
    rxBufferDataOut_V_keep_V_1_ack_in <= rxBufferDataOut_V_keep_V_1_state(1);
    rxBufferDataOut_V_keep_V_1_ack_out <= m_axis_rxwrite_data_TREADY;

    rxBufferDataOut_V_keep_V_1_data_out_assign_proc : process(rxBufferDataOut_V_keep_V_1_payload_A, rxBufferDataOut_V_keep_V_1_payload_B, rxBufferDataOut_V_keep_V_1_sel)
    begin
        if ((rxBufferDataOut_V_keep_V_1_sel = ap_const_logic_1)) then 
            rxBufferDataOut_V_keep_V_1_data_out <= rxBufferDataOut_V_keep_V_1_payload_B;
        else 
            rxBufferDataOut_V_keep_V_1_data_out <= rxBufferDataOut_V_keep_V_1_payload_A;
        end if; 
    end process;

    rxBufferDataOut_V_keep_V_1_load_A <= (rxBufferDataOut_V_keep_V_1_state_cmp_full and not(rxBufferDataOut_V_keep_V_1_sel_wr));
    rxBufferDataOut_V_keep_V_1_load_B <= (rxBufferDataOut_V_keep_V_1_state_cmp_full and rxBufferDataOut_V_keep_V_1_sel_wr);
    rxBufferDataOut_V_keep_V_1_sel <= rxBufferDataOut_V_keep_V_1_sel_rd;
    rxBufferDataOut_V_keep_V_1_state_cmp_full <= '0' when (rxBufferDataOut_V_keep_V_1_state = ap_const_lv2_1) else '1';

    rxBufferDataOut_V_keep_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op30_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op30_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            rxBufferDataOut_V_keep_V_1_vld_in <= ap_const_logic_1;
        else 
            rxBufferDataOut_V_keep_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    rxBufferDataOut_V_keep_V_1_vld_out <= rxBufferDataOut_V_keep_V_1_state(0);
    rxBufferDataOut_V_last_V_1_ack_in <= rxBufferDataOut_V_last_V_1_state(1);
    rxBufferDataOut_V_last_V_1_ack_out <= m_axis_rxwrite_data_TREADY;

    rxBufferDataOut_V_last_V_1_data_out_assign_proc : process(rxBufferDataOut_V_last_V_1_payload_A, rxBufferDataOut_V_last_V_1_payload_B, rxBufferDataOut_V_last_V_1_sel)
    begin
        if ((rxBufferDataOut_V_last_V_1_sel = ap_const_logic_1)) then 
            rxBufferDataOut_V_last_V_1_data_out <= rxBufferDataOut_V_last_V_1_payload_B;
        else 
            rxBufferDataOut_V_last_V_1_data_out <= rxBufferDataOut_V_last_V_1_payload_A;
        end if; 
    end process;

    rxBufferDataOut_V_last_V_1_load_A <= (rxBufferDataOut_V_last_V_1_state_cmp_full and not(rxBufferDataOut_V_last_V_1_sel_wr));
    rxBufferDataOut_V_last_V_1_load_B <= (rxBufferDataOut_V_last_V_1_state_cmp_full and rxBufferDataOut_V_last_V_1_sel_wr);
    rxBufferDataOut_V_last_V_1_sel <= rxBufferDataOut_V_last_V_1_sel_rd;
    rxBufferDataOut_V_last_V_1_state_cmp_full <= '0' when (rxBufferDataOut_V_last_V_1_state = ap_const_lv2_1) else '1';

    rxBufferDataOut_V_last_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op30_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op30_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            rxBufferDataOut_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            rxBufferDataOut_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    rxBufferDataOut_V_last_V_1_vld_out <= rxBufferDataOut_V_last_V_1_state(0);

    rxEng_dataBuffer3_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, rxEng_dataBuffer3_V_empty_n, ap_predicate_op7_read_state1, ap_predicate_op12_read_state1, ap_block_pp0_stage0)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op12_read_state1 = ap_const_boolean_1)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op7_read_state1 = ap_const_boolean_1)))) then 
            rxEng_dataBuffer3_V_blk_n <= rxEng_dataBuffer3_V_empty_n;
        else 
            rxEng_dataBuffer3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rxEng_dataBuffer3_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op7_read_state1, ap_predicate_op12_read_state1, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op12_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op7_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            rxEng_dataBuffer3_V_read <= ap_const_logic_1;
        else 
            rxEng_dataBuffer3_V_read <= ap_const_logic_0;
        end if; 
    end process;


    rxEng_fsmDropFifo_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, rxEng_fsmDropFifo_V_empty_n, ap_predicate_op19_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op19_read_state1 = ap_const_boolean_1))) then 
            rxEng_fsmDropFifo_V_blk_n <= rxEng_fsmDropFifo_V_empty_n;
        else 
            rxEng_fsmDropFifo_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rxEng_fsmDropFifo_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op19_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op19_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            rxEng_fsmDropFifo_V_read <= ap_const_logic_1;
        else 
            rxEng_fsmDropFifo_V_read <= ap_const_logic_0;
        end if; 
    end process;


    rxEng_metaHandlerDro_1_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, rxEng_metaHandlerDro_1_empty_n, ap_predicate_op24_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op24_read_state1 = ap_const_boolean_1))) then 
            rxEng_metaHandlerDro_1_blk_n <= rxEng_metaHandlerDro_1_empty_n;
        else 
            rxEng_metaHandlerDro_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rxEng_metaHandlerDro_1_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op24_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op24_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            rxEng_metaHandlerDro_1_read <= ap_const_logic_1;
        else 
            rxEng_metaHandlerDro_1_read <= ap_const_logic_0;
        end if; 
    end process;

    select_ln1630_fu_167_p3 <= 
        ap_const_lv2_3 when (rxEng_metaHandlerDro_1_dout(0) = '1') else 
        ap_const_lv2_1;
    select_ln1644_fu_153_p3 <= 
        ap_const_lv2_3 when (rxEng_fsmDropFifo_V_dout(0) = '1') else 
        ap_const_lv2_2;
    tmp_114_nbreadreq_fu_80_p3 <= (0=>(rxEng_fsmDropFifo_V_empty_n), others=>'-');
    tmp_data_V_fu_139_p1 <= rxEng_dataBuffer3_V_dout(64 - 1 downto 0);
    tmp_nbreadreq_fu_94_p3 <= (0=>(rxEng_metaHandlerDro_1_empty_n), others=>'-');
end behav;
