-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity constructPseudoHeade is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    rxEng_ipMetaFifo_V_t_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    rxEng_ipMetaFifo_V_t_empty_n : IN STD_LOGIC;
    rxEng_ipMetaFifo_V_t_read : OUT STD_LOGIC;
    rxEng_ipMetaFifo_V_o_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    rxEng_ipMetaFifo_V_o_empty_n : IN STD_LOGIC;
    rxEng_ipMetaFifo_V_o_read : OUT STD_LOGIC;
    rxEng_ipMetaFifo_V_l_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    rxEng_ipMetaFifo_V_l_empty_n : IN STD_LOGIC;
    rxEng_ipMetaFifo_V_l_read : OUT STD_LOGIC;
    rxEng_pseudoHeaderFi_3_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    rxEng_pseudoHeaderFi_3_full_n : IN STD_LOGIC;
    rxEng_pseudoHeaderFi_3_write : OUT STD_LOGIC;
    rxEng_pseudoHeaderFi_5_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    rxEng_pseudoHeaderFi_5_full_n : IN STD_LOGIC;
    rxEng_pseudoHeaderFi_5_write : OUT STD_LOGIC;
    rxEng_pseudoHeaderFi_6_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    rxEng_pseudoHeaderFi_6_full_n : IN STD_LOGIC;
    rxEng_pseudoHeaderFi_6_write : OUT STD_LOGIC );
end;


architecture behav of constructPseudoHeade is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv23_40 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000001000000";
    constant ap_const_lv23_61 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000001100001";
    constant ap_const_lv22_3F : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000111111";
    constant ap_const_lv7_5F : STD_LOGIC_VECTOR (6 downto 0) := "1011111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv23_60 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000001100000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv22_60 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000001100000";
    constant ap_const_lv22_5F : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000001011111";
    constant ap_const_lv7_21 : STD_LOGIC_VECTOR (6 downto 0) := "0100001";
    constant ap_const_lv96_FFFFFFFFFFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (95 downto 0) := "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal io_acc_block_signal_op8 : STD_LOGIC;
    signal state_3_load_load_fu_158_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_nbreadreq_fu_118_p5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op8_read_state1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal io_acc_block_signal_op93 : STD_LOGIC;
    signal state_3_load_reg_646 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal state_3 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal header_idx : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal header_header_V : STD_LOGIC_VECTOR (95 downto 0) := "000000000000000000000110000000000000000000000000000000000000000000000000000000000000000000000000";
    signal rxEng_ipMetaFifo_V_t_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal rxEng_ipMetaFifo_V_o_blk_n : STD_LOGIC;
    signal rxEng_ipMetaFifo_V_l_blk_n : STD_LOGIC;
    signal rxEng_pseudoHeaderFi_3_blk_n : STD_LOGIC;
    signal rxEng_pseudoHeaderFi_5_blk_n : STD_LOGIC;
    signal rxEng_pseudoHeaderFi_6_blk_n : STD_LOGIC;
    signal sub_ln647_44_fu_362_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln647_44_reg_654 : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln647_fu_372_p2 : STD_LOGIC_VECTOR (95 downto 0);
    signal lshr_ln647_reg_659 : STD_LOGIC_VECTOR (95 downto 0);
    signal sub_ln647_47_fu_528_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln647_47_reg_664 : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln647_37_fu_538_p2 : STD_LOGIC_VECTOR (95 downto 0);
    signal lshr_ln647_37_reg_669 : STD_LOGIC_VECTOR (95 downto 0);
    signal tmp_last_V_fu_550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_reg_674 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln82_fu_556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln82_reg_679 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal select_ln82_fu_570_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_s_fu_230_p5 : STD_LOGIC_VECTOR (95 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal p_Result_128_fu_184_p5 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln647_12_fu_218_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_126_i_i_i_fu_208_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_129_fu_196_p5 : STD_LOGIC_VECTOR (95 downto 0);
    signal agg_result_V_0_1_i_i_fu_222_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal Lo_assign_fu_262_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln76_fu_270_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln76_fu_274_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln78_fu_286_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln76_7_fu_258_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_297_fu_298_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln647_fu_306_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln647_fu_292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln647_fu_320_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln647_43_fu_332_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_298_fu_310_p4 : STD_LOGIC_VECTOR (95 downto 0);
    signal sub_ln647_42_fu_326_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_fu_338_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_34_fu_354_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_33_fu_346_p3 : STD_LOGIC_VECTOR (95 downto 0);
    signal zext_ln647_fu_368_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal add_ln79_fu_378_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_fu_384_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln80_fu_392_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln80_fu_396_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln80_5_fu_410_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln80_5_fu_416_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_299_fu_402_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln80_6_fu_426_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln80_6_fu_432_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln80_fu_442_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln76_fu_254_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_300_fu_468_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln647_9_fu_462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln647_fu_486_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln647_46_fu_498_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_301_fu_476_p4 : STD_LOGIC_VECTOR (95 downto 0);
    signal sub_ln647_45_fu_492_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_35_fu_504_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_37_fu_520_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_36_fu_512_p3 : STD_LOGIC_VECTOR (95 downto 0);
    signal zext_ln647_43_fu_534_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal icmp_ln76_fu_280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln80_fu_450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln76_fu_544_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln82_fu_456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln76_fu_562_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln647_42_fu_590_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal lshr_ln647_36_fu_593_p2 : STD_LOGIC_VECTOR (95 downto 0);
    signal p_Result_130_fu_599_p2 : STD_LOGIC_VECTOR (95 downto 0);
    signal zext_ln647_44_fu_608_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal lshr_ln647_38_fu_611_p2 : STD_LOGIC_VECTOR (95 downto 0);
    signal p_Result_131_fu_617_p2 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln215_fu_622_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_125_fu_626_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln364_fu_604_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_90 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    header_idx_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_90)) then
                if ((state_3_load_load_fu_158_p1 = ap_const_lv1_1)) then 
                    header_idx <= select_ln82_fu_570_p3;
                elsif (((tmp_nbreadreq_fu_118_p5 = ap_const_lv1_1) and (state_3 = ap_const_lv1_0))) then 
                    header_idx <= ap_const_lv16_0;
                end if;
            end if; 
        end if;
    end process;

    state_3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_90)) then
                if (((tmp_last_V_fu_550_p2 = ap_const_lv1_1) and (state_3_load_load_fu_158_p1 = ap_const_lv1_1))) then 
                    state_3 <= ap_const_lv1_0;
                elsif (((tmp_nbreadreq_fu_118_p5 = ap_const_lv1_1) and (state_3 = ap_const_lv1_0))) then 
                    state_3 <= ap_const_lv1_1;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (state_3_load_load_fu_158_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln82_reg_679 <= and_ln82_fu_556_p2;
                lshr_ln647_37_reg_669 <= lshr_ln647_37_fu_538_p2;
                lshr_ln647_reg_659 <= lshr_ln647_fu_372_p2;
                    sub_ln647_44_reg_654(6 downto 1) <= sub_ln647_44_fu_362_p2(6 downto 1);
                    sub_ln647_47_reg_664(6 downto 1) <= sub_ln647_47_fu_528_p2(6 downto 1);
                tmp_last_V_reg_674 <= tmp_last_V_fu_550_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_nbreadreq_fu_118_p5 = ap_const_lv1_1) and (state_3 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                header_header_V <= p_Result_s_fu_230_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                state_3_load_reg_646 <= state_3;
            end if;
        end if;
    end process;
    sub_ln647_44_reg_654(0) <= '0';
    sub_ln647_47_reg_664(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Lo_assign_fu_262_p3 <= (header_idx & ap_const_lv6_0);
    add_ln647_fu_486_p2 <= std_logic_vector(unsigned(tmp_300_fu_468_p3) + unsigned(ap_const_lv7_21));
    add_ln76_fu_274_p2 <= std_logic_vector(unsigned(zext_ln76_fu_270_p1) + unsigned(ap_const_lv23_40));
    add_ln79_fu_378_p2 <= std_logic_vector(unsigned(header_idx) + unsigned(ap_const_lv16_1));
    agg_result_V_0_1_i_i_fu_222_p3 <= (trunc_ln647_12_fu_218_p1 & p_Result_126_i_i_i_fu_208_p4);
    and_ln82_fu_556_p2 <= (xor_ln76_fu_544_p2 and icmp_ln82_fu_456_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, io_acc_block_signal_op8, ap_predicate_op8_read_state1, io_acc_block_signal_op93, state_3_load_reg_646)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((state_3_load_reg_646 = ap_const_lv1_1) and (io_acc_block_signal_op93 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((io_acc_block_signal_op8 = ap_const_logic_0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, io_acc_block_signal_op8, ap_predicate_op8_read_state1, io_acc_block_signal_op93, state_3_load_reg_646)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((state_3_load_reg_646 = ap_const_lv1_1) and (io_acc_block_signal_op93 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((io_acc_block_signal_op8 = ap_const_logic_0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, io_acc_block_signal_op8, ap_predicate_op8_read_state1, io_acc_block_signal_op93, state_3_load_reg_646)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((state_3_load_reg_646 = ap_const_lv1_1) and (io_acc_block_signal_op93 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((io_acc_block_signal_op8 = ap_const_logic_0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg, io_acc_block_signal_op8, ap_predicate_op8_read_state1)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((io_acc_block_signal_op8 = ap_const_logic_0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(io_acc_block_signal_op93, state_3_load_reg_646)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((state_3_load_reg_646 = ap_const_lv1_1) and (io_acc_block_signal_op93 = ap_const_logic_0));
    end process;


    ap_condition_90_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_90 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op8_read_state1_assign_proc : process(tmp_nbreadreq_fu_118_p5, state_3)
    begin
                ap_predicate_op8_read_state1 <= ((tmp_nbreadreq_fu_118_p5 = ap_const_lv1_1) and (state_3 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln647_9_fu_462_p2 <= "1" when (unsigned(Lo_assign_fu_262_p3) > unsigned(ap_const_lv22_5F)) else "0";
    icmp_ln647_fu_292_p2 <= "1" when (unsigned(Lo_assign_fu_262_p3) > unsigned(or_ln78_fu_286_p2)) else "0";
    icmp_ln76_fu_280_p2 <= "1" when (unsigned(add_ln76_fu_274_p2) < unsigned(ap_const_lv23_61)) else "0";
    icmp_ln80_fu_450_p2 <= "1" when (select_ln80_fu_442_p3 = ap_const_lv8_0) else "0";
    icmp_ln82_fu_456_p2 <= "1" when (unsigned(Lo_assign_fu_262_p3) < unsigned(ap_const_lv22_60)) else "0";
    io_acc_block_signal_op8 <= (rxEng_ipMetaFifo_V_t_empty_n and rxEng_ipMetaFifo_V_o_empty_n and rxEng_ipMetaFifo_V_l_empty_n);
    io_acc_block_signal_op93 <= (rxEng_pseudoHeaderFi_6_full_n and rxEng_pseudoHeaderFi_5_full_n and rxEng_pseudoHeaderFi_3_full_n);
    lshr_ln647_36_fu_593_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv96_FFFFFFFFFFFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln647_42_fu_590_p1(31-1 downto 0)))));
    lshr_ln647_37_fu_538_p2 <= std_logic_vector(shift_right(unsigned(select_ln647_36_fu_512_p3),to_integer(unsigned('0' & zext_ln647_43_fu_534_p1(31-1 downto 0)))));
    lshr_ln647_38_fu_611_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv96_FFFFFFFFFFFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln647_44_fu_608_p1(31-1 downto 0)))));
    lshr_ln647_fu_372_p2 <= std_logic_vector(shift_right(unsigned(select_ln647_33_fu_346_p3),to_integer(unsigned('0' & zext_ln647_fu_368_p1(31-1 downto 0)))));
    or_ln78_fu_286_p2 <= (ap_const_lv22_3F or Lo_assign_fu_262_p3);
    p_Result_125_fu_626_p5 <= (ap_const_lv64_0(63 downto 32) & trunc_ln215_fu_622_p1);
    p_Result_126_i_i_i_fu_208_p4 <= rxEng_ipMetaFifo_V_l_dout(15 downto 8);
    p_Result_128_fu_184_p5 <= (header_header_V(95 downto 32) & rxEng_ipMetaFifo_V_t_dout);
    p_Result_129_fu_196_p5 <= (p_Result_128_fu_184_p5(95 downto 64) & rxEng_ipMetaFifo_V_o_dout & p_Result_128_fu_184_p5(31 downto 0));
    p_Result_130_fu_599_p2 <= (lshr_ln647_reg_659 and lshr_ln647_36_fu_593_p2);
    p_Result_131_fu_617_p2 <= (lshr_ln647_38_fu_611_p2 and lshr_ln647_37_reg_669);
    p_Result_s_fu_230_p5 <= (agg_result_V_0_1_i_i_fu_222_p3 & p_Result_129_fu_196_p5(79 downto 0));

    rxEng_ipMetaFifo_V_l_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, rxEng_ipMetaFifo_V_l_empty_n, ap_predicate_op8_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1))) then 
            rxEng_ipMetaFifo_V_l_blk_n <= rxEng_ipMetaFifo_V_l_empty_n;
        else 
            rxEng_ipMetaFifo_V_l_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rxEng_ipMetaFifo_V_l_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op8_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1))) then 
            rxEng_ipMetaFifo_V_l_read <= ap_const_logic_1;
        else 
            rxEng_ipMetaFifo_V_l_read <= ap_const_logic_0;
        end if; 
    end process;


    rxEng_ipMetaFifo_V_o_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, rxEng_ipMetaFifo_V_o_empty_n, ap_predicate_op8_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1))) then 
            rxEng_ipMetaFifo_V_o_blk_n <= rxEng_ipMetaFifo_V_o_empty_n;
        else 
            rxEng_ipMetaFifo_V_o_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rxEng_ipMetaFifo_V_o_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op8_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1))) then 
            rxEng_ipMetaFifo_V_o_read <= ap_const_logic_1;
        else 
            rxEng_ipMetaFifo_V_o_read <= ap_const_logic_0;
        end if; 
    end process;


    rxEng_ipMetaFifo_V_t_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, rxEng_ipMetaFifo_V_t_empty_n, ap_predicate_op8_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1))) then 
            rxEng_ipMetaFifo_V_t_blk_n <= rxEng_ipMetaFifo_V_t_empty_n;
        else 
            rxEng_ipMetaFifo_V_t_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rxEng_ipMetaFifo_V_t_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op8_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1))) then 
            rxEng_ipMetaFifo_V_t_read <= ap_const_logic_1;
        else 
            rxEng_ipMetaFifo_V_t_read <= ap_const_logic_0;
        end if; 
    end process;


    rxEng_pseudoHeaderFi_3_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, rxEng_pseudoHeaderFi_3_full_n, state_3_load_reg_646, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (state_3_load_reg_646 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rxEng_pseudoHeaderFi_3_blk_n <= rxEng_pseudoHeaderFi_3_full_n;
        else 
            rxEng_pseudoHeaderFi_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    rxEng_pseudoHeaderFi_3_din <= 
        p_Result_125_fu_626_p5 when (and_ln82_reg_679(0) = '1') else 
        trunc_ln364_fu_604_p1;

    rxEng_pseudoHeaderFi_3_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, state_3_load_reg_646, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (state_3_load_reg_646 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rxEng_pseudoHeaderFi_3_write <= ap_const_logic_1;
        else 
            rxEng_pseudoHeaderFi_3_write <= ap_const_logic_0;
        end if; 
    end process;


    rxEng_pseudoHeaderFi_5_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, rxEng_pseudoHeaderFi_5_full_n, state_3_load_reg_646, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (state_3_load_reg_646 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rxEng_pseudoHeaderFi_5_blk_n <= rxEng_pseudoHeaderFi_5_full_n;
        else 
            rxEng_pseudoHeaderFi_5_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    rxEng_pseudoHeaderFi_5_din <= ap_const_lv8_FF;

    rxEng_pseudoHeaderFi_5_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, state_3_load_reg_646, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (state_3_load_reg_646 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rxEng_pseudoHeaderFi_5_write <= ap_const_logic_1;
        else 
            rxEng_pseudoHeaderFi_5_write <= ap_const_logic_0;
        end if; 
    end process;


    rxEng_pseudoHeaderFi_6_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, rxEng_pseudoHeaderFi_6_full_n, state_3_load_reg_646, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (state_3_load_reg_646 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rxEng_pseudoHeaderFi_6_blk_n <= rxEng_pseudoHeaderFi_6_full_n;
        else 
            rxEng_pseudoHeaderFi_6_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    rxEng_pseudoHeaderFi_6_din <= tmp_last_V_reg_674;

    rxEng_pseudoHeaderFi_6_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, state_3_load_reg_646, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (state_3_load_reg_646 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rxEng_pseudoHeaderFi_6_write <= ap_const_logic_1;
        else 
            rxEng_pseudoHeaderFi_6_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln647_33_fu_346_p3 <= 
        tmp_298_fu_310_p4 when (icmp_ln647_fu_292_p2(0) = '1') else 
        header_header_V;
    select_ln647_34_fu_354_p3 <= 
        sub_ln647_42_fu_326_p2 when (icmp_ln647_fu_292_p2(0) = '1') else 
        tmp_297_fu_298_p3;
    select_ln647_35_fu_504_p3 <= 
        add_ln647_fu_486_p2 when (icmp_ln647_9_fu_462_p2(0) = '1') else 
        sub_ln647_46_fu_498_p2;
    select_ln647_36_fu_512_p3 <= 
        tmp_301_fu_476_p4 when (icmp_ln647_9_fu_462_p2(0) = '1') else 
        header_header_V;
    select_ln647_37_fu_520_p3 <= 
        sub_ln647_45_fu_492_p2 when (icmp_ln647_9_fu_462_p2(0) = '1') else 
        tmp_300_fu_468_p3;
    select_ln647_fu_338_p3 <= 
        sub_ln647_fu_320_p2 when (icmp_ln647_fu_292_p2(0) = '1') else 
        sub_ln647_43_fu_332_p2;
    select_ln76_fu_562_p3 <= 
        add_ln79_fu_378_p2 when (icmp_ln76_fu_280_p2(0) = '1') else 
        header_idx;
    select_ln80_fu_442_p3 <= 
        sub_ln80_6_fu_426_p2 when (tmp_299_fu_402_p3(0) = '1') else 
        trunc_ln80_6_fu_432_p4;
    select_ln82_fu_570_p3 <= 
        add_ln79_fu_378_p2 when (and_ln82_fu_556_p2(0) = '1') else 
        select_ln76_fu_562_p3;
    shl_ln_fu_384_p3 <= (add_ln79_fu_378_p2 & ap_const_lv6_0);
    state_3_load_load_fu_158_p1 <= state_3;
    sub_ln647_42_fu_326_p2 <= std_logic_vector(signed(ap_const_lv7_5F) - signed(tmp_297_fu_298_p3));
    sub_ln647_43_fu_332_p2 <= std_logic_vector(unsigned(trunc_ln647_fu_306_p1) - unsigned(tmp_297_fu_298_p3));
    sub_ln647_44_fu_362_p2 <= std_logic_vector(signed(ap_const_lv7_5F) - signed(select_ln647_fu_338_p3));
    sub_ln647_45_fu_492_p2 <= std_logic_vector(signed(ap_const_lv7_5F) - signed(tmp_300_fu_468_p3));
    sub_ln647_46_fu_498_p2 <= std_logic_vector(signed(ap_const_lv7_5F) - signed(tmp_300_fu_468_p3));
    sub_ln647_47_fu_528_p2 <= std_logic_vector(signed(ap_const_lv7_5F) - signed(select_ln647_35_fu_504_p3));
    sub_ln647_fu_320_p2 <= std_logic_vector(unsigned(tmp_297_fu_298_p3) - unsigned(trunc_ln647_fu_306_p1));
    sub_ln80_5_fu_410_p2 <= std_logic_vector(unsigned(ap_const_lv23_0) - unsigned(sub_ln80_fu_396_p2));
    sub_ln80_6_fu_426_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(trunc_ln80_5_fu_416_p4));
    sub_ln80_fu_396_p2 <= std_logic_vector(unsigned(ap_const_lv23_60) - unsigned(zext_ln80_fu_392_p1));
    tmp_297_fu_298_p3 <= (trunc_ln76_7_fu_258_p1 & ap_const_lv6_0);
    
    tmp_298_fu_310_p4_proc : process(header_header_V)
    variable vlo_cpy : STD_LOGIC_VECTOR(96+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(96+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(96 - 1 downto 0);
    variable tmp_298_fu_310_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(96 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(96 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(96 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(7 - 1 downto 0) := ap_const_lv32_5F(7 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(7 - 1 downto 0) := ap_const_lv32_0(7 - 1 downto 0);
        v0_cpy := header_header_V;
        if (vlo_cpy(7 - 1 downto 0) > vhi_cpy(7 - 1 downto 0)) then
            vhi_cpy(7-1 downto 0) := std_logic_vector(96-1-unsigned(ap_const_lv32_0(7-1 downto 0)));
            vlo_cpy(7-1 downto 0) := std_logic_vector(96-1-unsigned(ap_const_lv32_5F(7-1 downto 0)));
            for tmp_298_fu_310_p4_i in 0 to 96-1 loop
                v0_cpy(tmp_298_fu_310_p4_i) := header_header_V(96-1-tmp_298_fu_310_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(7-1 downto 0)))));

        section := (others=>'0');
        section(7-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(7-1 downto 0)) - unsigned(vlo_cpy(7-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(96-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_298_fu_310_p4 <= resvalue(96-1 downto 0);
    end process;

    tmp_299_fu_402_p3 <= sub_ln80_fu_396_p2(22 downto 22);
    tmp_300_fu_468_p3 <= (trunc_ln76_fu_254_p1 & ap_const_lv6_0);
    
    tmp_301_fu_476_p4_proc : process(header_header_V)
    variable vlo_cpy : STD_LOGIC_VECTOR(96+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(96+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(96 - 1 downto 0);
    variable tmp_301_fu_476_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(96 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(96 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(96 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(7 - 1 downto 0) := ap_const_lv32_5F(7 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(7 - 1 downto 0) := ap_const_lv32_0(7 - 1 downto 0);
        v0_cpy := header_header_V;
        if (vlo_cpy(7 - 1 downto 0) > vhi_cpy(7 - 1 downto 0)) then
            vhi_cpy(7-1 downto 0) := std_logic_vector(96-1-unsigned(ap_const_lv32_0(7-1 downto 0)));
            vlo_cpy(7-1 downto 0) := std_logic_vector(96-1-unsigned(ap_const_lv32_5F(7-1 downto 0)));
            for tmp_301_fu_476_p4_i in 0 to 96-1 loop
                v0_cpy(tmp_301_fu_476_p4_i) := header_header_V(96-1-tmp_301_fu_476_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(7-1 downto 0)))));

        section := (others=>'0');
        section(7-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(7-1 downto 0)) - unsigned(vlo_cpy(7-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(96-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_301_fu_476_p4 <= resvalue(96-1 downto 0);
    end process;

    tmp_last_V_fu_550_p2 <= (xor_ln76_fu_544_p2 or icmp_ln80_fu_450_p2);
    tmp_nbreadreq_fu_118_p5 <= (0=>(rxEng_ipMetaFifo_V_t_empty_n and rxEng_ipMetaFifo_V_o_empty_n and rxEng_ipMetaFifo_V_l_empty_n), others=>'-');
    trunc_ln215_fu_622_p1 <= p_Result_131_fu_617_p2(32 - 1 downto 0);
    trunc_ln364_fu_604_p1 <= p_Result_130_fu_599_p2(64 - 1 downto 0);
    trunc_ln647_12_fu_218_p1 <= rxEng_ipMetaFifo_V_l_dout(8 - 1 downto 0);
    trunc_ln647_fu_306_p1 <= or_ln78_fu_286_p2(7 - 1 downto 0);
    trunc_ln76_7_fu_258_p1 <= header_idx(1 - 1 downto 0);
    trunc_ln76_fu_254_p1 <= header_idx(1 - 1 downto 0);
    trunc_ln80_5_fu_416_p4 <= sub_ln80_5_fu_410_p2(10 downto 3);
    trunc_ln80_6_fu_432_p4 <= sub_ln80_fu_396_p2(10 downto 3);
    xor_ln76_fu_544_p2 <= (icmp_ln76_fu_280_p2 xor ap_const_lv1_1);
    zext_ln647_42_fu_590_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln647_44_reg_654),96));
    zext_ln647_43_fu_534_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln647_37_fu_520_p3),96));
    zext_ln647_44_fu_608_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln647_47_reg_664),96));
    zext_ln647_fu_368_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln647_34_fu_354_p3),96));
    zext_ln76_fu_270_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Lo_assign_fu_262_p3),23));
    zext_ln80_fu_392_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_384_p3),23));
end behav;
