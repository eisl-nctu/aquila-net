-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity txEventMerger is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    txApp2eventEng_merge_1_dout : IN STD_LOGIC_VECTOR (53 downto 0);
    txApp2eventEng_merge_1_empty_n : IN STD_LOGIC;
    txApp2eventEng_merge_1_read : OUT STD_LOGIC;
    txAppStream2event_me_1_dout : IN STD_LOGIC_VECTOR (53 downto 0);
    txAppStream2event_me_1_empty_n : IN STD_LOGIC;
    txAppStream2event_me_1_read : OUT STD_LOGIC;
    txApp2eventEng_setEv_1_din : OUT STD_LOGIC_VECTOR (53 downto 0);
    txApp2eventEng_setEv_1_full_n : IN STD_LOGIC;
    txApp2eventEng_setEv_1_write : OUT STD_LOGIC;
    txApp_txEventCache_V_din : OUT STD_LOGIC_VECTOR (53 downto 0);
    txApp_txEventCache_V_full_n : IN STD_LOGIC;
    txApp_txEventCache_V_write : OUT STD_LOGIC );
end;


architecture behav of txEventMerger is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal tmp_nbreadreq_fu_42_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal tmp_reg_112 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_nbreadreq_fu_56_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op9_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal tmp_reg_112_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_121 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op18_write_state3 : BOOLEAN;
    signal icmp_ln54_reg_131 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op21_write_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal txApp2eventEng_merge_1_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal txApp2eventEng_setEv_1_blk_n : STD_LOGIC;
    signal txAppStream2event_me_1_blk_n : STD_LOGIC;
    signal txApp_txEventCache_V_blk_n : STD_LOGIC;
    signal tmp114_reg_116 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp114_reg_116_pp0_iter1_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_2_reg_125 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln54_fu_88_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_type_fu_84_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_21_i_fu_94_p4 : STD_LOGIC_VECTOR (50 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_112 = ap_const_lv1_0) and (tmp_20_nbreadreq_fu_56_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln54_reg_131 <= icmp_ln54_fu_88_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_nbreadreq_fu_42_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp114_reg_116 <= txApp2eventEng_merge_1_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp114_reg_116_pp0_iter1_reg <= tmp114_reg_116;
                tmp_reg_112 <= tmp_nbreadreq_fu_42_p3;
                tmp_reg_112_pp0_iter1_reg <= tmp_reg_112;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_112 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_20_reg_121 <= tmp_20_nbreadreq_fu_56_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op9_read_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_2_reg_125 <= txAppStream2event_me_1_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, txApp2eventEng_merge_1_empty_n, tmp_nbreadreq_fu_42_p3, txAppStream2event_me_1_empty_n, ap_predicate_op9_read_state2, txApp2eventEng_setEv_1_full_n, tmp_reg_112_pp0_iter1_reg, ap_predicate_op18_write_state3, txApp_txEventCache_V_full_n, ap_predicate_op21_write_state3)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((txApp_txEventCache_V_full_n = ap_const_logic_0) and (ap_predicate_op21_write_state3 = ap_const_boolean_1)) or ((tmp_reg_112_pp0_iter1_reg = ap_const_lv1_1) and (txApp2eventEng_setEv_1_full_n = ap_const_logic_0)) or ((txApp2eventEng_setEv_1_full_n = ap_const_logic_0) and (ap_predicate_op18_write_state3 = ap_const_boolean_1)))) or ((txAppStream2event_me_1_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op9_read_state2 = ap_const_boolean_1)) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_42_p3 = ap_const_lv1_1) and (txApp2eventEng_merge_1_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, txApp2eventEng_merge_1_empty_n, tmp_nbreadreq_fu_42_p3, txAppStream2event_me_1_empty_n, ap_predicate_op9_read_state2, txApp2eventEng_setEv_1_full_n, tmp_reg_112_pp0_iter1_reg, ap_predicate_op18_write_state3, txApp_txEventCache_V_full_n, ap_predicate_op21_write_state3)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((txApp_txEventCache_V_full_n = ap_const_logic_0) and (ap_predicate_op21_write_state3 = ap_const_boolean_1)) or ((tmp_reg_112_pp0_iter1_reg = ap_const_lv1_1) and (txApp2eventEng_setEv_1_full_n = ap_const_logic_0)) or ((txApp2eventEng_setEv_1_full_n = ap_const_logic_0) and (ap_predicate_op18_write_state3 = ap_const_boolean_1)))) or ((txAppStream2event_me_1_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op9_read_state2 = ap_const_boolean_1)) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_42_p3 = ap_const_lv1_1) and (txApp2eventEng_merge_1_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, txApp2eventEng_merge_1_empty_n, tmp_nbreadreq_fu_42_p3, txAppStream2event_me_1_empty_n, ap_predicate_op9_read_state2, txApp2eventEng_setEv_1_full_n, tmp_reg_112_pp0_iter1_reg, ap_predicate_op18_write_state3, txApp_txEventCache_V_full_n, ap_predicate_op21_write_state3)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((txApp_txEventCache_V_full_n = ap_const_logic_0) and (ap_predicate_op21_write_state3 = ap_const_boolean_1)) or ((tmp_reg_112_pp0_iter1_reg = ap_const_lv1_1) and (txApp2eventEng_setEv_1_full_n = ap_const_logic_0)) or ((txApp2eventEng_setEv_1_full_n = ap_const_logic_0) and (ap_predicate_op18_write_state3 = ap_const_boolean_1)))) or ((txAppStream2event_me_1_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op9_read_state2 = ap_const_boolean_1)) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_42_p3 = ap_const_lv1_1) and (txApp2eventEng_merge_1_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg, txApp2eventEng_merge_1_empty_n, tmp_nbreadreq_fu_42_p3)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_42_p3 = ap_const_lv1_1) and (txApp2eventEng_merge_1_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(txAppStream2event_me_1_empty_n, ap_predicate_op9_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((txAppStream2event_me_1_empty_n = ap_const_logic_0) and (ap_predicate_op9_read_state2 = ap_const_boolean_1));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(txApp2eventEng_setEv_1_full_n, tmp_reg_112_pp0_iter1_reg, ap_predicate_op18_write_state3, txApp_txEventCache_V_full_n, ap_predicate_op21_write_state3)
    begin
                ap_block_state3_pp0_stage0_iter2 <= (((txApp_txEventCache_V_full_n = ap_const_logic_0) and (ap_predicate_op21_write_state3 = ap_const_boolean_1)) or ((tmp_reg_112_pp0_iter1_reg = ap_const_lv1_1) and (txApp2eventEng_setEv_1_full_n = ap_const_logic_0)) or ((txApp2eventEng_setEv_1_full_n = ap_const_logic_0) and (ap_predicate_op18_write_state3 = ap_const_boolean_1)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op18_write_state3_assign_proc : process(tmp_reg_112_pp0_iter1_reg, tmp_20_reg_121)
    begin
                ap_predicate_op18_write_state3 <= ((tmp_reg_112_pp0_iter1_reg = ap_const_lv1_0) and (tmp_20_reg_121 = ap_const_lv1_1));
    end process;


    ap_predicate_op21_write_state3_assign_proc : process(tmp_reg_112_pp0_iter1_reg, tmp_20_reg_121, icmp_ln54_reg_131)
    begin
                ap_predicate_op21_write_state3 <= ((tmp_reg_112_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln54_reg_131 = ap_const_lv1_1) and (tmp_20_reg_121 = ap_const_lv1_1));
    end process;


    ap_predicate_op9_read_state2_assign_proc : process(tmp_reg_112, tmp_20_nbreadreq_fu_56_p3)
    begin
                ap_predicate_op9_read_state2 <= ((tmp_reg_112 = ap_const_lv1_0) and (tmp_20_nbreadreq_fu_56_p3 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln54_fu_88_p2 <= "1" when (tmp_type_fu_84_p1 = ap_const_lv3_0) else "0";
    tmp_20_nbreadreq_fu_56_p3 <= (0=>(txAppStream2event_me_1_empty_n), others=>'-');
    tmp_21_i_fu_94_p4 <= tmp_2_reg_125(53 downto 3);
    tmp_nbreadreq_fu_42_p3 <= (0=>(txApp2eventEng_merge_1_empty_n), others=>'-');
    tmp_type_fu_84_p1 <= txAppStream2event_me_1_dout(3 - 1 downto 0);

    txApp2eventEng_merge_1_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, txApp2eventEng_merge_1_empty_n, tmp_nbreadreq_fu_42_p3, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (tmp_nbreadreq_fu_42_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            txApp2eventEng_merge_1_blk_n <= txApp2eventEng_merge_1_empty_n;
        else 
            txApp2eventEng_merge_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    txApp2eventEng_merge_1_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_42_p3, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_nbreadreq_fu_42_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            txApp2eventEng_merge_1_read <= ap_const_logic_1;
        else 
            txApp2eventEng_merge_1_read <= ap_const_logic_0;
        end if; 
    end process;


    txApp2eventEng_setEv_1_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, txApp2eventEng_setEv_1_full_n, tmp_reg_112_pp0_iter1_reg, ap_predicate_op18_write_state3, ap_block_pp0_stage0)
    begin
        if ((((tmp_reg_112_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op18_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            txApp2eventEng_setEv_1_blk_n <= txApp2eventEng_setEv_1_full_n;
        else 
            txApp2eventEng_setEv_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    txApp2eventEng_setEv_1_din_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_reg_112_pp0_iter1_reg, ap_predicate_op18_write_state3, tmp114_reg_116_pp0_iter1_reg, tmp_2_reg_125, ap_block_pp0_stage0_01001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then
            if ((tmp_reg_112_pp0_iter1_reg = ap_const_lv1_1)) then 
                txApp2eventEng_setEv_1_din <= tmp114_reg_116_pp0_iter1_reg;
            elsif ((ap_predicate_op18_write_state3 = ap_const_boolean_1)) then 
                txApp2eventEng_setEv_1_din <= tmp_2_reg_125;
            else 
                txApp2eventEng_setEv_1_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            txApp2eventEng_setEv_1_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    txApp2eventEng_setEv_1_write_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_reg_112_pp0_iter1_reg, ap_predicate_op18_write_state3, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_reg_112_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op18_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            txApp2eventEng_setEv_1_write <= ap_const_logic_1;
        else 
            txApp2eventEng_setEv_1_write <= ap_const_logic_0;
        end if; 
    end process;


    txAppStream2event_me_1_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, txAppStream2event_me_1_empty_n, ap_predicate_op9_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op9_read_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            txAppStream2event_me_1_blk_n <= txAppStream2event_me_1_empty_n;
        else 
            txAppStream2event_me_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    txAppStream2event_me_1_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op9_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op9_read_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            txAppStream2event_me_1_read <= ap_const_logic_1;
        else 
            txAppStream2event_me_1_read <= ap_const_logic_0;
        end if; 
    end process;


    txApp_txEventCache_V_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, txApp_txEventCache_V_full_n, ap_predicate_op21_write_state3, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op21_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            txApp_txEventCache_V_blk_n <= txApp_txEventCache_V_full_n;
        else 
            txApp_txEventCache_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    txApp_txEventCache_V_din <= (tmp_21_i_fu_94_p4 & ap_const_lv3_0);

    txApp_txEventCache_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op21_write_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op21_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            txApp_txEventCache_V_write <= ap_const_logic_1;
        else 
            txApp_txEventCache_V_write <= ap_const_logic_0;
        end if; 
    end process;

end behav;
