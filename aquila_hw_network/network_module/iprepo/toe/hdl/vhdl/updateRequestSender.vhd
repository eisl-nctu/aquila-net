-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity updateRequestSender is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    sessionInsert_req_V_4_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    sessionInsert_req_V_4_empty_n : IN STD_LOGIC;
    sessionInsert_req_V_4_read : OUT STD_LOGIC;
    sessionInsert_req_V_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    sessionInsert_req_V_1_empty_n : IN STD_LOGIC;
    sessionInsert_req_V_1_read : OUT STD_LOGIC;
    sessionInsert_req_V_6_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    sessionInsert_req_V_6_empty_n : IN STD_LOGIC;
    sessionInsert_req_V_6_read : OUT STD_LOGIC;
    sessionInsert_req_V_3_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    sessionInsert_req_V_3_empty_n : IN STD_LOGIC;
    sessionInsert_req_V_3_read : OUT STD_LOGIC;
    sessionInsert_req_V_s_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    sessionInsert_req_V_s_empty_n : IN STD_LOGIC;
    sessionInsert_req_V_s_read : OUT STD_LOGIC;
    sessionInsert_req_V_5_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    sessionInsert_req_V_5_empty_n : IN STD_LOGIC;
    sessionInsert_req_V_5_read : OUT STD_LOGIC;
    sessionDelete_req_V_4_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    sessionDelete_req_V_4_empty_n : IN STD_LOGIC;
    sessionDelete_req_V_4_read : OUT STD_LOGIC;
    sessionDelete_req_V_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    sessionDelete_req_V_1_empty_n : IN STD_LOGIC;
    sessionDelete_req_V_1_read : OUT STD_LOGIC;
    sessionDelete_req_V_6_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    sessionDelete_req_V_6_empty_n : IN STD_LOGIC;
    sessionDelete_req_V_6_read : OUT STD_LOGIC;
    sessionDelete_req_V_3_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    sessionDelete_req_V_3_empty_n : IN STD_LOGIC;
    sessionDelete_req_V_3_read : OUT STD_LOGIC;
    sessionDelete_req_V_s_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    sessionDelete_req_V_s_empty_n : IN STD_LOGIC;
    sessionDelete_req_V_s_read : OUT STD_LOGIC;
    sessionDelete_req_V_5_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    sessionDelete_req_V_5_empty_n : IN STD_LOGIC;
    sessionDelete_req_V_5_read : OUT STD_LOGIC;
    slc_sessionIdFinFifo_1_din : OUT STD_LOGIC_VECTOR (13 downto 0);
    slc_sessionIdFinFifo_1_full_n : IN STD_LOGIC;
    slc_sessionIdFinFifo_1_write : OUT STD_LOGIC;
    sessionUpdate_req_V_TREADY : IN STD_LOGIC;
    sessionUpdate_req_V_TDATA : OUT STD_LOGIC_VECTOR (87 downto 0);
    sessionUpdate_req_V_TVALID : OUT STD_LOGIC;
    regSessionCount_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    regSessionCount_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of updateRequestSender is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal io_acc_block_signal_op7 : STD_LOGIC;
    signal tmp_nbreadreq_fu_72_p8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal io_acc_block_signal_op16 : STD_LOGIC;
    signal tmp_reg_273 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_nbreadreq_fu_106_p8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op16_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal tmp_reg_273_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_307 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op27_write_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal sessionUpdate_req_V_1_ack_in : STD_LOGIC;
    signal ap_predicate_op26_write_state3 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal sessionUpdate_req_V_1_ack_out : STD_LOGIC;
    signal sessionUpdate_req_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal tmp_reg_273_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_307_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op47_write_state4 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal sessionUpdate_req_V_1_data_in : STD_LOGIC_VECTOR (87 downto 0);
    signal sessionUpdate_req_V_1_data_out : STD_LOGIC_VECTOR (87 downto 0);
    signal sessionUpdate_req_V_1_vld_in : STD_LOGIC;
    signal sessionUpdate_req_V_1_vld_out : STD_LOGIC;
    signal sessionUpdate_req_V_1_payload_A : STD_LOGIC_VECTOR (87 downto 0);
    signal sessionUpdate_req_V_1_payload_B : STD_LOGIC_VECTOR (87 downto 0);
    signal sessionUpdate_req_V_1_sel_rd : STD_LOGIC := '0';
    signal sessionUpdate_req_V_1_sel_wr : STD_LOGIC := '0';
    signal sessionUpdate_req_V_1_sel : STD_LOGIC;
    signal sessionUpdate_req_V_1_load_A : STD_LOGIC;
    signal sessionUpdate_req_V_1_load_B : STD_LOGIC;
    signal sessionUpdate_req_V_1_state_cmp_full : STD_LOGIC;
    signal usedSessionIDs_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal sessionUpdate_req_V_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal sessionInsert_req_V_4_blk_n : STD_LOGIC;
    signal sessionInsert_req_V_1_blk_n : STD_LOGIC;
    signal sessionInsert_req_V_6_blk_n : STD_LOGIC;
    signal sessionInsert_req_V_3_blk_n : STD_LOGIC;
    signal sessionInsert_req_V_s_blk_n : STD_LOGIC;
    signal sessionInsert_req_V_5_blk_n : STD_LOGIC;
    signal sessionDelete_req_V_4_blk_n : STD_LOGIC;
    signal sessionDelete_req_V_1_blk_n : STD_LOGIC;
    signal sessionDelete_req_V_6_blk_n : STD_LOGIC;
    signal sessionDelete_req_V_3_blk_n : STD_LOGIC;
    signal sessionDelete_req_V_s_blk_n : STD_LOGIC;
    signal sessionDelete_req_V_5_blk_n : STD_LOGIC;
    signal slc_sessionIdFinFifo_1_blk_n : STD_LOGIC;
    signal tmp_op_reg_277 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_op_reg_277_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_key_theirIp_V_reg_282 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_key_theirIp_V_reg_282_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_key_myPort_V_reg_287 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_key_myPort_V_reg_287_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_key_theirPort_V_reg_292 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_key_theirPort_V_reg_292_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_value_V_reg_297 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_value_V_reg_297_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_source_reg_302 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_source_reg_302_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_op_1_reg_311 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_key_theirIp_V_1_reg_316 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_key_myPort_V_1_reg_321 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_key_theirPort_V_1_reg_326 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_value_V_1_reg_331 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_source_1_reg_336 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_fu_209_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_V_reg_341 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln163_1_fu_223_p1 : STD_LOGIC_VECTOR (87 downto 0);
    signal sext_ln163_fu_238_p1 : STD_LOGIC_VECTOR (87 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal add_ln701_fu_247_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln700_fu_260_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_11_fu_213_p7 : STD_LOGIC_VECTOR (81 downto 0);
    signal tmp13_fu_228_p7 : STD_LOGIC_VECTOR (81 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to2 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    sessionUpdate_req_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                sessionUpdate_req_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((sessionUpdate_req_V_1_vld_out = ap_const_logic_1) and (sessionUpdate_req_V_1_ack_out = ap_const_logic_1))) then 
                                        sessionUpdate_req_V_1_sel_rd <= not(sessionUpdate_req_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    sessionUpdate_req_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                sessionUpdate_req_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((sessionUpdate_req_V_1_vld_in = ap_const_logic_1) and (sessionUpdate_req_V_1_ack_in = ap_const_logic_1))) then 
                                        sessionUpdate_req_V_1_sel_wr <= not(sessionUpdate_req_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    sessionUpdate_req_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                sessionUpdate_req_V_1_state <= ap_const_lv2_0;
            else
                if ((((sessionUpdate_req_V_1_vld_in = ap_const_logic_0) and (sessionUpdate_req_V_1_ack_out = ap_const_logic_1) and (sessionUpdate_req_V_1_state = ap_const_lv2_3)) or ((sessionUpdate_req_V_1_vld_in = ap_const_logic_0) and (sessionUpdate_req_V_1_state = ap_const_lv2_2)))) then 
                    sessionUpdate_req_V_1_state <= ap_const_lv2_2;
                elsif ((((sessionUpdate_req_V_TREADY = ap_const_logic_0) and (sessionUpdate_req_V_1_state = ap_const_lv2_1)) or ((sessionUpdate_req_V_TREADY = ap_const_logic_0) and (sessionUpdate_req_V_1_vld_in = ap_const_logic_1) and (sessionUpdate_req_V_1_state = ap_const_lv2_3)))) then 
                    sessionUpdate_req_V_1_state <= ap_const_lv2_1;
                elsif ((((sessionUpdate_req_V_1_ack_out = ap_const_logic_1) and (sessionUpdate_req_V_1_state = ap_const_lv2_1)) or (not(((sessionUpdate_req_V_1_vld_in = ap_const_logic_0) and (sessionUpdate_req_V_1_ack_out = ap_const_logic_1))) and not(((sessionUpdate_req_V_TREADY = ap_const_logic_0) and (sessionUpdate_req_V_1_vld_in = ap_const_logic_1))) and (sessionUpdate_req_V_1_state = ap_const_lv2_3)) or ((sessionUpdate_req_V_1_vld_in = ap_const_logic_1) and (sessionUpdate_req_V_1_state = ap_const_lv2_2)))) then 
                    sessionUpdate_req_V_1_state <= ap_const_lv2_3;
                else 
                    sessionUpdate_req_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    usedSessionIDs_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((tmp_reg_273_pp0_iter2_reg = ap_const_lv1_1)) then 
                    usedSessionIDs_V <= add_ln700_fu_260_p2;
                elsif (((tmp_1_reg_307_pp0_iter2_reg = ap_const_lv1_1) and (tmp_reg_273_pp0_iter2_reg = ap_const_lv1_0))) then 
                    usedSessionIDs_V <= add_ln701_fu_247_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((sessionUpdate_req_V_1_load_A = ap_const_logic_1)) then
                sessionUpdate_req_V_1_payload_A <= sessionUpdate_req_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((sessionUpdate_req_V_1_load_B = ap_const_logic_1)) then
                sessionUpdate_req_V_1_payload_B <= sessionUpdate_req_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_273 = ap_const_lv1_0))) then
                tmp_1_reg_307 <= tmp_1_nbreadreq_fu_106_p8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                tmp_1_reg_307_pp0_iter2_reg <= tmp_1_reg_307;
                tmp_reg_273_pp0_iter2_reg <= tmp_reg_273_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1_nbreadreq_fu_106_p8 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_273 = ap_const_lv1_0))) then
                tmp_V_reg_341 <= tmp_V_fu_209_p1;
                tmp_key_myPort_V_1_reg_321 <= sessionDelete_req_V_6_dout;
                tmp_key_theirIp_V_1_reg_316 <= sessionDelete_req_V_1_dout;
                tmp_key_theirPort_V_1_reg_326 <= sessionDelete_req_V_3_dout;
                tmp_op_1_reg_311 <= sessionDelete_req_V_4_dout;
                tmp_source_1_reg_336 <= sessionDelete_req_V_5_dout;
                tmp_value_V_1_reg_331 <= sessionDelete_req_V_s_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_nbreadreq_fu_72_p8 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_key_myPort_V_reg_287 <= sessionInsert_req_V_6_dout;
                tmp_key_theirIp_V_reg_282 <= sessionInsert_req_V_1_dout;
                tmp_key_theirPort_V_reg_292 <= sessionInsert_req_V_3_dout;
                tmp_op_reg_277 <= sessionInsert_req_V_4_dout;
                tmp_source_reg_302 <= sessionInsert_req_V_5_dout;
                tmp_value_V_reg_297 <= sessionInsert_req_V_s_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_key_myPort_V_reg_287_pp0_iter1_reg <= tmp_key_myPort_V_reg_287;
                tmp_key_theirIp_V_reg_282_pp0_iter1_reg <= tmp_key_theirIp_V_reg_282;
                tmp_key_theirPort_V_reg_292_pp0_iter1_reg <= tmp_key_theirPort_V_reg_292;
                tmp_op_reg_277_pp0_iter1_reg <= tmp_op_reg_277;
                tmp_reg_273 <= tmp_nbreadreq_fu_72_p8;
                tmp_reg_273_pp0_iter1_reg <= tmp_reg_273;
                tmp_source_reg_302_pp0_iter1_reg <= tmp_source_reg_302;
                tmp_value_V_reg_297_pp0_iter1_reg <= tmp_value_V_reg_297;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln700_fu_260_p2 <= std_logic_vector(unsigned(usedSessionIDs_V) + unsigned(ap_const_lv16_1));
    add_ln701_fu_247_p2 <= std_logic_vector(signed(ap_const_lv16_FFFF) + signed(usedSessionIDs_V));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, io_acc_block_signal_op7, tmp_nbreadreq_fu_72_p8, io_acc_block_signal_op16, ap_predicate_op16_read_state2, slc_sessionIdFinFifo_1_full_n, ap_predicate_op27_write_state3, sessionUpdate_req_V_TREADY, sessionUpdate_req_V_1_state)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_72_p8 = ap_const_lv1_1) and (io_acc_block_signal_op7 = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((sessionUpdate_req_V_1_state = ap_const_lv2_1) or ((sessionUpdate_req_V_TREADY = ap_const_logic_0) and (sessionUpdate_req_V_1_state = ap_const_lv2_3)))) or ((slc_sessionIdFinFifo_1_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op27_write_state3 = ap_const_boolean_1)) or ((io_acc_block_signal_op16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op16_read_state2 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, io_acc_block_signal_op7, tmp_nbreadreq_fu_72_p8, io_acc_block_signal_op16, ap_predicate_op16_read_state2, slc_sessionIdFinFifo_1_full_n, ap_predicate_op27_write_state3, sessionUpdate_req_V_TREADY, ap_block_state3_io, sessionUpdate_req_V_1_state, ap_block_state4_io)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_72_p8 = ap_const_lv1_1) and (io_acc_block_signal_op7 = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state4_io) or (sessionUpdate_req_V_1_state = ap_const_lv2_1) or ((sessionUpdate_req_V_TREADY = ap_const_logic_0) and (sessionUpdate_req_V_1_state = ap_const_lv2_3)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or ((slc_sessionIdFinFifo_1_full_n = ap_const_logic_0) and (ap_predicate_op27_write_state3 = ap_const_boolean_1)))) or ((io_acc_block_signal_op16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op16_read_state2 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, io_acc_block_signal_op7, tmp_nbreadreq_fu_72_p8, io_acc_block_signal_op16, ap_predicate_op16_read_state2, slc_sessionIdFinFifo_1_full_n, ap_predicate_op27_write_state3, sessionUpdate_req_V_TREADY, ap_block_state3_io, sessionUpdate_req_V_1_state, ap_block_state4_io)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_72_p8 = ap_const_lv1_1) and (io_acc_block_signal_op7 = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state4_io) or (sessionUpdate_req_V_1_state = ap_const_lv2_1) or ((sessionUpdate_req_V_TREADY = ap_const_logic_0) and (sessionUpdate_req_V_1_state = ap_const_lv2_3)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or ((slc_sessionIdFinFifo_1_full_n = ap_const_logic_0) and (ap_predicate_op27_write_state3 = ap_const_boolean_1)))) or ((io_acc_block_signal_op16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op16_read_state2 = ap_const_boolean_1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg, io_acc_block_signal_op7, tmp_nbreadreq_fu_72_p8)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_72_p8 = ap_const_lv1_1) and (io_acc_block_signal_op7 = ap_const_logic_0)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(io_acc_block_signal_op16, ap_predicate_op16_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((io_acc_block_signal_op16 = ap_const_logic_0) and (ap_predicate_op16_read_state2 = ap_const_boolean_1));
    end process;


    ap_block_state3_io_assign_proc : process(tmp_reg_273_pp0_iter1_reg, sessionUpdate_req_V_1_ack_in, ap_predicate_op26_write_state3)
    begin
                ap_block_state3_io <= (((tmp_reg_273_pp0_iter1_reg = ap_const_lv1_1) and (sessionUpdate_req_V_1_ack_in = ap_const_logic_0)) or ((sessionUpdate_req_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op26_write_state3 = ap_const_boolean_1)));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(slc_sessionIdFinFifo_1_full_n, ap_predicate_op27_write_state3)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((slc_sessionIdFinFifo_1_full_n = ap_const_logic_0) and (ap_predicate_op27_write_state3 = ap_const_boolean_1));
    end process;


    ap_block_state4_io_assign_proc : process(sessionUpdate_req_V_1_ack_in, tmp_reg_273_pp0_iter2_reg, ap_predicate_op47_write_state4)
    begin
                ap_block_state4_io <= (((tmp_reg_273_pp0_iter2_reg = ap_const_lv1_1) and (sessionUpdate_req_V_1_ack_in = ap_const_logic_0)) or ((sessionUpdate_req_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op47_write_state4 = ap_const_boolean_1)));
    end process;


    ap_block_state4_pp0_stage0_iter3_assign_proc : process(sessionUpdate_req_V_TREADY, sessionUpdate_req_V_1_state)
    begin
                ap_block_state4_pp0_stage0_iter3 <= ((sessionUpdate_req_V_1_state = ap_const_lv2_1) or ((sessionUpdate_req_V_TREADY = ap_const_logic_0) and (sessionUpdate_req_V_1_state = ap_const_lv2_3)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op16_read_state2_assign_proc : process(tmp_reg_273, tmp_1_nbreadreq_fu_106_p8)
    begin
                ap_predicate_op16_read_state2 <= ((tmp_1_nbreadreq_fu_106_p8 = ap_const_lv1_1) and (tmp_reg_273 = ap_const_lv1_0));
    end process;


    ap_predicate_op26_write_state3_assign_proc : process(tmp_reg_273_pp0_iter1_reg, tmp_1_reg_307)
    begin
                ap_predicate_op26_write_state3 <= ((tmp_1_reg_307 = ap_const_lv1_1) and (tmp_reg_273_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op27_write_state3_assign_proc : process(tmp_reg_273_pp0_iter1_reg, tmp_1_reg_307)
    begin
                ap_predicate_op27_write_state3 <= ((tmp_1_reg_307 = ap_const_lv1_1) and (tmp_reg_273_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op47_write_state4_assign_proc : process(tmp_reg_273_pp0_iter2_reg, tmp_1_reg_307_pp0_iter2_reg)
    begin
                ap_predicate_op47_write_state4 <= ((tmp_1_reg_307_pp0_iter2_reg = ap_const_lv1_1) and (tmp_reg_273_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to2)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to2 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op16 <= (sessionDelete_req_V_s_empty_n and sessionDelete_req_V_6_empty_n and sessionDelete_req_V_5_empty_n and sessionDelete_req_V_4_empty_n and sessionDelete_req_V_3_empty_n and sessionDelete_req_V_1_empty_n);
    io_acc_block_signal_op7 <= (sessionInsert_req_V_s_empty_n and sessionInsert_req_V_6_empty_n and sessionInsert_req_V_5_empty_n and sessionInsert_req_V_4_empty_n and sessionInsert_req_V_3_empty_n and sessionInsert_req_V_1_empty_n);

    regSessionCount_V_assign_proc : process(ap_enable_reg_pp0_iter3, tmp_reg_273_pp0_iter2_reg, tmp_1_reg_307_pp0_iter2_reg, add_ln701_fu_247_p2, add_ln700_fu_260_p2, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
            if ((tmp_reg_273_pp0_iter2_reg = ap_const_lv1_1)) then 
                regSessionCount_V <= add_ln700_fu_260_p2;
            elsif (((tmp_1_reg_307_pp0_iter2_reg = ap_const_lv1_1) and (tmp_reg_273_pp0_iter2_reg = ap_const_lv1_0))) then 
                regSessionCount_V <= add_ln701_fu_247_p2;
            else 
                regSessionCount_V <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            regSessionCount_V <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    regSessionCount_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, tmp_reg_273_pp0_iter2_reg, tmp_1_reg_307_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_reg_273_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_1_reg_307_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_273_pp0_iter2_reg = ap_const_lv1_0)))) then 
            regSessionCount_V_ap_vld <= ap_const_logic_1;
        else 
            regSessionCount_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    sessionDelete_req_V_1_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, sessionDelete_req_V_1_empty_n, ap_predicate_op16_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op16_read_state2 = ap_const_boolean_1))) then 
            sessionDelete_req_V_1_blk_n <= sessionDelete_req_V_1_empty_n;
        else 
            sessionDelete_req_V_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    sessionDelete_req_V_1_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op16_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op16_read_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            sessionDelete_req_V_1_read <= ap_const_logic_1;
        else 
            sessionDelete_req_V_1_read <= ap_const_logic_0;
        end if; 
    end process;


    sessionDelete_req_V_3_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, sessionDelete_req_V_3_empty_n, ap_predicate_op16_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op16_read_state2 = ap_const_boolean_1))) then 
            sessionDelete_req_V_3_blk_n <= sessionDelete_req_V_3_empty_n;
        else 
            sessionDelete_req_V_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    sessionDelete_req_V_3_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op16_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op16_read_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            sessionDelete_req_V_3_read <= ap_const_logic_1;
        else 
            sessionDelete_req_V_3_read <= ap_const_logic_0;
        end if; 
    end process;


    sessionDelete_req_V_4_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, sessionDelete_req_V_4_empty_n, ap_predicate_op16_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op16_read_state2 = ap_const_boolean_1))) then 
            sessionDelete_req_V_4_blk_n <= sessionDelete_req_V_4_empty_n;
        else 
            sessionDelete_req_V_4_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    sessionDelete_req_V_4_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op16_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op16_read_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            sessionDelete_req_V_4_read <= ap_const_logic_1;
        else 
            sessionDelete_req_V_4_read <= ap_const_logic_0;
        end if; 
    end process;


    sessionDelete_req_V_5_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, sessionDelete_req_V_5_empty_n, ap_predicate_op16_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op16_read_state2 = ap_const_boolean_1))) then 
            sessionDelete_req_V_5_blk_n <= sessionDelete_req_V_5_empty_n;
        else 
            sessionDelete_req_V_5_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    sessionDelete_req_V_5_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op16_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op16_read_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            sessionDelete_req_V_5_read <= ap_const_logic_1;
        else 
            sessionDelete_req_V_5_read <= ap_const_logic_0;
        end if; 
    end process;


    sessionDelete_req_V_6_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, sessionDelete_req_V_6_empty_n, ap_predicate_op16_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op16_read_state2 = ap_const_boolean_1))) then 
            sessionDelete_req_V_6_blk_n <= sessionDelete_req_V_6_empty_n;
        else 
            sessionDelete_req_V_6_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    sessionDelete_req_V_6_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op16_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op16_read_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            sessionDelete_req_V_6_read <= ap_const_logic_1;
        else 
            sessionDelete_req_V_6_read <= ap_const_logic_0;
        end if; 
    end process;


    sessionDelete_req_V_s_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, sessionDelete_req_V_s_empty_n, ap_predicate_op16_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op16_read_state2 = ap_const_boolean_1))) then 
            sessionDelete_req_V_s_blk_n <= sessionDelete_req_V_s_empty_n;
        else 
            sessionDelete_req_V_s_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    sessionDelete_req_V_s_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op16_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op16_read_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            sessionDelete_req_V_s_read <= ap_const_logic_1;
        else 
            sessionDelete_req_V_s_read <= ap_const_logic_0;
        end if; 
    end process;


    sessionInsert_req_V_1_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, sessionInsert_req_V_1_empty_n, tmp_nbreadreq_fu_72_p8, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (tmp_nbreadreq_fu_72_p8 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sessionInsert_req_V_1_blk_n <= sessionInsert_req_V_1_empty_n;
        else 
            sessionInsert_req_V_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    sessionInsert_req_V_1_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_72_p8, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_nbreadreq_fu_72_p8 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            sessionInsert_req_V_1_read <= ap_const_logic_1;
        else 
            sessionInsert_req_V_1_read <= ap_const_logic_0;
        end if; 
    end process;


    sessionInsert_req_V_3_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, sessionInsert_req_V_3_empty_n, tmp_nbreadreq_fu_72_p8, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (tmp_nbreadreq_fu_72_p8 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sessionInsert_req_V_3_blk_n <= sessionInsert_req_V_3_empty_n;
        else 
            sessionInsert_req_V_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    sessionInsert_req_V_3_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_72_p8, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_nbreadreq_fu_72_p8 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            sessionInsert_req_V_3_read <= ap_const_logic_1;
        else 
            sessionInsert_req_V_3_read <= ap_const_logic_0;
        end if; 
    end process;


    sessionInsert_req_V_4_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, sessionInsert_req_V_4_empty_n, tmp_nbreadreq_fu_72_p8, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (tmp_nbreadreq_fu_72_p8 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sessionInsert_req_V_4_blk_n <= sessionInsert_req_V_4_empty_n;
        else 
            sessionInsert_req_V_4_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    sessionInsert_req_V_4_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_72_p8, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_nbreadreq_fu_72_p8 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            sessionInsert_req_V_4_read <= ap_const_logic_1;
        else 
            sessionInsert_req_V_4_read <= ap_const_logic_0;
        end if; 
    end process;


    sessionInsert_req_V_5_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, sessionInsert_req_V_5_empty_n, tmp_nbreadreq_fu_72_p8, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (tmp_nbreadreq_fu_72_p8 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sessionInsert_req_V_5_blk_n <= sessionInsert_req_V_5_empty_n;
        else 
            sessionInsert_req_V_5_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    sessionInsert_req_V_5_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_72_p8, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_nbreadreq_fu_72_p8 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            sessionInsert_req_V_5_read <= ap_const_logic_1;
        else 
            sessionInsert_req_V_5_read <= ap_const_logic_0;
        end if; 
    end process;


    sessionInsert_req_V_6_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, sessionInsert_req_V_6_empty_n, tmp_nbreadreq_fu_72_p8, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (tmp_nbreadreq_fu_72_p8 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sessionInsert_req_V_6_blk_n <= sessionInsert_req_V_6_empty_n;
        else 
            sessionInsert_req_V_6_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    sessionInsert_req_V_6_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_72_p8, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_nbreadreq_fu_72_p8 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            sessionInsert_req_V_6_read <= ap_const_logic_1;
        else 
            sessionInsert_req_V_6_read <= ap_const_logic_0;
        end if; 
    end process;


    sessionInsert_req_V_s_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, sessionInsert_req_V_s_empty_n, tmp_nbreadreq_fu_72_p8, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (tmp_nbreadreq_fu_72_p8 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sessionInsert_req_V_s_blk_n <= sessionInsert_req_V_s_empty_n;
        else 
            sessionInsert_req_V_s_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    sessionInsert_req_V_s_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_72_p8, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_nbreadreq_fu_72_p8 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            sessionInsert_req_V_s_read <= ap_const_logic_1;
        else 
            sessionInsert_req_V_s_read <= ap_const_logic_0;
        end if; 
    end process;

    sessionUpdate_req_V_1_ack_in <= sessionUpdate_req_V_1_state(1);
    sessionUpdate_req_V_1_ack_out <= sessionUpdate_req_V_TREADY;

    sessionUpdate_req_V_1_data_in_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_reg_273_pp0_iter1_reg, ap_predicate_op26_write_state3, sext_ln163_1_fu_223_p1, sext_ln163_fu_238_p1, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((tmp_reg_273_pp0_iter1_reg = ap_const_lv1_1)) then 
                sessionUpdate_req_V_1_data_in <= sext_ln163_fu_238_p1;
            elsif ((ap_predicate_op26_write_state3 = ap_const_boolean_1)) then 
                sessionUpdate_req_V_1_data_in <= sext_ln163_1_fu_223_p1;
            else 
                sessionUpdate_req_V_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            sessionUpdate_req_V_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sessionUpdate_req_V_1_data_out_assign_proc : process(sessionUpdate_req_V_1_payload_A, sessionUpdate_req_V_1_payload_B, sessionUpdate_req_V_1_sel)
    begin
        if ((sessionUpdate_req_V_1_sel = ap_const_logic_1)) then 
            sessionUpdate_req_V_1_data_out <= sessionUpdate_req_V_1_payload_B;
        else 
            sessionUpdate_req_V_1_data_out <= sessionUpdate_req_V_1_payload_A;
        end if; 
    end process;

    sessionUpdate_req_V_1_load_A <= (sessionUpdate_req_V_1_state_cmp_full and not(sessionUpdate_req_V_1_sel_wr));
    sessionUpdate_req_V_1_load_B <= (sessionUpdate_req_V_1_state_cmp_full and sessionUpdate_req_V_1_sel_wr);
    sessionUpdate_req_V_1_sel <= sessionUpdate_req_V_1_sel_rd;
    sessionUpdate_req_V_1_state_cmp_full <= '0' when (sessionUpdate_req_V_1_state = ap_const_lv2_1) else '1';

    sessionUpdate_req_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_reg_273_pp0_iter1_reg, ap_predicate_op26_write_state3, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_reg_273_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op26_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            sessionUpdate_req_V_1_vld_in <= ap_const_logic_1;
        else 
            sessionUpdate_req_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    sessionUpdate_req_V_1_vld_out <= sessionUpdate_req_V_1_state(0);
    sessionUpdate_req_V_TDATA <= sessionUpdate_req_V_1_data_out;

    sessionUpdate_req_V_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, tmp_reg_273_pp0_iter1_reg, ap_predicate_op26_write_state3, sessionUpdate_req_V_1_state, tmp_reg_273_pp0_iter2_reg, ap_predicate_op47_write_state4, ap_block_pp0_stage0)
    begin
        if ((((tmp_reg_273_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_predicate_op47_write_state4 = ap_const_boolean_1)) or ((tmp_reg_273_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op26_write_state3 = ap_const_boolean_1)))) then 
            sessionUpdate_req_V_TDATA_blk_n <= sessionUpdate_req_V_1_state(1);
        else 
            sessionUpdate_req_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    sessionUpdate_req_V_TVALID <= sessionUpdate_req_V_1_state(0);
        sext_ln163_1_fu_223_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_11_fu_213_p7),88));

        sext_ln163_fu_238_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp13_fu_228_p7),88));


    slc_sessionIdFinFifo_1_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, slc_sessionIdFinFifo_1_full_n, ap_predicate_op27_write_state3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op27_write_state3 = ap_const_boolean_1))) then 
            slc_sessionIdFinFifo_1_blk_n <= slc_sessionIdFinFifo_1_full_n;
        else 
            slc_sessionIdFinFifo_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    slc_sessionIdFinFifo_1_din <= tmp_V_reg_341;

    slc_sessionIdFinFifo_1_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op27_write_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op27_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            slc_sessionIdFinFifo_1_write <= ap_const_logic_1;
        else 
            slc_sessionIdFinFifo_1_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp13_fu_228_p7 <= (((((tmp_source_reg_302_pp0_iter1_reg & tmp_value_V_reg_297_pp0_iter1_reg) & tmp_key_theirPort_V_reg_292_pp0_iter1_reg) & tmp_key_myPort_V_reg_287_pp0_iter1_reg) & tmp_key_theirIp_V_reg_282_pp0_iter1_reg) & tmp_op_reg_277_pp0_iter1_reg);
    tmp_11_fu_213_p7 <= (((((tmp_source_1_reg_336 & tmp_value_V_1_reg_331) & tmp_key_theirPort_V_1_reg_326) & tmp_key_myPort_V_1_reg_321) & tmp_key_theirIp_V_1_reg_316) & tmp_op_1_reg_311);
    tmp_1_nbreadreq_fu_106_p8 <= (0=>(sessionDelete_req_V_s_empty_n and sessionDelete_req_V_6_empty_n and sessionDelete_req_V_5_empty_n and sessionDelete_req_V_4_empty_n and sessionDelete_req_V_3_empty_n and sessionDelete_req_V_1_empty_n), others=>'-');
    tmp_V_fu_209_p1 <= sessionDelete_req_V_s_dout(14 - 1 downto 0);
    tmp_nbreadreq_fu_72_p8 <= (0=>(sessionInsert_req_V_s_empty_n and sessionInsert_req_V_6_empty_n and sessionInsert_req_V_5_empty_n and sessionInsert_req_V_4_empty_n and sessionInsert_req_V_3_empty_n and sessionInsert_req_V_1_empty_n), others=>'-');
end behav;
