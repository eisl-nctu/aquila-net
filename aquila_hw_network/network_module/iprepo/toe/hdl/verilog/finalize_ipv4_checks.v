// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module finalize_ipv4_checks (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        txEng_subChecksumsFi_1_dout,
        txEng_subChecksumsFi_1_empty_n,
        txEng_subChecksumsFi_1_read,
        txEng_tcpChecksumFif_1_din,
        txEng_tcpChecksumFif_1_full_n,
        txEng_tcpChecksumFif_1_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [67:0] txEng_subChecksumsFi_1_dout;
input   txEng_subChecksumsFi_1_empty_n;
output   txEng_subChecksumsFi_1_read;
output  [15:0] txEng_tcpChecksumFif_1_din;
input   txEng_tcpChecksumFif_1_full_n;
output   txEng_tcpChecksumFif_1_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg txEng_subChecksumsFi_1_read;
reg txEng_tcpChecksumFif_1_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire   [0:0] tmp_nbreadreq_fu_54_p3;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] tmp_reg_241;
reg   [0:0] tmp_reg_241_pp0_iter1_reg;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg    txEng_subChecksumsFi_1_blk_n;
wire    ap_block_pp0_stage0;
reg    txEng_tcpChecksumFif_1_blk_n;
reg   [15:0] tmp_s_reg_245;
wire   [15:0] trunc_ln700_fu_119_p1;
reg   [15:0] trunc_ln700_reg_250;
reg   [15:0] tmp_6_reg_255;
reg   [15:0] tmp_7_reg_260;
reg   [0:0] tmp_259_reg_265;
reg   [0:0] tmp_260_reg_270;
wire   [15:0] add_ln769_fu_229_p2;
reg   [15:0] add_ln769_reg_275;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage0_01001;
wire   [16:0] trunc_ln321_fu_75_p1;
wire   [16:0] tmp_142_i_fu_89_p4;
wire   [16:0] tmp_141_i_fu_79_p4;
wire   [16:0] tmp_143_i_fu_99_p4;
wire   [16:0] add_ln700_fu_123_p2;
wire   [16:0] add_ln700_13_fu_149_p2;
wire   [15:0] zext_ln214_18_fu_171_p1;
wire   [15:0] add_ln214_fu_174_p2;
wire   [15:0] add_ln214_26_fu_179_p2;
wire   [15:0] zext_ln214_19_fu_188_p1;
wire   [15:0] add_ln214_27_fu_191_p2;
wire   [15:0] add_ln214_28_fu_196_p2;
wire   [16:0] zext_ln214_9_fu_201_p1;
wire   [16:0] zext_ln214_fu_184_p1;
wire   [16:0] add_ln700_14_fu_211_p2;
wire   [0:0] tmp_261_fu_217_p3;
wire   [15:0] zext_ln214_20_fu_225_p1;
wire   [15:0] add_ln700_15_fu_205_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_241 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln769_reg_275 <= add_ln769_fu_229_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_54_p3 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_259_reg_265 <= add_ln700_fu_123_p2[32'd16];
        tmp_260_reg_270 <= add_ln700_13_fu_149_p2[32'd16];
        tmp_6_reg_255 <= {{txEng_subChecksumsFi_1_dout[66:51]}};
        tmp_7_reg_260 <= {{txEng_subChecksumsFi_1_dout[32:17]}};
        tmp_s_reg_245 <= {{txEng_subChecksumsFi_1_dout[49:34]}};
        trunc_ln700_reg_250 <= trunc_ln700_fu_119_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_reg_241 <= tmp_nbreadreq_fu_54_p3;
        tmp_reg_241_pp0_iter1_reg <= tmp_reg_241;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (tmp_nbreadreq_fu_54_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        txEng_subChecksumsFi_1_blk_n = txEng_subChecksumsFi_1_empty_n;
    end else begin
        txEng_subChecksumsFi_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_54_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        txEng_subChecksumsFi_1_read = 1'b1;
    end else begin
        txEng_subChecksumsFi_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (tmp_reg_241_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        txEng_tcpChecksumFif_1_blk_n = txEng_tcpChecksumFif_1_full_n;
    end else begin
        txEng_tcpChecksumFif_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_241_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        txEng_tcpChecksumFif_1_write = 1'b1;
    end else begin
        txEng_tcpChecksumFif_1_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln214_26_fu_179_p2 = (trunc_ln700_reg_250 + add_ln214_fu_174_p2);

assign add_ln214_27_fu_191_p2 = (zext_ln214_19_fu_188_p1 + tmp_6_reg_255);

assign add_ln214_28_fu_196_p2 = (tmp_7_reg_260 + add_ln214_27_fu_191_p2);

assign add_ln214_fu_174_p2 = (zext_ln214_18_fu_171_p1 + tmp_s_reg_245);

assign add_ln700_13_fu_149_p2 = (tmp_141_i_fu_79_p4 + tmp_143_i_fu_99_p4);

assign add_ln700_14_fu_211_p2 = (zext_ln214_9_fu_201_p1 + zext_ln214_fu_184_p1);

assign add_ln700_15_fu_205_p2 = (add_ln214_26_fu_179_p2 + add_ln214_28_fu_196_p2);

assign add_ln700_fu_123_p2 = (trunc_ln321_fu_75_p1 + tmp_142_i_fu_89_p4);

assign add_ln769_fu_229_p2 = (zext_ln214_20_fu_225_p1 + add_ln700_15_fu_205_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((tmp_reg_241_pp0_iter1_reg == 1'd1) & (txEng_tcpChecksumFif_1_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_54_p3 == 1'd1) & (txEng_subChecksumsFi_1_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((tmp_reg_241_pp0_iter1_reg == 1'd1) & (txEng_tcpChecksumFif_1_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_54_p3 == 1'd1) & (txEng_subChecksumsFi_1_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((tmp_reg_241_pp0_iter1_reg == 1'd1) & (txEng_tcpChecksumFif_1_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_54_p3 == 1'd1) & (txEng_subChecksumsFi_1_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_54_p3 == 1'd1) & (txEng_subChecksumsFi_1_empty_n == 1'b0)));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((tmp_reg_241_pp0_iter1_reg == 1'd1) & (txEng_tcpChecksumFif_1_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign tmp_141_i_fu_79_p4 = {{txEng_subChecksumsFi_1_dout[33:17]}};

assign tmp_142_i_fu_89_p4 = {{txEng_subChecksumsFi_1_dout[50:34]}};

assign tmp_143_i_fu_99_p4 = {{txEng_subChecksumsFi_1_dout[67:51]}};

assign tmp_261_fu_217_p3 = add_ln700_14_fu_211_p2[32'd16];

assign tmp_nbreadreq_fu_54_p3 = txEng_subChecksumsFi_1_empty_n;

assign trunc_ln321_fu_75_p1 = txEng_subChecksumsFi_1_dout[16:0];

assign trunc_ln700_fu_119_p1 = txEng_subChecksumsFi_1_dout[15:0];

assign txEng_tcpChecksumFif_1_din = (16'd65535 ^ add_ln769_reg_275);

assign zext_ln214_18_fu_171_p1 = tmp_259_reg_265;

assign zext_ln214_19_fu_188_p1 = tmp_260_reg_270;

assign zext_ln214_20_fu_225_p1 = tmp_261_fu_217_p3;

assign zext_ln214_9_fu_201_p1 = add_ln214_28_fu_196_p2;

assign zext_ln214_fu_184_p1 = add_ln214_26_fu_179_p2;

endmodule //finalize_ipv4_checks
