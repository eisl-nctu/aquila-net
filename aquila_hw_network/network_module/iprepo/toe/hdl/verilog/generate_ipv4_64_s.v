// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module generate_ipv4_64_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        txEng_tcpPkgBuffer6_s_3_dout,
        txEng_tcpPkgBuffer6_s_3_empty_n,
        txEng_tcpPkgBuffer6_s_3_read,
        txEng_ipMetaFifo_V_V_dout,
        txEng_ipMetaFifo_V_V_empty_n,
        txEng_ipMetaFifo_V_V_read,
        txEng_ipTupleFifo_V_dout,
        txEng_ipTupleFifo_V_empty_n,
        txEng_ipTupleFifo_V_read,
        m_axis_tcp_data_TREADY,
        m_axis_tcp_data_TDATA,
        m_axis_tcp_data_TVALID,
        m_axis_tcp_data_TKEEP,
        m_axis_tcp_data_TLAST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;
parameter    ap_const_lv64_0 = 64'd0;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [72:0] txEng_tcpPkgBuffer6_s_3_dout;
input   txEng_tcpPkgBuffer6_s_3_empty_n;
output   txEng_tcpPkgBuffer6_s_3_read;
input  [15:0] txEng_ipMetaFifo_V_V_dout;
input   txEng_ipMetaFifo_V_V_empty_n;
output   txEng_ipMetaFifo_V_V_read;
input  [63:0] txEng_ipTupleFifo_V_dout;
input   txEng_ipTupleFifo_V_empty_n;
output   txEng_ipTupleFifo_V_read;
input   m_axis_tcp_data_TREADY;
output  [63:0] m_axis_tcp_data_TDATA;
output   m_axis_tcp_data_TVALID;
output  [7:0] m_axis_tcp_data_TKEEP;
output  [0:0] m_axis_tcp_data_TLAST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg txEng_tcpPkgBuffer6_s_3_read;
reg txEng_ipMetaFifo_V_V_read;
reg txEng_ipTupleFifo_V_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire   [1:0] gi_state_load_load_fu_263_p1;
wire   [0:0] grp_nbreadreq_fu_174_p3;
reg    ap_predicate_op8_read_state1;
reg    ap_predicate_op14_read_state1;
wire   [0:0] tmp_nbreadreq_fu_188_p3;
wire   [0:0] tmp_248_nbreadreq_fu_196_p3;
reg    ap_predicate_op119_read_state1;
reg    ap_predicate_op120_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    m_axis_tx_data_V_data_V_1_ack_in;
reg   [1:0] gi_state_load_reg_1117;
reg   [0:0] tmp_247_reg_1121;
reg    ap_predicate_op136_write_state2;
reg   [0:0] tmp_246_reg_1135;
reg    ap_predicate_op150_write_state2;
reg    ap_block_state2_io;
wire    m_axis_tx_data_V_data_V_1_ack_out;
reg   [1:0] m_axis_tx_data_V_data_V_1_state;
wire    m_axis_tx_data_V_keep_V_1_ack_out;
reg   [1:0] m_axis_tx_data_V_keep_V_1_state;
wire    m_axis_tx_data_V_last_V_1_ack_out;
reg   [1:0] m_axis_tx_data_V_last_V_1_state;
reg    ap_block_state3_pp0_stage0_iter2;
reg   [1:0] gi_state_load_reg_1117_pp0_iter1_reg;
reg   [0:0] tmp_247_reg_1121_pp0_iter1_reg;
reg    ap_predicate_op167_write_state3;
reg   [0:0] tmp_246_reg_1135_pp0_iter1_reg;
reg    ap_predicate_op171_write_state3;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_11001;
reg   [63:0] m_axis_tx_data_V_data_V_1_data_in;
reg   [63:0] m_axis_tx_data_V_data_V_1_data_out;
reg    m_axis_tx_data_V_data_V_1_vld_in;
wire    m_axis_tx_data_V_data_V_1_vld_out;
reg   [63:0] m_axis_tx_data_V_data_V_1_payload_A;
reg   [63:0] m_axis_tx_data_V_data_V_1_payload_B;
reg    m_axis_tx_data_V_data_V_1_sel_rd;
reg    m_axis_tx_data_V_data_V_1_sel_wr;
wire    m_axis_tx_data_V_data_V_1_sel;
wire    m_axis_tx_data_V_data_V_1_load_A;
wire    m_axis_tx_data_V_data_V_1_load_B;
wire    m_axis_tx_data_V_data_V_1_state_cmp_full;
reg   [7:0] m_axis_tx_data_V_keep_V_1_data_in;
reg   [7:0] m_axis_tx_data_V_keep_V_1_data_out;
reg    m_axis_tx_data_V_keep_V_1_vld_in;
wire    m_axis_tx_data_V_keep_V_1_vld_out;
wire    m_axis_tx_data_V_keep_V_1_ack_in;
reg   [7:0] m_axis_tx_data_V_keep_V_1_payload_A;
reg   [7:0] m_axis_tx_data_V_keep_V_1_payload_B;
reg    m_axis_tx_data_V_keep_V_1_sel_rd;
reg    m_axis_tx_data_V_keep_V_1_sel_wr;
wire    m_axis_tx_data_V_keep_V_1_sel;
wire    m_axis_tx_data_V_keep_V_1_load_A;
wire    m_axis_tx_data_V_keep_V_1_load_B;
wire    m_axis_tx_data_V_keep_V_1_state_cmp_full;
reg   [0:0] m_axis_tx_data_V_last_V_1_data_in;
reg   [0:0] m_axis_tx_data_V_last_V_1_data_out;
reg    m_axis_tx_data_V_last_V_1_vld_in;
wire    m_axis_tx_data_V_last_V_1_vld_out;
wire    m_axis_tx_data_V_last_V_1_ack_in;
reg   [0:0] m_axis_tx_data_V_last_V_1_payload_A;
reg   [0:0] m_axis_tx_data_V_last_V_1_payload_B;
reg    m_axis_tx_data_V_last_V_1_sel_rd;
reg    m_axis_tx_data_V_last_V_1_sel_wr;
wire    m_axis_tx_data_V_last_V_1_sel;
wire    m_axis_tx_data_V_last_V_1_load_A;
wire    m_axis_tx_data_V_last_V_1_load_B;
wire    m_axis_tx_data_V_last_V_1_state_cmp_full;
reg   [1:0] gi_state;
reg   [15:0] header_idx_7;
reg   [159:0] header_header_V_7;
reg    m_axis_tcp_data_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    txEng_ipMetaFifo_V_V_blk_n;
reg    txEng_ipTupleFifo_V_blk_n;
reg    txEng_tcpPkgBuffer6_s_3_blk_n;
reg   [7:0] reg_258;
wire   [63:0] tmp_data_V_18_fu_272_p1;
reg   [63:0] tmp_data_V_18_reg_1125;
wire   [0:0] grp_fu_241_p3;
reg   [0:0] tmp_last_V_13_reg_1130;
wire   [63:0] tmp_data_V_fu_282_p1;
reg   [63:0] tmp_data_V_reg_1139;
reg   [0:0] tmp_last_V_reg_1145;
wire   [0:0] icmp_ln76_2_fu_312_p2;
reg   [0:0] icmp_ln76_2_reg_1150;
wire   [7:0] sub_ln647_33_fu_394_p2;
reg   [7:0] sub_ln647_33_reg_1155;
wire   [159:0] lshr_ln647_29_fu_404_p2;
reg   [159:0] lshr_ln647_29_reg_1160;
wire   [7:0] sub_ln647_36_fu_482_p2;
reg   [7:0] sub_ln647_36_reg_1165;
wire   [159:0] lshr_ln647_31_fu_492_p2;
reg   [159:0] lshr_ln647_31_reg_1170;
wire   [0:0] and_ln82_2_fu_504_p2;
reg   [0:0] and_ln82_2_reg_1175;
wire   [7:0] sub_ln647_26_fu_660_p2;
reg   [7:0] sub_ln647_26_reg_1180;
wire   [159:0] lshr_ln647_fu_670_p2;
reg   [159:0] lshr_ln647_reg_1185;
wire   [7:0] sub_ln647_29_fu_796_p2;
reg   [7:0] sub_ln647_29_reg_1190;
wire   [159:0] lshr_ln647_27_fu_806_p2;
reg   [159:0] lshr_ln647_27_reg_1195;
wire   [0:0] and_ln82_fu_818_p2;
reg   [0:0] and_ln82_reg_1200;
wire   [0:0] or_ln887_fu_880_p2;
wire   [63:0] tmp_data_V_17_fu_1053_p3;
wire   [63:0] sendWord_data_V_fu_1109_p3;
reg    ap_block_pp0_stage0_subdone;
wire   [1:0] select_ln875_fu_538_p3;
wire   [15:0] select_ln82_5_fu_518_p3;
wire   [15:0] select_ln82_fu_832_p3;
wire   [159:0] p_Result_s_fu_976_p5;
reg    ap_block_pp0_stage0_01001;
wire   [21:0] Lo_assign_s_fu_294_p3;
wire   [22:0] zext_ln76_2_fu_302_p1;
wire   [22:0] add_ln76_2_fu_306_p2;
wire   [21:0] or_ln78_2_fu_318_p2;
wire   [1:0] trunc_ln76_6_fu_290_p1;
wire   [7:0] tmp_250_fu_330_p3;
wire   [7:0] trunc_ln647_9_fu_338_p1;
wire   [0:0] icmp_ln647_6_fu_324_p2;
wire   [7:0] sub_ln647_30_fu_352_p2;
wire   [7:0] sub_ln647_32_fu_364_p2;
reg   [159:0] tmp_251_fu_342_p4;
wire   [7:0] sub_ln647_31_fu_358_p2;
wire   [7:0] select_ln647_22_fu_370_p3;
wire   [7:0] select_ln647_24_fu_386_p3;
wire   [159:0] select_ln647_23_fu_378_p3;
wire   [159:0] zext_ln647_33_fu_400_p1;
wire   [1:0] trunc_ln76_5_fu_286_p1;
wire   [7:0] tmp_252_fu_422_p3;
wire   [0:0] icmp_ln647_7_fu_416_p2;
wire   [7:0] add_ln647_3_fu_440_p2;
wire   [7:0] sub_ln647_35_fu_452_p2;
reg   [159:0] tmp_253_fu_430_p4;
wire   [7:0] sub_ln647_34_fu_446_p2;
wire   [7:0] select_ln647_25_fu_458_p3;
wire   [7:0] select_ln647_27_fu_474_p3;
wire   [159:0] select_ln647_26_fu_466_p3;
wire   [159:0] zext_ln647_35_fu_488_p1;
wire   [0:0] icmp_ln82_2_fu_410_p2;
wire   [0:0] xor_ln76_2_fu_498_p2;
wire   [15:0] grp_fu_253_p2;
wire   [15:0] select_ln76_3_fu_510_p3;
wire   [0:0] xor_ln875_fu_532_p2;
wire   [21:0] Lo_assign_fu_560_p3;
wire   [22:0] zext_ln76_fu_568_p1;
wire   [22:0] add_ln76_fu_572_p2;
wire   [21:0] or_ln78_fu_584_p2;
wire   [1:0] trunc_ln76_4_fu_556_p1;
wire   [7:0] tmp_239_fu_596_p3;
wire   [7:0] trunc_ln647_fu_604_p1;
wire   [0:0] icmp_ln647_fu_590_p2;
wire   [7:0] sub_ln647_fu_618_p2;
wire   [7:0] sub_ln647_25_fu_630_p2;
reg   [159:0] tmp_240_fu_608_p4;
wire   [7:0] sub_ln647_24_fu_624_p2;
wire   [7:0] select_ln647_fu_636_p3;
wire   [7:0] select_ln647_18_fu_652_p3;
wire   [159:0] select_ln647_17_fu_644_p3;
wire   [159:0] zext_ln647_fu_666_p1;
wire   [21:0] shl_ln_fu_676_p3;
wire   [22:0] zext_ln80_fu_684_p1;
wire   [22:0] sub_ln80_fu_688_p2;
wire   [22:0] sub_ln80_3_fu_702_p2;
wire   [7:0] trunc_ln80_3_fu_708_p4;
wire   [1:0] trunc_ln76_fu_552_p1;
wire   [7:0] tmp_242_fu_736_p3;
wire   [0:0] icmp_ln647_5_fu_730_p2;
wire   [7:0] add_ln647_fu_754_p2;
wire   [7:0] sub_ln647_28_fu_766_p2;
reg   [159:0] tmp_243_fu_744_p4;
wire   [7:0] sub_ln647_27_fu_760_p2;
wire   [7:0] select_ln647_19_fu_772_p3;
wire   [7:0] select_ln647_21_fu_788_p3;
wire   [159:0] select_ln647_20_fu_780_p3;
wire   [159:0] zext_ln647_31_fu_802_p1;
wire   [0:0] icmp_ln76_fu_578_p2;
wire   [0:0] icmp_ln82_fu_724_p2;
wire   [0:0] xor_ln76_fu_812_p2;
wire   [15:0] select_ln76_fu_824_p3;
wire   [7:0] sub_ln80_4_fu_718_p2;
wire   [0:0] tmp_241_fu_694_p3;
wire   [4:0] tmp_244_fu_846_p4;
wire   [4:0] tmp_245_fu_856_p4;
wire   [4:0] select_ln80_fu_866_p3;
wire   [0:0] icmp_ln887_fu_874_p2;
wire   [15:0] length_V_1_fu_912_p2;
wire   [7:0] trunc_ln647_10_fu_928_p1;
wire   [7:0] p_Result_126_i_i_i_fu_918_p4;
wire   [15:0] agg_result_V_0_1_i_i_fu_932_p3;
wire   [159:0] p_Result_95_fu_940_p5;
wire   [31:0] tmp_dstIp_V_fu_896_p4;
wire   [159:0] p_Result_96_fu_952_p5;
wire   [31:0] tmp_srcIp_V_fu_892_p1;
wire   [159:0] p_Result_97_fu_964_p5;
wire   [159:0] zext_ln647_34_fu_1000_p1;
wire   [159:0] lshr_ln647_30_fu_1003_p2;
wire   [159:0] p_Result_100_fu_1009_p2;
wire   [159:0] zext_ln647_36_fu_1018_p1;
wire   [159:0] lshr_ln647_32_fu_1021_p2;
wire   [159:0] p_Result_101_fu_1027_p2;
wire   [31:0] trunc_ln215_1_fu_1032_p1;
wire   [63:0] trunc_ln364_1_fu_1014_p1;
wire   [63:0] p_Result_91_fu_1036_p5;
wire   [63:0] select_ln76_4_fu_1047_p3;
wire   [159:0] zext_ln647_30_fu_1061_p1;
wire   [159:0] lshr_ln647_26_fu_1064_p2;
wire   [159:0] p_Result_98_fu_1070_p2;
wire   [159:0] zext_ln647_32_fu_1079_p1;
wire   [159:0] lshr_ln647_28_fu_1082_p2;
wire   [159:0] p_Result_99_fu_1088_p2;
wire   [31:0] trunc_ln215_fu_1093_p1;
wire   [63:0] p_Result_88_fu_1097_p5;
wire   [63:0] trunc_ln364_fu_1075_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_443;
reg    ap_condition_70;
reg    ap_condition_178;
reg    ap_condition_483;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 m_axis_tx_data_V_data_V_1_state = 2'd0;
#0 m_axis_tx_data_V_keep_V_1_state = 2'd0;
#0 m_axis_tx_data_V_last_V_1_state = 2'd0;
#0 m_axis_tx_data_V_data_V_1_sel_rd = 1'b0;
#0 m_axis_tx_data_V_data_V_1_sel_wr = 1'b0;
#0 m_axis_tx_data_V_keep_V_1_sel_rd = 1'b0;
#0 m_axis_tx_data_V_keep_V_1_sel_wr = 1'b0;
#0 m_axis_tx_data_V_last_V_1_sel_rd = 1'b0;
#0 m_axis_tx_data_V_last_V_1_sel_wr = 1'b0;
#0 gi_state = 2'd0;
#0 header_idx_7 = 16'd0;
#0 header_header_V_7 = 160'd1180591620717411303493;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        m_axis_tx_data_V_data_V_1_sel_rd <= 1'b0;
    end else begin
        if (((m_axis_tx_data_V_data_V_1_vld_out == 1'b1) & (m_axis_tx_data_V_data_V_1_ack_out == 1'b1))) begin
            m_axis_tx_data_V_data_V_1_sel_rd <= ~m_axis_tx_data_V_data_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        m_axis_tx_data_V_data_V_1_sel_wr <= 1'b0;
    end else begin
        if (((m_axis_tx_data_V_data_V_1_ack_in == 1'b1) & (m_axis_tx_data_V_data_V_1_vld_in == 1'b1))) begin
            m_axis_tx_data_V_data_V_1_sel_wr <= ~m_axis_tx_data_V_data_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        m_axis_tx_data_V_data_V_1_state <= 2'd0;
    end else begin
        if ((((m_axis_tx_data_V_data_V_1_state == 2'd3) & (m_axis_tx_data_V_data_V_1_vld_in == 1'b0) & (m_axis_tx_data_V_data_V_1_ack_out == 1'b1)) | ((m_axis_tx_data_V_data_V_1_state == 2'd2) & (m_axis_tx_data_V_data_V_1_vld_in == 1'b0)))) begin
            m_axis_tx_data_V_data_V_1_state <= 2'd2;
        end else if ((((m_axis_tcp_data_TREADY == 1'b0) & (m_axis_tx_data_V_data_V_1_state == 2'd1)) | ((m_axis_tx_data_V_data_V_1_state == 2'd3) & (m_axis_tcp_data_TREADY == 1'b0) & (m_axis_tx_data_V_data_V_1_vld_in == 1'b1)))) begin
            m_axis_tx_data_V_data_V_1_state <= 2'd1;
        end else if ((((m_axis_tx_data_V_data_V_1_ack_out == 1'b1) & (m_axis_tx_data_V_data_V_1_state == 2'd1)) | (~((m_axis_tx_data_V_data_V_1_vld_in == 1'b0) & (m_axis_tx_data_V_data_V_1_ack_out == 1'b1)) & ~((m_axis_tcp_data_TREADY == 1'b0) & (m_axis_tx_data_V_data_V_1_vld_in == 1'b1)) & (m_axis_tx_data_V_data_V_1_state == 2'd3)) | ((m_axis_tx_data_V_data_V_1_state == 2'd2) & (m_axis_tx_data_V_data_V_1_vld_in == 1'b1)))) begin
            m_axis_tx_data_V_data_V_1_state <= 2'd3;
        end else begin
            m_axis_tx_data_V_data_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        m_axis_tx_data_V_keep_V_1_sel_rd <= 1'b0;
    end else begin
        if (((m_axis_tx_data_V_keep_V_1_vld_out == 1'b1) & (m_axis_tx_data_V_keep_V_1_ack_out == 1'b1))) begin
            m_axis_tx_data_V_keep_V_1_sel_rd <= ~m_axis_tx_data_V_keep_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        m_axis_tx_data_V_keep_V_1_sel_wr <= 1'b0;
    end else begin
        if (((m_axis_tx_data_V_keep_V_1_ack_in == 1'b1) & (m_axis_tx_data_V_keep_V_1_vld_in == 1'b1))) begin
            m_axis_tx_data_V_keep_V_1_sel_wr <= ~m_axis_tx_data_V_keep_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        m_axis_tx_data_V_keep_V_1_state <= 2'd0;
    end else begin
        if ((((m_axis_tx_data_V_keep_V_1_state == 2'd3) & (m_axis_tx_data_V_keep_V_1_vld_in == 1'b0) & (m_axis_tx_data_V_keep_V_1_ack_out == 1'b1)) | ((m_axis_tx_data_V_keep_V_1_state == 2'd2) & (m_axis_tx_data_V_keep_V_1_vld_in == 1'b0)))) begin
            m_axis_tx_data_V_keep_V_1_state <= 2'd2;
        end else if ((((m_axis_tcp_data_TREADY == 1'b0) & (m_axis_tx_data_V_keep_V_1_state == 2'd1)) | ((m_axis_tx_data_V_keep_V_1_state == 2'd3) & (m_axis_tcp_data_TREADY == 1'b0) & (m_axis_tx_data_V_keep_V_1_vld_in == 1'b1)))) begin
            m_axis_tx_data_V_keep_V_1_state <= 2'd1;
        end else if ((((m_axis_tx_data_V_keep_V_1_ack_out == 1'b1) & (m_axis_tx_data_V_keep_V_1_state == 2'd1)) | (~((m_axis_tx_data_V_keep_V_1_vld_in == 1'b0) & (m_axis_tx_data_V_keep_V_1_ack_out == 1'b1)) & ~((m_axis_tcp_data_TREADY == 1'b0) & (m_axis_tx_data_V_keep_V_1_vld_in == 1'b1)) & (m_axis_tx_data_V_keep_V_1_state == 2'd3)) | ((m_axis_tx_data_V_keep_V_1_state == 2'd2) & (m_axis_tx_data_V_keep_V_1_vld_in == 1'b1)))) begin
            m_axis_tx_data_V_keep_V_1_state <= 2'd3;
        end else begin
            m_axis_tx_data_V_keep_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        m_axis_tx_data_V_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((m_axis_tx_data_V_last_V_1_vld_out == 1'b1) & (m_axis_tx_data_V_last_V_1_ack_out == 1'b1))) begin
            m_axis_tx_data_V_last_V_1_sel_rd <= ~m_axis_tx_data_V_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        m_axis_tx_data_V_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((m_axis_tx_data_V_last_V_1_ack_in == 1'b1) & (m_axis_tx_data_V_last_V_1_vld_in == 1'b1))) begin
            m_axis_tx_data_V_last_V_1_sel_wr <= ~m_axis_tx_data_V_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        m_axis_tx_data_V_last_V_1_state <= 2'd0;
    end else begin
        if ((((m_axis_tx_data_V_last_V_1_state == 2'd3) & (m_axis_tx_data_V_last_V_1_vld_in == 1'b0) & (m_axis_tx_data_V_last_V_1_ack_out == 1'b1)) | ((m_axis_tx_data_V_last_V_1_state == 2'd2) & (m_axis_tx_data_V_last_V_1_vld_in == 1'b0)))) begin
            m_axis_tx_data_V_last_V_1_state <= 2'd2;
        end else if ((((m_axis_tcp_data_TREADY == 1'b0) & (m_axis_tx_data_V_last_V_1_state == 2'd1)) | ((m_axis_tx_data_V_last_V_1_state == 2'd3) & (m_axis_tcp_data_TREADY == 1'b0) & (m_axis_tx_data_V_last_V_1_vld_in == 1'b1)))) begin
            m_axis_tx_data_V_last_V_1_state <= 2'd1;
        end else if ((((m_axis_tx_data_V_last_V_1_ack_out == 1'b1) & (m_axis_tx_data_V_last_V_1_state == 2'd1)) | (~((m_axis_tx_data_V_last_V_1_vld_in == 1'b0) & (m_axis_tx_data_V_last_V_1_ack_out == 1'b1)) & ~((m_axis_tcp_data_TREADY == 1'b0) & (m_axis_tx_data_V_last_V_1_vld_in == 1'b1)) & (m_axis_tx_data_V_last_V_1_state == 2'd3)) | ((m_axis_tx_data_V_last_V_1_state == 2'd2) & (m_axis_tx_data_V_last_V_1_vld_in == 1'b1)))) begin
            m_axis_tx_data_V_last_V_1_state <= 2'd3;
        end else begin
            m_axis_tx_data_V_last_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_178)) begin
        if ((1'b1 == ap_condition_70)) begin
            gi_state <= 2'd1;
        end else if (((or_ln887_fu_880_p2 == 1'd1) & (gi_state_load_load_fu_263_p1 == 2'd1))) begin
            gi_state <= 2'd2;
        end else if (((grp_nbreadreq_fu_174_p3 == 1'd1) & (gi_state == 2'd2))) begin
            gi_state <= select_ln875_fu_538_p3;
        end else if ((1'b1 == ap_condition_443)) begin
            gi_state <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_178)) begin
        if ((1'b1 == ap_condition_70)) begin
            header_idx_7 <= 16'd0;
        end else if ((gi_state_load_load_fu_263_p1 == 2'd1)) begin
            header_idx_7 <= select_ln82_fu_832_p3;
        end else if (((grp_nbreadreq_fu_174_p3 == 1'd1) & (gi_state == 2'd2))) begin
            header_idx_7 <= select_ln82_5_fu_518_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_174_p3 == 1'd1) & (gi_state == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln82_2_reg_1175 <= and_ln82_2_fu_504_p2;
        icmp_ln76_2_reg_1150 <= icmp_ln76_2_fu_312_p2;
        lshr_ln647_29_reg_1160 <= lshr_ln647_29_fu_404_p2;
        lshr_ln647_31_reg_1170 <= lshr_ln647_31_fu_492_p2;
        sub_ln647_33_reg_1155[7 : 1] <= sub_ln647_33_fu_394_p2[7 : 1];
        sub_ln647_36_reg_1165[7 : 1] <= sub_ln647_36_fu_482_p2[7 : 1];
        tmp_data_V_reg_1139 <= tmp_data_V_fu_282_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((gi_state_load_load_fu_263_p1 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln82_reg_1200 <= and_ln82_fu_818_p2;
        lshr_ln647_27_reg_1195 <= lshr_ln647_27_fu_806_p2;
        lshr_ln647_reg_1185 <= lshr_ln647_fu_670_p2;
        sub_ln647_26_reg_1180[7 : 1] <= sub_ln647_26_fu_660_p2[7 : 1];
        sub_ln647_29_reg_1190[7 : 1] <= sub_ln647_29_fu_796_p2[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gi_state_load_reg_1117 <= gi_state;
        gi_state_load_reg_1117_pp0_iter1_reg <= gi_state_load_reg_1117;
        tmp_246_reg_1135_pp0_iter1_reg <= tmp_246_reg_1135;
        tmp_247_reg_1121_pp0_iter1_reg <= tmp_247_reg_1121;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_248_nbreadreq_fu_196_p3 == 1'd1) & (tmp_nbreadreq_fu_188_p3 == 1'd1) & (gi_state == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        header_header_V_7 <= p_Result_s_fu_976_p5;
    end
end

always @ (posedge ap_clk) begin
    if ((m_axis_tx_data_V_data_V_1_load_A == 1'b1)) begin
        m_axis_tx_data_V_data_V_1_payload_A <= m_axis_tx_data_V_data_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((m_axis_tx_data_V_data_V_1_load_B == 1'b1)) begin
        m_axis_tx_data_V_data_V_1_payload_B <= m_axis_tx_data_V_data_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((m_axis_tx_data_V_keep_V_1_load_A == 1'b1)) begin
        m_axis_tx_data_V_keep_V_1_payload_A <= m_axis_tx_data_V_keep_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((m_axis_tx_data_V_keep_V_1_load_B == 1'b1)) begin
        m_axis_tx_data_V_keep_V_1_payload_B <= m_axis_tx_data_V_keep_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((m_axis_tx_data_V_last_V_1_load_A == 1'b1)) begin
        m_axis_tx_data_V_last_V_1_payload_A <= m_axis_tx_data_V_last_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((m_axis_tx_data_V_last_V_1_load_B == 1'b1)) begin
        m_axis_tx_data_V_last_V_1_payload_B <= m_axis_tx_data_V_last_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_nbreadreq_fu_174_p3 == 1'd1) & (gi_state == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((grp_nbreadreq_fu_174_p3 == 1'd1) & (gi_state == 2'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_258 <= {{txEng_tcpPkgBuffer6_s_3_dout[71:64]}};
    end
end

always @ (posedge ap_clk) begin
    if (((gi_state == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_246_reg_1135 <= grp_nbreadreq_fu_174_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((gi_state == 2'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_247_reg_1121 <= grp_nbreadreq_fu_174_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_174_p3 == 1'd1) & (gi_state == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_V_18_reg_1125 <= tmp_data_V_18_fu_272_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_174_p3 == 1'd1) & (gi_state == 2'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_last_V_13_reg_1130 <= txEng_tcpPkgBuffer6_s_3_dout[32'd72];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_174_p3 == 1'd1) & (gi_state == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_last_V_reg_1145 <= txEng_tcpPkgBuffer6_s_3_dout[32'd72];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((gi_state_load_reg_1117 == 2'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op150_write_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op136_write_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (gi_state_load_reg_1117_pp0_iter1_reg == 2'd1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op171_write_state3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op167_write_state3 == 1'b1)))) begin
        m_axis_tcp_data_TDATA_blk_n = m_axis_tx_data_V_data_V_1_state[1'd1];
    end else begin
        m_axis_tcp_data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_483)) begin
        if ((gi_state_load_reg_1117 == 2'd1)) begin
            m_axis_tx_data_V_data_V_1_data_in = sendWord_data_V_fu_1109_p3;
        end else if ((ap_predicate_op150_write_state2 == 1'b1)) begin
            m_axis_tx_data_V_data_V_1_data_in = tmp_data_V_17_fu_1053_p3;
        end else if ((ap_predicate_op136_write_state2 == 1'b1)) begin
            m_axis_tx_data_V_data_V_1_data_in = tmp_data_V_18_reg_1125;
        end else begin
            m_axis_tx_data_V_data_V_1_data_in = 'bx;
        end
    end else begin
        m_axis_tx_data_V_data_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((m_axis_tx_data_V_data_V_1_sel == 1'b1)) begin
        m_axis_tx_data_V_data_V_1_data_out = m_axis_tx_data_V_data_V_1_payload_B;
    end else begin
        m_axis_tx_data_V_data_V_1_data_out = m_axis_tx_data_V_data_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((gi_state_load_reg_1117 == 2'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op150_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op136_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        m_axis_tx_data_V_data_V_1_vld_in = 1'b1;
    end else begin
        m_axis_tx_data_V_data_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((gi_state_load_reg_1117 == 2'd1) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axis_tx_data_V_keep_V_1_data_in = 8'd255;
    end else if ((((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op150_write_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op136_write_state2 == 1'b1)))) begin
        m_axis_tx_data_V_keep_V_1_data_in = reg_258;
    end else begin
        m_axis_tx_data_V_keep_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((m_axis_tx_data_V_keep_V_1_sel == 1'b1)) begin
        m_axis_tx_data_V_keep_V_1_data_out = m_axis_tx_data_V_keep_V_1_payload_B;
    end else begin
        m_axis_tx_data_V_keep_V_1_data_out = m_axis_tx_data_V_keep_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((gi_state_load_reg_1117 == 2'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op150_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op136_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        m_axis_tx_data_V_keep_V_1_vld_in = 1'b1;
    end else begin
        m_axis_tx_data_V_keep_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_483)) begin
        if ((gi_state_load_reg_1117 == 2'd1)) begin
            m_axis_tx_data_V_last_V_1_data_in = 1'd0;
        end else if ((ap_predicate_op150_write_state2 == 1'b1)) begin
            m_axis_tx_data_V_last_V_1_data_in = tmp_last_V_reg_1145;
        end else if ((ap_predicate_op136_write_state2 == 1'b1)) begin
            m_axis_tx_data_V_last_V_1_data_in = tmp_last_V_13_reg_1130;
        end else begin
            m_axis_tx_data_V_last_V_1_data_in = 'bx;
        end
    end else begin
        m_axis_tx_data_V_last_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((m_axis_tx_data_V_last_V_1_sel == 1'b1)) begin
        m_axis_tx_data_V_last_V_1_data_out = m_axis_tx_data_V_last_V_1_payload_B;
    end else begin
        m_axis_tx_data_V_last_V_1_data_out = m_axis_tx_data_V_last_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((gi_state_load_reg_1117 == 2'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op150_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op136_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        m_axis_tx_data_V_last_V_1_vld_in = 1'b1;
    end else begin
        m_axis_tx_data_V_last_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op119_read_state1 == 1'b1))) begin
        txEng_ipMetaFifo_V_V_blk_n = txEng_ipMetaFifo_V_V_empty_n;
    end else begin
        txEng_ipMetaFifo_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op119_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        txEng_ipMetaFifo_V_V_read = 1'b1;
    end else begin
        txEng_ipMetaFifo_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op120_read_state1 == 1'b1))) begin
        txEng_ipTupleFifo_V_blk_n = txEng_ipTupleFifo_V_empty_n;
    end else begin
        txEng_ipTupleFifo_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op120_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        txEng_ipTupleFifo_V_read = 1'b1;
    end else begin
        txEng_ipTupleFifo_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op14_read_state1 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op8_read_state1 == 1'b1)))) begin
        txEng_tcpPkgBuffer6_s_3_blk_n = txEng_tcpPkgBuffer6_s_3_empty_n;
    end else begin
        txEng_tcpPkgBuffer6_s_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op14_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op8_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        txEng_tcpPkgBuffer6_s_3_read = 1'b1;
    end else begin
        txEng_tcpPkgBuffer6_s_3_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Lo_assign_fu_560_p3 = {{header_idx_7}, {6'd0}};

assign Lo_assign_s_fu_294_p3 = {{header_idx_7}, {6'd0}};

assign add_ln647_3_fu_440_p2 = (tmp_252_fu_422_p3 + 8'd97);

assign add_ln647_fu_754_p2 = (tmp_242_fu_736_p3 + 8'd97);

assign add_ln76_2_fu_306_p2 = (zext_ln76_2_fu_302_p1 + 23'd64);

assign add_ln76_fu_572_p2 = (zext_ln76_fu_568_p1 + 23'd64);

assign agg_result_V_0_1_i_i_fu_932_p3 = {{trunc_ln647_10_fu_928_p1}, {p_Result_126_i_i_i_fu_918_p4}};

assign and_ln82_2_fu_504_p2 = (xor_ln76_2_fu_498_p2 & icmp_ln82_2_fu_410_p2);

assign and_ln82_fu_818_p2 = (xor_ln76_fu_812_p2 & icmp_ln82_fu_724_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((txEng_ipTupleFifo_V_empty_n == 1'b0) & (ap_predicate_op120_read_state1 == 1'b1)) | ((txEng_ipMetaFifo_V_V_empty_n == 1'b0) & (ap_predicate_op119_read_state1 == 1'b1)) | ((txEng_tcpPkgBuffer6_s_3_empty_n == 1'b0) & (ap_predicate_op14_read_state1 == 1'b1)) | ((txEng_tcpPkgBuffer6_s_3_empty_n == 1'b0) & (ap_predicate_op8_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((m_axis_tx_data_V_last_V_1_state == 2'd1) | (m_axis_tx_data_V_keep_V_1_state == 2'd1) | (m_axis_tx_data_V_data_V_1_state == 2'd1) | ((m_axis_tx_data_V_last_V_1_state == 2'd3) & (m_axis_tcp_data_TREADY == 1'b0)) | ((m_axis_tx_data_V_keep_V_1_state == 2'd3) & (m_axis_tcp_data_TREADY == 1'b0)) | ((m_axis_tx_data_V_data_V_1_state == 2'd3) & (m_axis_tcp_data_TREADY == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((txEng_ipTupleFifo_V_empty_n == 1'b0) & (ap_predicate_op120_read_state1 == 1'b1)) | ((txEng_ipMetaFifo_V_V_empty_n == 1'b0) & (ap_predicate_op119_read_state1 == 1'b1)) | ((txEng_tcpPkgBuffer6_s_3_empty_n == 1'b0) & (ap_predicate_op14_read_state1 == 1'b1)) | ((txEng_tcpPkgBuffer6_s_3_empty_n == 1'b0) & (ap_predicate_op8_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | (m_axis_tx_data_V_last_V_1_state == 2'd1) | (m_axis_tx_data_V_keep_V_1_state == 2'd1) | (m_axis_tx_data_V_data_V_1_state == 2'd1) | ((m_axis_tx_data_V_last_V_1_state == 2'd3) & (m_axis_tcp_data_TREADY == 1'b0)) | ((m_axis_tx_data_V_keep_V_1_state == 2'd3) & (m_axis_tcp_data_TREADY == 1'b0)) | ((m_axis_tx_data_V_data_V_1_state == 2'd3) & (m_axis_tcp_data_TREADY == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((txEng_ipTupleFifo_V_empty_n == 1'b0) & (ap_predicate_op120_read_state1 == 1'b1)) | ((txEng_ipMetaFifo_V_V_empty_n == 1'b0) & (ap_predicate_op119_read_state1 == 1'b1)) | ((txEng_tcpPkgBuffer6_s_3_empty_n == 1'b0) & (ap_predicate_op14_read_state1 == 1'b1)) | ((txEng_tcpPkgBuffer6_s_3_empty_n == 1'b0) & (ap_predicate_op8_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | (m_axis_tx_data_V_last_V_1_state == 2'd1) | (m_axis_tx_data_V_keep_V_1_state == 2'd1) | (m_axis_tx_data_V_data_V_1_state == 2'd1) | ((m_axis_tx_data_V_last_V_1_state == 2'd3) & (m_axis_tcp_data_TREADY == 1'b0)) | ((m_axis_tx_data_V_keep_V_1_state == 2'd3) & (m_axis_tcp_data_TREADY == 1'b0)) | ((m_axis_tx_data_V_data_V_1_state == 2'd3) & (m_axis_tcp_data_TREADY == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_io)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((txEng_ipTupleFifo_V_empty_n == 1'b0) & (ap_predicate_op120_read_state1 == 1'b1)) | ((txEng_ipMetaFifo_V_V_empty_n == 1'b0) & (ap_predicate_op119_read_state1 == 1'b1)) | ((txEng_tcpPkgBuffer6_s_3_empty_n == 1'b0) & (ap_predicate_op14_read_state1 == 1'b1)) | ((txEng_tcpPkgBuffer6_s_3_empty_n == 1'b0) & (ap_predicate_op8_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_io = (((gi_state_load_reg_1117 == 2'd1) & (m_axis_tx_data_V_data_V_1_ack_in == 1'b0)) | ((m_axis_tx_data_V_data_V_1_ack_in == 1'b0) & (ap_predicate_op150_write_state2 == 1'b1)) | ((m_axis_tx_data_V_data_V_1_ack_in == 1'b0) & (ap_predicate_op136_write_state2 == 1'b1)));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = (((m_axis_tx_data_V_data_V_1_ack_in == 1'b0) & (gi_state_load_reg_1117_pp0_iter1_reg == 2'd1)) | ((m_axis_tx_data_V_data_V_1_ack_in == 1'b0) & (ap_predicate_op171_write_state3 == 1'b1)) | ((m_axis_tx_data_V_data_V_1_ack_in == 1'b0) & (ap_predicate_op167_write_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((m_axis_tx_data_V_last_V_1_state == 2'd1) | (m_axis_tx_data_V_keep_V_1_state == 2'd1) | (m_axis_tx_data_V_data_V_1_state == 2'd1) | ((m_axis_tx_data_V_last_V_1_state == 2'd3) & (m_axis_tcp_data_TREADY == 1'b0)) | ((m_axis_tx_data_V_keep_V_1_state == 2'd3) & (m_axis_tcp_data_TREADY == 1'b0)) | ((m_axis_tx_data_V_data_V_1_state == 2'd3) & (m_axis_tcp_data_TREADY == 1'b0)));
end

always @ (*) begin
    ap_condition_178 = ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_443 = ((grp_fu_241_p3 == 1'd1) & (grp_nbreadreq_fu_174_p3 == 1'd1) & (gi_state == 2'd3));
end

always @ (*) begin
    ap_condition_483 = ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_70 = ((tmp_248_nbreadreq_fu_196_p3 == 1'd1) & (tmp_nbreadreq_fu_188_p3 == 1'd1) & (gi_state == 2'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

always @ (*) begin
    ap_predicate_op119_read_state1 = ((tmp_248_nbreadreq_fu_196_p3 == 1'd1) & (tmp_nbreadreq_fu_188_p3 == 1'd1) & (gi_state == 2'd0));
end

always @ (*) begin
    ap_predicate_op120_read_state1 = ((tmp_248_nbreadreq_fu_196_p3 == 1'd1) & (tmp_nbreadreq_fu_188_p3 == 1'd1) & (gi_state == 2'd0));
end

always @ (*) begin
    ap_predicate_op136_write_state2 = ((tmp_247_reg_1121 == 1'd1) & (gi_state_load_reg_1117 == 2'd3));
end

always @ (*) begin
    ap_predicate_op14_read_state1 = ((grp_nbreadreq_fu_174_p3 == 1'd1) & (gi_state == 2'd2));
end

always @ (*) begin
    ap_predicate_op150_write_state2 = ((gi_state_load_reg_1117 == 2'd2) & (tmp_246_reg_1135 == 1'd1));
end

always @ (*) begin
    ap_predicate_op167_write_state3 = ((tmp_247_reg_1121_pp0_iter1_reg == 1'd1) & (gi_state_load_reg_1117_pp0_iter1_reg == 2'd3));
end

always @ (*) begin
    ap_predicate_op171_write_state3 = ((gi_state_load_reg_1117_pp0_iter1_reg == 2'd2) & (tmp_246_reg_1135_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op8_read_state1 = ((grp_nbreadreq_fu_174_p3 == 1'd1) & (gi_state == 2'd3));
end

assign gi_state_load_load_fu_263_p1 = gi_state;

assign grp_fu_241_p3 = txEng_tcpPkgBuffer6_s_3_dout[32'd72];

assign grp_fu_253_p2 = (header_idx_7 + 16'd1);

assign grp_nbreadreq_fu_174_p3 = txEng_tcpPkgBuffer6_s_3_empty_n;

assign icmp_ln647_5_fu_730_p2 = ((Lo_assign_fu_560_p3 > 22'd159) ? 1'b1 : 1'b0);

assign icmp_ln647_6_fu_324_p2 = ((Lo_assign_s_fu_294_p3 > or_ln78_2_fu_318_p2) ? 1'b1 : 1'b0);

assign icmp_ln647_7_fu_416_p2 = ((Lo_assign_s_fu_294_p3 > 22'd159) ? 1'b1 : 1'b0);

assign icmp_ln647_fu_590_p2 = ((Lo_assign_fu_560_p3 > or_ln78_fu_584_p2) ? 1'b1 : 1'b0);

assign icmp_ln76_2_fu_312_p2 = ((add_ln76_2_fu_306_p2 < 23'd161) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_578_p2 = ((add_ln76_fu_572_p2 < 23'd161) ? 1'b1 : 1'b0);

assign icmp_ln82_2_fu_410_p2 = ((Lo_assign_s_fu_294_p3 < 22'd160) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_724_p2 = ((Lo_assign_fu_560_p3 < 22'd160) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_874_p2 = ((select_ln80_fu_866_p3 == 5'd0) ? 1'b1 : 1'b0);

assign length_V_1_fu_912_p2 = (16'd40 + txEng_ipMetaFifo_V_V_dout);

assign lshr_ln647_26_fu_1064_p2 = 160'd1461501637330902918203684832716283019655932542975 >> zext_ln647_30_fu_1061_p1;

assign lshr_ln647_27_fu_806_p2 = select_ln647_20_fu_780_p3 >> zext_ln647_31_fu_802_p1;

assign lshr_ln647_28_fu_1082_p2 = 160'd1461501637330902918203684832716283019655932542975 >> zext_ln647_32_fu_1079_p1;

assign lshr_ln647_29_fu_404_p2 = select_ln647_23_fu_378_p3 >> zext_ln647_33_fu_400_p1;

assign lshr_ln647_30_fu_1003_p2 = 160'd1461501637330902918203684832716283019655932542975 >> zext_ln647_34_fu_1000_p1;

assign lshr_ln647_31_fu_492_p2 = select_ln647_26_fu_466_p3 >> zext_ln647_35_fu_488_p1;

assign lshr_ln647_32_fu_1021_p2 = 160'd1461501637330902918203684832716283019655932542975 >> zext_ln647_36_fu_1018_p1;

assign lshr_ln647_fu_670_p2 = select_ln647_17_fu_644_p3 >> zext_ln647_fu_666_p1;

assign m_axis_tcp_data_TDATA = m_axis_tx_data_V_data_V_1_data_out;

assign m_axis_tcp_data_TKEEP = m_axis_tx_data_V_keep_V_1_data_out;

assign m_axis_tcp_data_TLAST = m_axis_tx_data_V_last_V_1_data_out;

assign m_axis_tcp_data_TVALID = m_axis_tx_data_V_last_V_1_state[1'd0];

assign m_axis_tx_data_V_data_V_1_ack_in = m_axis_tx_data_V_data_V_1_state[1'd1];

assign m_axis_tx_data_V_data_V_1_ack_out = m_axis_tcp_data_TREADY;

assign m_axis_tx_data_V_data_V_1_load_A = (m_axis_tx_data_V_data_V_1_state_cmp_full & ~m_axis_tx_data_V_data_V_1_sel_wr);

assign m_axis_tx_data_V_data_V_1_load_B = (m_axis_tx_data_V_data_V_1_state_cmp_full & m_axis_tx_data_V_data_V_1_sel_wr);

assign m_axis_tx_data_V_data_V_1_sel = m_axis_tx_data_V_data_V_1_sel_rd;

assign m_axis_tx_data_V_data_V_1_state_cmp_full = ((m_axis_tx_data_V_data_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign m_axis_tx_data_V_data_V_1_vld_out = m_axis_tx_data_V_data_V_1_state[1'd0];

assign m_axis_tx_data_V_keep_V_1_ack_in = m_axis_tx_data_V_keep_V_1_state[1'd1];

assign m_axis_tx_data_V_keep_V_1_ack_out = m_axis_tcp_data_TREADY;

assign m_axis_tx_data_V_keep_V_1_load_A = (m_axis_tx_data_V_keep_V_1_state_cmp_full & ~m_axis_tx_data_V_keep_V_1_sel_wr);

assign m_axis_tx_data_V_keep_V_1_load_B = (m_axis_tx_data_V_keep_V_1_state_cmp_full & m_axis_tx_data_V_keep_V_1_sel_wr);

assign m_axis_tx_data_V_keep_V_1_sel = m_axis_tx_data_V_keep_V_1_sel_rd;

assign m_axis_tx_data_V_keep_V_1_state_cmp_full = ((m_axis_tx_data_V_keep_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign m_axis_tx_data_V_keep_V_1_vld_out = m_axis_tx_data_V_keep_V_1_state[1'd0];

assign m_axis_tx_data_V_last_V_1_ack_in = m_axis_tx_data_V_last_V_1_state[1'd1];

assign m_axis_tx_data_V_last_V_1_ack_out = m_axis_tcp_data_TREADY;

assign m_axis_tx_data_V_last_V_1_load_A = (m_axis_tx_data_V_last_V_1_state_cmp_full & ~m_axis_tx_data_V_last_V_1_sel_wr);

assign m_axis_tx_data_V_last_V_1_load_B = (m_axis_tx_data_V_last_V_1_state_cmp_full & m_axis_tx_data_V_last_V_1_sel_wr);

assign m_axis_tx_data_V_last_V_1_sel = m_axis_tx_data_V_last_V_1_sel_rd;

assign m_axis_tx_data_V_last_V_1_state_cmp_full = ((m_axis_tx_data_V_last_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign m_axis_tx_data_V_last_V_1_vld_out = m_axis_tx_data_V_last_V_1_state[1'd0];

assign or_ln78_2_fu_318_p2 = (22'd63 | Lo_assign_s_fu_294_p3);

assign or_ln78_fu_584_p2 = (22'd63 | Lo_assign_fu_560_p3);

assign or_ln887_fu_880_p2 = (xor_ln76_fu_812_p2 | icmp_ln887_fu_874_p2);

assign p_Result_100_fu_1009_p2 = (lshr_ln647_30_fu_1003_p2 & lshr_ln647_29_reg_1160);

assign p_Result_101_fu_1027_p2 = (lshr_ln647_32_fu_1021_p2 & lshr_ln647_31_reg_1170);

assign p_Result_126_i_i_i_fu_918_p4 = {{length_V_1_fu_912_p2[15:8]}};

assign p_Result_88_fu_1097_p5 = {{ap_const_lv64_0[63:32]}, {trunc_ln215_fu_1093_p1}};

assign p_Result_91_fu_1036_p5 = {{tmp_data_V_reg_1139[63:32]}, {trunc_ln215_1_fu_1032_p1}};

assign p_Result_95_fu_940_p5 = {{header_header_V_7[159:32]}, {agg_result_V_0_1_i_i_fu_932_p3}, {header_header_V_7[15:0]}};

assign p_Result_96_fu_952_p5 = {{tmp_dstIp_V_fu_896_p4}, {p_Result_95_fu_940_p5[127:0]}};

assign p_Result_97_fu_964_p5 = {{p_Result_96_fu_952_p5[159:128]}, {tmp_srcIp_V_fu_892_p1}, {p_Result_96_fu_952_p5[95:0]}};

assign p_Result_98_fu_1070_p2 = (lshr_ln647_reg_1185 & lshr_ln647_26_fu_1064_p2);

assign p_Result_99_fu_1088_p2 = (lshr_ln647_28_fu_1082_p2 & lshr_ln647_27_reg_1195);

assign p_Result_s_fu_976_p5 = {{p_Result_97_fu_964_p5[159:80]}, {8'd6}, {p_Result_97_fu_964_p5[71:0]}};

assign select_ln647_17_fu_644_p3 = ((icmp_ln647_fu_590_p2[0:0] === 1'b1) ? tmp_240_fu_608_p4 : header_header_V_7);

assign select_ln647_18_fu_652_p3 = ((icmp_ln647_fu_590_p2[0:0] === 1'b1) ? sub_ln647_24_fu_624_p2 : tmp_239_fu_596_p3);

assign select_ln647_19_fu_772_p3 = ((icmp_ln647_5_fu_730_p2[0:0] === 1'b1) ? add_ln647_fu_754_p2 : sub_ln647_28_fu_766_p2);

assign select_ln647_20_fu_780_p3 = ((icmp_ln647_5_fu_730_p2[0:0] === 1'b1) ? tmp_243_fu_744_p4 : header_header_V_7);

assign select_ln647_21_fu_788_p3 = ((icmp_ln647_5_fu_730_p2[0:0] === 1'b1) ? sub_ln647_27_fu_760_p2 : tmp_242_fu_736_p3);

assign select_ln647_22_fu_370_p3 = ((icmp_ln647_6_fu_324_p2[0:0] === 1'b1) ? sub_ln647_30_fu_352_p2 : sub_ln647_32_fu_364_p2);

assign select_ln647_23_fu_378_p3 = ((icmp_ln647_6_fu_324_p2[0:0] === 1'b1) ? tmp_251_fu_342_p4 : header_header_V_7);

assign select_ln647_24_fu_386_p3 = ((icmp_ln647_6_fu_324_p2[0:0] === 1'b1) ? sub_ln647_31_fu_358_p2 : tmp_250_fu_330_p3);

assign select_ln647_25_fu_458_p3 = ((icmp_ln647_7_fu_416_p2[0:0] === 1'b1) ? add_ln647_3_fu_440_p2 : sub_ln647_35_fu_452_p2);

assign select_ln647_26_fu_466_p3 = ((icmp_ln647_7_fu_416_p2[0:0] === 1'b1) ? tmp_253_fu_430_p4 : header_header_V_7);

assign select_ln647_27_fu_474_p3 = ((icmp_ln647_7_fu_416_p2[0:0] === 1'b1) ? sub_ln647_34_fu_446_p2 : tmp_252_fu_422_p3);

assign select_ln647_fu_636_p3 = ((icmp_ln647_fu_590_p2[0:0] === 1'b1) ? sub_ln647_fu_618_p2 : sub_ln647_25_fu_630_p2);

assign select_ln76_3_fu_510_p3 = ((icmp_ln76_2_fu_312_p2[0:0] === 1'b1) ? grp_fu_253_p2 : header_idx_7);

assign select_ln76_4_fu_1047_p3 = ((icmp_ln76_2_reg_1150[0:0] === 1'b1) ? trunc_ln364_1_fu_1014_p1 : tmp_data_V_reg_1139);

assign select_ln76_fu_824_p3 = ((icmp_ln76_fu_578_p2[0:0] === 1'b1) ? grp_fu_253_p2 : header_idx_7);

assign select_ln80_fu_866_p3 = ((tmp_241_fu_694_p3[0:0] === 1'b1) ? tmp_244_fu_846_p4 : tmp_245_fu_856_p4);

assign select_ln82_5_fu_518_p3 = ((and_ln82_2_fu_504_p2[0:0] === 1'b1) ? grp_fu_253_p2 : select_ln76_3_fu_510_p3);

assign select_ln82_fu_832_p3 = ((and_ln82_fu_818_p2[0:0] === 1'b1) ? grp_fu_253_p2 : select_ln76_fu_824_p3);

assign select_ln875_fu_538_p3 = ((xor_ln875_fu_532_p2[0:0] === 1'b1) ? 2'd3 : 2'd0);

assign sendWord_data_V_fu_1109_p3 = ((and_ln82_reg_1200[0:0] === 1'b1) ? p_Result_88_fu_1097_p5 : trunc_ln364_fu_1075_p1);

assign shl_ln_fu_676_p3 = {{grp_fu_253_p2}, {6'd0}};

assign sub_ln647_24_fu_624_p2 = ($signed(8'd159) - $signed(tmp_239_fu_596_p3));

assign sub_ln647_25_fu_630_p2 = (trunc_ln647_fu_604_p1 - tmp_239_fu_596_p3);

assign sub_ln647_26_fu_660_p2 = ($signed(8'd159) - $signed(select_ln647_fu_636_p3));

assign sub_ln647_27_fu_760_p2 = ($signed(8'd159) - $signed(tmp_242_fu_736_p3));

assign sub_ln647_28_fu_766_p2 = ($signed(8'd159) - $signed(tmp_242_fu_736_p3));

assign sub_ln647_29_fu_796_p2 = ($signed(8'd159) - $signed(select_ln647_19_fu_772_p3));

assign sub_ln647_30_fu_352_p2 = (tmp_250_fu_330_p3 - trunc_ln647_9_fu_338_p1);

assign sub_ln647_31_fu_358_p2 = ($signed(8'd159) - $signed(tmp_250_fu_330_p3));

assign sub_ln647_32_fu_364_p2 = (trunc_ln647_9_fu_338_p1 - tmp_250_fu_330_p3);

assign sub_ln647_33_fu_394_p2 = ($signed(8'd159) - $signed(select_ln647_22_fu_370_p3));

assign sub_ln647_34_fu_446_p2 = ($signed(8'd159) - $signed(tmp_252_fu_422_p3));

assign sub_ln647_35_fu_452_p2 = ($signed(8'd159) - $signed(tmp_252_fu_422_p3));

assign sub_ln647_36_fu_482_p2 = ($signed(8'd159) - $signed(select_ln647_25_fu_458_p3));

assign sub_ln647_fu_618_p2 = (tmp_239_fu_596_p3 - trunc_ln647_fu_604_p1);

assign sub_ln80_3_fu_702_p2 = (23'd0 - sub_ln80_fu_688_p2);

assign sub_ln80_4_fu_718_p2 = (8'd0 - trunc_ln80_3_fu_708_p4);

assign sub_ln80_fu_688_p2 = (23'd160 - zext_ln80_fu_684_p1);

assign tmp_239_fu_596_p3 = {{trunc_ln76_4_fu_556_p1}, {6'd0}};

integer ap_tvar_int_0;

always @ (header_header_V_7) begin
    for (ap_tvar_int_0 = 160 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 159 - 0) begin
            tmp_240_fu_608_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_240_fu_608_p4[ap_tvar_int_0] = header_header_V_7[159 - ap_tvar_int_0];
        end
    end
end

assign tmp_241_fu_694_p3 = sub_ln80_fu_688_p2[32'd22];

assign tmp_242_fu_736_p3 = {{trunc_ln76_fu_552_p1}, {6'd0}};

integer ap_tvar_int_1;

always @ (header_header_V_7) begin
    for (ap_tvar_int_1 = 160 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 159 - 0) begin
            tmp_243_fu_744_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_243_fu_744_p4[ap_tvar_int_1] = header_header_V_7[159 - ap_tvar_int_1];
        end
    end
end

assign tmp_244_fu_846_p4 = {{sub_ln80_4_fu_718_p2[7:3]}};

assign tmp_245_fu_856_p4 = {{sub_ln80_fu_688_p2[10:6]}};

assign tmp_248_nbreadreq_fu_196_p3 = txEng_ipTupleFifo_V_empty_n;

assign tmp_250_fu_330_p3 = {{trunc_ln76_6_fu_290_p1}, {6'd0}};

integer ap_tvar_int_2;

always @ (header_header_V_7) begin
    for (ap_tvar_int_2 = 160 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 159 - 0) begin
            tmp_251_fu_342_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            tmp_251_fu_342_p4[ap_tvar_int_2] = header_header_V_7[159 - ap_tvar_int_2];
        end
    end
end

assign tmp_252_fu_422_p3 = {{trunc_ln76_5_fu_286_p1}, {6'd0}};

integer ap_tvar_int_3;

always @ (header_header_V_7) begin
    for (ap_tvar_int_3 = 160 - 1; ap_tvar_int_3 >= 0; ap_tvar_int_3 = ap_tvar_int_3 - 1) begin
        if (ap_tvar_int_3 > 159 - 0) begin
            tmp_253_fu_430_p4[ap_tvar_int_3] = 1'b0;
        end else begin
            tmp_253_fu_430_p4[ap_tvar_int_3] = header_header_V_7[159 - ap_tvar_int_3];
        end
    end
end

assign tmp_data_V_17_fu_1053_p3 = ((and_ln82_2_reg_1175[0:0] === 1'b1) ? p_Result_91_fu_1036_p5 : select_ln76_4_fu_1047_p3);

assign tmp_data_V_18_fu_272_p1 = txEng_tcpPkgBuffer6_s_3_dout[63:0];

assign tmp_data_V_fu_282_p1 = txEng_tcpPkgBuffer6_s_3_dout[63:0];

assign tmp_dstIp_V_fu_896_p4 = {{txEng_ipTupleFifo_V_dout[63:32]}};

assign tmp_nbreadreq_fu_188_p3 = txEng_ipMetaFifo_V_V_empty_n;

assign tmp_srcIp_V_fu_892_p1 = txEng_ipTupleFifo_V_dout[31:0];

assign trunc_ln215_1_fu_1032_p1 = p_Result_101_fu_1027_p2[31:0];

assign trunc_ln215_fu_1093_p1 = p_Result_99_fu_1088_p2[31:0];

assign trunc_ln364_1_fu_1014_p1 = p_Result_100_fu_1009_p2[63:0];

assign trunc_ln364_fu_1075_p1 = p_Result_98_fu_1070_p2[63:0];

assign trunc_ln647_10_fu_928_p1 = length_V_1_fu_912_p2[7:0];

assign trunc_ln647_9_fu_338_p1 = or_ln78_2_fu_318_p2[7:0];

assign trunc_ln647_fu_604_p1 = or_ln78_fu_584_p2[7:0];

assign trunc_ln76_4_fu_556_p1 = header_idx_7[1:0];

assign trunc_ln76_5_fu_286_p1 = header_idx_7[1:0];

assign trunc_ln76_6_fu_290_p1 = header_idx_7[1:0];

assign trunc_ln76_fu_552_p1 = header_idx_7[1:0];

assign trunc_ln80_3_fu_708_p4 = {{sub_ln80_3_fu_702_p2[10:3]}};

assign xor_ln76_2_fu_498_p2 = (icmp_ln76_2_fu_312_p2 ^ 1'd1);

assign xor_ln76_fu_812_p2 = (icmp_ln76_fu_578_p2 ^ 1'd1);

assign xor_ln875_fu_532_p2 = (grp_fu_241_p3 ^ 1'd1);

assign zext_ln647_30_fu_1061_p1 = sub_ln647_26_reg_1180;

assign zext_ln647_31_fu_802_p1 = select_ln647_21_fu_788_p3;

assign zext_ln647_32_fu_1079_p1 = sub_ln647_29_reg_1190;

assign zext_ln647_33_fu_400_p1 = select_ln647_24_fu_386_p3;

assign zext_ln647_34_fu_1000_p1 = sub_ln647_33_reg_1155;

assign zext_ln647_35_fu_488_p1 = select_ln647_27_fu_474_p3;

assign zext_ln647_36_fu_1018_p1 = sub_ln647_36_reg_1165;

assign zext_ln647_fu_666_p1 = select_ln647_18_fu_652_p3;

assign zext_ln76_2_fu_302_p1 = Lo_assign_s_fu_294_p3;

assign zext_ln76_fu_568_p1 = Lo_assign_fu_560_p3;

assign zext_ln80_fu_684_p1 = shl_ln_fu_676_p3;

always @ (posedge ap_clk) begin
    sub_ln647_33_reg_1155[0] <= 1'b0;
    sub_ln647_36_reg_1165[0] <= 1'b0;
    sub_ln647_26_reg_1180[0] <= 1'b0;
    sub_ln647_29_reg_1190[0] <= 1'b0;
end

endmodule //generate_ipv4_64_s
