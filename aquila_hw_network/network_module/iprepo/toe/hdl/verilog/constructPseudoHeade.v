// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module constructPseudoHeade (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        rxEng_ipMetaFifo_V_t_dout,
        rxEng_ipMetaFifo_V_t_empty_n,
        rxEng_ipMetaFifo_V_t_read,
        rxEng_ipMetaFifo_V_o_dout,
        rxEng_ipMetaFifo_V_o_empty_n,
        rxEng_ipMetaFifo_V_o_read,
        rxEng_ipMetaFifo_V_l_dout,
        rxEng_ipMetaFifo_V_l_empty_n,
        rxEng_ipMetaFifo_V_l_read,
        rxEng_pseudoHeaderFi_3_din,
        rxEng_pseudoHeaderFi_3_full_n,
        rxEng_pseudoHeaderFi_3_write,
        rxEng_pseudoHeaderFi_5_din,
        rxEng_pseudoHeaderFi_5_full_n,
        rxEng_pseudoHeaderFi_5_write,
        rxEng_pseudoHeaderFi_6_din,
        rxEng_pseudoHeaderFi_6_full_n,
        rxEng_pseudoHeaderFi_6_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;
parameter    ap_const_lv64_0 = 64'd0;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] rxEng_ipMetaFifo_V_t_dout;
input   rxEng_ipMetaFifo_V_t_empty_n;
output   rxEng_ipMetaFifo_V_t_read;
input  [31:0] rxEng_ipMetaFifo_V_o_dout;
input   rxEng_ipMetaFifo_V_o_empty_n;
output   rxEng_ipMetaFifo_V_o_read;
input  [15:0] rxEng_ipMetaFifo_V_l_dout;
input   rxEng_ipMetaFifo_V_l_empty_n;
output   rxEng_ipMetaFifo_V_l_read;
output  [63:0] rxEng_pseudoHeaderFi_3_din;
input   rxEng_pseudoHeaderFi_3_full_n;
output   rxEng_pseudoHeaderFi_3_write;
output  [7:0] rxEng_pseudoHeaderFi_5_din;
input   rxEng_pseudoHeaderFi_5_full_n;
output   rxEng_pseudoHeaderFi_5_write;
output  [0:0] rxEng_pseudoHeaderFi_6_din;
input   rxEng_pseudoHeaderFi_6_full_n;
output   rxEng_pseudoHeaderFi_6_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg rxEng_ipMetaFifo_V_t_read;
reg rxEng_ipMetaFifo_V_o_read;
reg rxEng_ipMetaFifo_V_l_read;
reg rxEng_pseudoHeaderFi_3_write;
reg rxEng_pseudoHeaderFi_5_write;
reg rxEng_pseudoHeaderFi_6_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    io_acc_block_signal_op8;
wire   [0:0] state_3_load_load_fu_158_p1;
wire   [0:0] tmp_nbreadreq_fu_118_p5;
reg    ap_predicate_op8_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire    io_acc_block_signal_op93;
reg   [0:0] state_3_load_reg_646;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] state_3;
reg   [15:0] header_idx;
reg   [95:0] header_header_V;
reg    rxEng_ipMetaFifo_V_t_blk_n;
wire    ap_block_pp0_stage0;
reg    rxEng_ipMetaFifo_V_o_blk_n;
reg    rxEng_ipMetaFifo_V_l_blk_n;
reg    rxEng_pseudoHeaderFi_3_blk_n;
reg    rxEng_pseudoHeaderFi_5_blk_n;
reg    rxEng_pseudoHeaderFi_6_blk_n;
wire   [6:0] sub_ln647_44_fu_362_p2;
reg   [6:0] sub_ln647_44_reg_654;
wire   [95:0] lshr_ln647_fu_372_p2;
reg   [95:0] lshr_ln647_reg_659;
wire   [6:0] sub_ln647_47_fu_528_p2;
reg   [6:0] sub_ln647_47_reg_664;
wire   [95:0] lshr_ln647_37_fu_538_p2;
reg   [95:0] lshr_ln647_37_reg_669;
wire   [0:0] tmp_last_V_fu_550_p2;
reg   [0:0] tmp_last_V_reg_674;
wire   [0:0] and_ln82_fu_556_p2;
reg   [0:0] and_ln82_reg_679;
reg    ap_block_pp0_stage0_subdone;
wire   [15:0] select_ln82_fu_570_p3;
wire   [95:0] p_Result_s_fu_230_p5;
reg    ap_block_pp0_stage0_01001;
wire   [95:0] p_Result_128_fu_184_p5;
wire   [7:0] trunc_ln647_12_fu_218_p1;
wire   [7:0] p_Result_126_i_i_i_fu_208_p4;
wire   [95:0] p_Result_129_fu_196_p5;
wire   [15:0] agg_result_V_0_1_i_i_fu_222_p3;
wire   [21:0] Lo_assign_fu_262_p3;
wire   [22:0] zext_ln76_fu_270_p1;
wire   [22:0] add_ln76_fu_274_p2;
wire   [21:0] or_ln78_fu_286_p2;
wire   [0:0] trunc_ln76_7_fu_258_p1;
wire   [6:0] tmp_297_fu_298_p3;
wire   [6:0] trunc_ln647_fu_306_p1;
wire   [0:0] icmp_ln647_fu_292_p2;
wire   [6:0] sub_ln647_fu_320_p2;
wire   [6:0] sub_ln647_43_fu_332_p2;
reg   [95:0] tmp_298_fu_310_p4;
wire   [6:0] sub_ln647_42_fu_326_p2;
wire   [6:0] select_ln647_fu_338_p3;
wire   [6:0] select_ln647_34_fu_354_p3;
wire   [95:0] select_ln647_33_fu_346_p3;
wire   [95:0] zext_ln647_fu_368_p1;
wire   [15:0] add_ln79_fu_378_p2;
wire   [21:0] shl_ln_fu_384_p3;
wire   [22:0] zext_ln80_fu_392_p1;
wire   [22:0] sub_ln80_fu_396_p2;
wire   [22:0] sub_ln80_5_fu_410_p2;
wire   [7:0] trunc_ln80_5_fu_416_p4;
wire   [0:0] tmp_299_fu_402_p3;
wire   [7:0] sub_ln80_6_fu_426_p2;
wire   [7:0] trunc_ln80_6_fu_432_p4;
wire   [7:0] select_ln80_fu_442_p3;
wire   [0:0] trunc_ln76_fu_254_p1;
wire   [6:0] tmp_300_fu_468_p3;
wire   [0:0] icmp_ln647_9_fu_462_p2;
wire   [6:0] add_ln647_fu_486_p2;
wire   [6:0] sub_ln647_46_fu_498_p2;
reg   [95:0] tmp_301_fu_476_p4;
wire   [6:0] sub_ln647_45_fu_492_p2;
wire   [6:0] select_ln647_35_fu_504_p3;
wire   [6:0] select_ln647_37_fu_520_p3;
wire   [95:0] select_ln647_36_fu_512_p3;
wire   [95:0] zext_ln647_43_fu_534_p1;
wire   [0:0] icmp_ln76_fu_280_p2;
wire   [0:0] icmp_ln80_fu_450_p2;
wire   [0:0] xor_ln76_fu_544_p2;
wire   [0:0] icmp_ln82_fu_456_p2;
wire   [15:0] select_ln76_fu_562_p3;
wire   [95:0] zext_ln647_42_fu_590_p1;
wire   [95:0] lshr_ln647_36_fu_593_p2;
wire   [95:0] p_Result_130_fu_599_p2;
wire   [95:0] zext_ln647_44_fu_608_p1;
wire   [95:0] lshr_ln647_38_fu_611_p2;
wire   [95:0] p_Result_131_fu_617_p2;
wire   [31:0] trunc_ln215_fu_622_p1;
wire   [63:0] p_Result_125_fu_626_p5;
wire   [63:0] trunc_ln364_fu_604_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_90;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 state_3 = 1'd0;
#0 header_idx = 16'd0;
#0 header_header_V = 96'd28334198897217871282176;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_90)) begin
        if ((state_3_load_load_fu_158_p1 == 1'd1)) begin
            header_idx <= select_ln82_fu_570_p3;
        end else if (((tmp_nbreadreq_fu_118_p5 == 1'd1) & (state_3 == 1'd0))) begin
            header_idx <= 16'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_90)) begin
        if (((tmp_last_V_fu_550_p2 == 1'd1) & (state_3_load_load_fu_158_p1 == 1'd1))) begin
            state_3 <= 1'd0;
        end else if (((tmp_nbreadreq_fu_118_p5 == 1'd1) & (state_3 == 1'd0))) begin
            state_3 <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (state_3_load_load_fu_158_p1 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln82_reg_679 <= and_ln82_fu_556_p2;
        lshr_ln647_37_reg_669 <= lshr_ln647_37_fu_538_p2;
        lshr_ln647_reg_659 <= lshr_ln647_fu_372_p2;
        sub_ln647_44_reg_654[6 : 1] <= sub_ln647_44_fu_362_p2[6 : 1];
        sub_ln647_47_reg_664[6 : 1] <= sub_ln647_47_fu_528_p2[6 : 1];
        tmp_last_V_reg_674 <= tmp_last_V_fu_550_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_118_p5 == 1'd1) & (state_3 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        header_header_V <= p_Result_s_fu_230_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        state_3_load_reg_646 <= state_3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op8_read_state1 == 1'b1))) begin
        rxEng_ipMetaFifo_V_l_blk_n = rxEng_ipMetaFifo_V_l_empty_n;
    end else begin
        rxEng_ipMetaFifo_V_l_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op8_read_state1 == 1'b1))) begin
        rxEng_ipMetaFifo_V_l_read = 1'b1;
    end else begin
        rxEng_ipMetaFifo_V_l_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op8_read_state1 == 1'b1))) begin
        rxEng_ipMetaFifo_V_o_blk_n = rxEng_ipMetaFifo_V_o_empty_n;
    end else begin
        rxEng_ipMetaFifo_V_o_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op8_read_state1 == 1'b1))) begin
        rxEng_ipMetaFifo_V_o_read = 1'b1;
    end else begin
        rxEng_ipMetaFifo_V_o_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op8_read_state1 == 1'b1))) begin
        rxEng_ipMetaFifo_V_t_blk_n = rxEng_ipMetaFifo_V_t_empty_n;
    end else begin
        rxEng_ipMetaFifo_V_t_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op8_read_state1 == 1'b1))) begin
        rxEng_ipMetaFifo_V_t_read = 1'b1;
    end else begin
        rxEng_ipMetaFifo_V_t_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (state_3_load_reg_646 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rxEng_pseudoHeaderFi_3_blk_n = rxEng_pseudoHeaderFi_3_full_n;
    end else begin
        rxEng_pseudoHeaderFi_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (state_3_load_reg_646 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rxEng_pseudoHeaderFi_3_write = 1'b1;
    end else begin
        rxEng_pseudoHeaderFi_3_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (state_3_load_reg_646 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rxEng_pseudoHeaderFi_5_blk_n = rxEng_pseudoHeaderFi_5_full_n;
    end else begin
        rxEng_pseudoHeaderFi_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (state_3_load_reg_646 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rxEng_pseudoHeaderFi_5_write = 1'b1;
    end else begin
        rxEng_pseudoHeaderFi_5_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (state_3_load_reg_646 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rxEng_pseudoHeaderFi_6_blk_n = rxEng_pseudoHeaderFi_6_full_n;
    end else begin
        rxEng_pseudoHeaderFi_6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (state_3_load_reg_646 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rxEng_pseudoHeaderFi_6_write = 1'b1;
    end else begin
        rxEng_pseudoHeaderFi_6_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Lo_assign_fu_262_p3 = {{header_idx}, {6'd0}};

assign add_ln647_fu_486_p2 = (tmp_300_fu_468_p3 + 7'd33);

assign add_ln76_fu_274_p2 = (zext_ln76_fu_270_p1 + 23'd64);

assign add_ln79_fu_378_p2 = (header_idx + 16'd1);

assign agg_result_V_0_1_i_i_fu_222_p3 = {{trunc_ln647_12_fu_218_p1}, {p_Result_126_i_i_i_fu_208_p4}};

assign and_ln82_fu_556_p2 = (xor_ln76_fu_544_p2 & icmp_ln82_fu_456_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((state_3_load_reg_646 == 1'd1) & (io_acc_block_signal_op93 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((io_acc_block_signal_op8 == 1'b0) & (ap_predicate_op8_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((state_3_load_reg_646 == 1'd1) & (io_acc_block_signal_op93 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((io_acc_block_signal_op8 == 1'b0) & (ap_predicate_op8_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((state_3_load_reg_646 == 1'd1) & (io_acc_block_signal_op93 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((io_acc_block_signal_op8 == 1'b0) & (ap_predicate_op8_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((io_acc_block_signal_op8 == 1'b0) & (ap_predicate_op8_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((state_3_load_reg_646 == 1'd1) & (io_acc_block_signal_op93 == 1'b0));
end

always @ (*) begin
    ap_condition_90 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

always @ (*) begin
    ap_predicate_op8_read_state1 = ((tmp_nbreadreq_fu_118_p5 == 1'd1) & (state_3 == 1'd0));
end

assign icmp_ln647_9_fu_462_p2 = ((Lo_assign_fu_262_p3 > 22'd95) ? 1'b1 : 1'b0);

assign icmp_ln647_fu_292_p2 = ((Lo_assign_fu_262_p3 > or_ln78_fu_286_p2) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_280_p2 = ((add_ln76_fu_274_p2 < 23'd97) ? 1'b1 : 1'b0);

assign icmp_ln80_fu_450_p2 = ((select_ln80_fu_442_p3 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_456_p2 = ((Lo_assign_fu_262_p3 < 22'd96) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op8 = (rxEng_ipMetaFifo_V_t_empty_n & rxEng_ipMetaFifo_V_o_empty_n & rxEng_ipMetaFifo_V_l_empty_n);

assign io_acc_block_signal_op93 = (rxEng_pseudoHeaderFi_6_full_n & rxEng_pseudoHeaderFi_5_full_n & rxEng_pseudoHeaderFi_3_full_n);

assign lshr_ln647_36_fu_593_p2 = 96'd79228162514264337593543950335 >> zext_ln647_42_fu_590_p1;

assign lshr_ln647_37_fu_538_p2 = select_ln647_36_fu_512_p3 >> zext_ln647_43_fu_534_p1;

assign lshr_ln647_38_fu_611_p2 = 96'd79228162514264337593543950335 >> zext_ln647_44_fu_608_p1;

assign lshr_ln647_fu_372_p2 = select_ln647_33_fu_346_p3 >> zext_ln647_fu_368_p1;

assign or_ln78_fu_286_p2 = (22'd63 | Lo_assign_fu_262_p3);

assign p_Result_125_fu_626_p5 = {{ap_const_lv64_0[63:32]}, {trunc_ln215_fu_622_p1}};

assign p_Result_126_i_i_i_fu_208_p4 = {{rxEng_ipMetaFifo_V_l_dout[15:8]}};

assign p_Result_128_fu_184_p5 = {{header_header_V[95:32]}, {rxEng_ipMetaFifo_V_t_dout}};

assign p_Result_129_fu_196_p5 = {{p_Result_128_fu_184_p5[95:64]}, {rxEng_ipMetaFifo_V_o_dout}, {p_Result_128_fu_184_p5[31:0]}};

assign p_Result_130_fu_599_p2 = (lshr_ln647_reg_659 & lshr_ln647_36_fu_593_p2);

assign p_Result_131_fu_617_p2 = (lshr_ln647_38_fu_611_p2 & lshr_ln647_37_reg_669);

assign p_Result_s_fu_230_p5 = {{agg_result_V_0_1_i_i_fu_222_p3}, {p_Result_129_fu_196_p5[79:0]}};

assign rxEng_pseudoHeaderFi_3_din = ((and_ln82_reg_679[0:0] === 1'b1) ? p_Result_125_fu_626_p5 : trunc_ln364_fu_604_p1);

assign rxEng_pseudoHeaderFi_5_din = 8'd255;

assign rxEng_pseudoHeaderFi_6_din = tmp_last_V_reg_674;

assign select_ln647_33_fu_346_p3 = ((icmp_ln647_fu_292_p2[0:0] === 1'b1) ? tmp_298_fu_310_p4 : header_header_V);

assign select_ln647_34_fu_354_p3 = ((icmp_ln647_fu_292_p2[0:0] === 1'b1) ? sub_ln647_42_fu_326_p2 : tmp_297_fu_298_p3);

assign select_ln647_35_fu_504_p3 = ((icmp_ln647_9_fu_462_p2[0:0] === 1'b1) ? add_ln647_fu_486_p2 : sub_ln647_46_fu_498_p2);

assign select_ln647_36_fu_512_p3 = ((icmp_ln647_9_fu_462_p2[0:0] === 1'b1) ? tmp_301_fu_476_p4 : header_header_V);

assign select_ln647_37_fu_520_p3 = ((icmp_ln647_9_fu_462_p2[0:0] === 1'b1) ? sub_ln647_45_fu_492_p2 : tmp_300_fu_468_p3);

assign select_ln647_fu_338_p3 = ((icmp_ln647_fu_292_p2[0:0] === 1'b1) ? sub_ln647_fu_320_p2 : sub_ln647_43_fu_332_p2);

assign select_ln76_fu_562_p3 = ((icmp_ln76_fu_280_p2[0:0] === 1'b1) ? add_ln79_fu_378_p2 : header_idx);

assign select_ln80_fu_442_p3 = ((tmp_299_fu_402_p3[0:0] === 1'b1) ? sub_ln80_6_fu_426_p2 : trunc_ln80_6_fu_432_p4);

assign select_ln82_fu_570_p3 = ((and_ln82_fu_556_p2[0:0] === 1'b1) ? add_ln79_fu_378_p2 : select_ln76_fu_562_p3);

assign shl_ln_fu_384_p3 = {{add_ln79_fu_378_p2}, {6'd0}};

assign state_3_load_load_fu_158_p1 = state_3;

assign sub_ln647_42_fu_326_p2 = ($signed(7'd95) - $signed(tmp_297_fu_298_p3));

assign sub_ln647_43_fu_332_p2 = (trunc_ln647_fu_306_p1 - tmp_297_fu_298_p3);

assign sub_ln647_44_fu_362_p2 = ($signed(7'd95) - $signed(select_ln647_fu_338_p3));

assign sub_ln647_45_fu_492_p2 = ($signed(7'd95) - $signed(tmp_300_fu_468_p3));

assign sub_ln647_46_fu_498_p2 = ($signed(7'd95) - $signed(tmp_300_fu_468_p3));

assign sub_ln647_47_fu_528_p2 = ($signed(7'd95) - $signed(select_ln647_35_fu_504_p3));

assign sub_ln647_fu_320_p2 = (tmp_297_fu_298_p3 - trunc_ln647_fu_306_p1);

assign sub_ln80_5_fu_410_p2 = (23'd0 - sub_ln80_fu_396_p2);

assign sub_ln80_6_fu_426_p2 = (8'd0 - trunc_ln80_5_fu_416_p4);

assign sub_ln80_fu_396_p2 = (23'd96 - zext_ln80_fu_392_p1);

assign tmp_297_fu_298_p3 = {{trunc_ln76_7_fu_258_p1}, {6'd0}};

integer ap_tvar_int_0;

always @ (header_header_V) begin
    for (ap_tvar_int_0 = 96 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 95 - 0) begin
            tmp_298_fu_310_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_298_fu_310_p4[ap_tvar_int_0] = header_header_V[95 - ap_tvar_int_0];
        end
    end
end

assign tmp_299_fu_402_p3 = sub_ln80_fu_396_p2[32'd22];

assign tmp_300_fu_468_p3 = {{trunc_ln76_fu_254_p1}, {6'd0}};

integer ap_tvar_int_1;

always @ (header_header_V) begin
    for (ap_tvar_int_1 = 96 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 95 - 0) begin
            tmp_301_fu_476_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_301_fu_476_p4[ap_tvar_int_1] = header_header_V[95 - ap_tvar_int_1];
        end
    end
end

assign tmp_last_V_fu_550_p2 = (xor_ln76_fu_544_p2 | icmp_ln80_fu_450_p2);

assign tmp_nbreadreq_fu_118_p5 = (rxEng_ipMetaFifo_V_t_empty_n & rxEng_ipMetaFifo_V_o_empty_n & rxEng_ipMetaFifo_V_l_empty_n);

assign trunc_ln215_fu_622_p1 = p_Result_131_fu_617_p2[31:0];

assign trunc_ln364_fu_604_p1 = p_Result_130_fu_599_p2[63:0];

assign trunc_ln647_12_fu_218_p1 = rxEng_ipMetaFifo_V_l_dout[7:0];

assign trunc_ln647_fu_306_p1 = or_ln78_fu_286_p2[6:0];

assign trunc_ln76_7_fu_258_p1 = header_idx[0:0];

assign trunc_ln76_fu_254_p1 = header_idx[0:0];

assign trunc_ln80_5_fu_416_p4 = {{sub_ln80_5_fu_410_p2[10:3]}};

assign trunc_ln80_6_fu_432_p4 = {{sub_ln80_fu_396_p2[10:3]}};

assign xor_ln76_fu_544_p2 = (icmp_ln76_fu_280_p2 ^ 1'd1);

assign zext_ln647_42_fu_590_p1 = sub_ln647_44_reg_654;

assign zext_ln647_43_fu_534_p1 = select_ln647_37_fu_520_p3;

assign zext_ln647_44_fu_608_p1 = sub_ln647_47_reg_664;

assign zext_ln647_fu_368_p1 = select_ln647_34_fu_354_p3;

assign zext_ln76_fu_270_p1 = Lo_assign_fu_262_p3;

assign zext_ln80_fu_392_p1 = shl_ln_fu_384_p3;

always @ (posedge ap_clk) begin
    sub_ln647_44_reg_654[0] <= 1'b0;
    sub_ln647_47_reg_664[0] <= 1'b0;
end

endmodule //constructPseudoHeade
