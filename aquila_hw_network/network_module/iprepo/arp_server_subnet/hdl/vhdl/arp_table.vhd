-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity arp_table is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    hostIpEncode_req_V_V_TVALID : IN STD_LOGIC;
    macIpEncode_req_V_V_TVALID : IN STD_LOGIC;
    arpTableInsertFifo_V_dout : IN STD_LOGIC_VECTOR (80 downto 0);
    arpTableInsertFifo_V_empty_n : IN STD_LOGIC;
    arpTableInsertFifo_V_read : OUT STD_LOGIC;
    hostIpEncode_rsp_V_TREADY : IN STD_LOGIC;
    macIpEncode_rsp_V_TREADY : IN STD_LOGIC;
    arpRequestMetaFifo_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    arpRequestMetaFifo_V_full_n : IN STD_LOGIC;
    arpRequestMetaFifo_V_write : OUT STD_LOGIC;
    macIpEncode_req_V_V_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    macIpEncode_req_V_V_TREADY : OUT STD_LOGIC;
    hostIpEncode_req_V_V_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    hostIpEncode_req_V_V_TREADY : OUT STD_LOGIC;
    macIpEncode_rsp_V_TDATA : OUT STD_LOGIC_VECTOR (55 downto 0);
    macIpEncode_rsp_V_TVALID : OUT STD_LOGIC;
    hostIpEncode_rsp_V_TDATA : OUT STD_LOGIC_VECTOR (55 downto 0);
    hostIpEncode_rsp_V_TVALID : OUT STD_LOGIC );
end;


architecture behav of arp_table is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal tmp_nbreadreq_fu_86_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_nbreadreq_fu_94_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_nbreadreq_fu_102_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op10_read_state1 : BOOLEAN;
    signal ap_predicate_op17_read_state1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal hostIpEncode_rsp_V_1_ack_in : STD_LOGIC;
    signal tmp_reg_320 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_324 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_328 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op41_write_state2 : BOOLEAN;
    signal macIpEncode_rsp_V_1_ack_in : STD_LOGIC;
    signal ap_predicate_op47_write_state2 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal tmp_reg_320_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_324_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_328_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_hit_1_reg_362 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op56_write_state3 : BOOLEAN;
    signal tmp_hit_reg_371 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op61_write_state3 : BOOLEAN;
    signal macIpEncode_rsp_V_1_ack_out : STD_LOGIC;
    signal macIpEncode_rsp_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal hostIpEncode_rsp_V_1_ack_out : STD_LOGIC;
    signal hostIpEncode_rsp_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_predicate_op58_write_state3 : BOOLEAN;
    signal ap_predicate_op63_write_state3 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal macIpEncode_rsp_V_1_data_out : STD_LOGIC_VECTOR (55 downto 0);
    signal macIpEncode_rsp_V_1_vld_in : STD_LOGIC;
    signal macIpEncode_rsp_V_1_vld_out : STD_LOGIC;
    signal macIpEncode_rsp_V_1_payload_A : STD_LOGIC_VECTOR (55 downto 0);
    signal macIpEncode_rsp_V_1_payload_B : STD_LOGIC_VECTOR (55 downto 0);
    signal macIpEncode_rsp_V_1_sel_rd : STD_LOGIC := '0';
    signal macIpEncode_rsp_V_1_sel_wr : STD_LOGIC := '0';
    signal macIpEncode_rsp_V_1_sel : STD_LOGIC;
    signal macIpEncode_rsp_V_1_load_A : STD_LOGIC;
    signal macIpEncode_rsp_V_1_load_B : STD_LOGIC;
    signal macIpEncode_rsp_V_1_state_cmp_full : STD_LOGIC;
    signal hostIpEncode_rsp_V_1_data_out : STD_LOGIC_VECTOR (55 downto 0);
    signal hostIpEncode_rsp_V_1_vld_in : STD_LOGIC;
    signal hostIpEncode_rsp_V_1_vld_out : STD_LOGIC;
    signal hostIpEncode_rsp_V_1_payload_A : STD_LOGIC_VECTOR (55 downto 0);
    signal hostIpEncode_rsp_V_1_payload_B : STD_LOGIC_VECTOR (55 downto 0);
    signal hostIpEncode_rsp_V_1_sel_rd : STD_LOGIC := '0';
    signal hostIpEncode_rsp_V_1_sel_wr : STD_LOGIC := '0';
    signal hostIpEncode_rsp_V_1_sel : STD_LOGIC;
    signal hostIpEncode_rsp_V_1_load_A : STD_LOGIC;
    signal hostIpEncode_rsp_V_1_load_B : STD_LOGIC;
    signal hostIpEncode_rsp_V_1_state_cmp_full : STD_LOGIC;
    signal arpTable_ipAddress_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal arpTable_ipAddress_V_ce0 : STD_LOGIC;
    signal arpTable_ipAddress_V_we0 : STD_LOGIC;
    signal arpTable_ipAddress_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arpTable_macAddress_s_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal arpTable_macAddress_s_ce0 : STD_LOGIC;
    signal arpTable_macAddress_s_we0 : STD_LOGIC;
    signal arpTable_macAddress_s_d0 : STD_LOGIC_VECTOR (47 downto 0);
    signal arpTable_macAddress_s_q0 : STD_LOGIC_VECTOR (47 downto 0);
    signal arpTable_valid_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal arpTable_valid_ce0 : STD_LOGIC;
    signal arpTable_valid_we0 : STD_LOGIC;
    signal arpTable_valid_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal arpTable_valid_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal macIpEncode_req_V_V_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal hostIpEncode_req_V_V_TDATA_blk_n : STD_LOGIC;
    signal macIpEncode_rsp_V_TDATA_blk_n : STD_LOGIC;
    signal hostIpEncode_rsp_V_TDATA_blk_n : STD_LOGIC;
    signal arpTableInsertFifo_V_blk_n : STD_LOGIC;
    signal arpRequestMetaFifo_V_blk_n : STD_LOGIC;
    signal tmp_V_2_reg_332 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_2_reg_332_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_reg_347 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_reg_347_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln163_1_fu_302_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal sext_ln163_fu_315_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln681_2_fu_230_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln681_1_fu_246_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln681_fu_287_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal p_Result_5_i_fu_220_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_4_i_fu_236_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_i_fu_277_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_294_p3 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_1_fu_307_p3 : STD_LOGIC_VECTOR (48 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0 : BOOLEAN;
    signal ap_enable_operation_33 : BOOLEAN;
    signal ap_enable_state1_pp0_iter0_stage0 : BOOLEAN;
    signal ap_predicate_op14_load_state1 : BOOLEAN;
    signal ap_enable_operation_14 : BOOLEAN;
    signal ap_predicate_op36_load_state2 : BOOLEAN;
    signal ap_enable_operation_36 : BOOLEAN;
    signal ap_enable_state2_pp0_iter1_stage0 : BOOLEAN;
    signal ap_predicate_op21_load_state1 : BOOLEAN;
    signal ap_enable_operation_21 : BOOLEAN;
    signal ap_predicate_op42_load_state2 : BOOLEAN;
    signal ap_enable_operation_42 : BOOLEAN;
    signal ap_enable_operation_35 : BOOLEAN;
    signal ap_predicate_op16_load_state1 : BOOLEAN;
    signal ap_enable_operation_16 : BOOLEAN;
    signal ap_predicate_op37_load_state2 : BOOLEAN;
    signal ap_enable_operation_37 : BOOLEAN;
    signal ap_predicate_op23_load_state1 : BOOLEAN;
    signal ap_enable_operation_23 : BOOLEAN;
    signal ap_predicate_op43_load_state2 : BOOLEAN;
    signal ap_enable_operation_43 : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_47 : BOOLEAN;
    signal ap_condition_309 : BOOLEAN;

    component arp_table_arpTable_ipAddress_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component arp_table_arpTable_macAddress_s IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (47 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (47 downto 0) );
    end component;


    component arp_table_arpTable_valid IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    arpTable_ipAddress_V_U : component arp_table_arpTable_ipAddress_V
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arpTable_ipAddress_V_address0,
        ce0 => arpTable_ipAddress_V_ce0,
        we0 => arpTable_ipAddress_V_we0,
        d0 => arpTable_ipAddress_V_d0);

    arpTable_macAddress_s_U : component arp_table_arpTable_macAddress_s
    generic map (
        DataWidth => 48,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arpTable_macAddress_s_address0,
        ce0 => arpTable_macAddress_s_ce0,
        we0 => arpTable_macAddress_s_we0,
        d0 => arpTable_macAddress_s_d0,
        q0 => arpTable_macAddress_s_q0);

    arpTable_valid_U : component arp_table_arpTable_valid
    generic map (
        DataWidth => 1,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arpTable_valid_address0,
        ce0 => arpTable_valid_ce0,
        we0 => arpTable_valid_we0,
        d0 => arpTable_valid_d0,
        q0 => arpTable_valid_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    hostIpEncode_rsp_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                hostIpEncode_rsp_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((hostIpEncode_rsp_V_1_vld_out = ap_const_logic_1) and (hostIpEncode_rsp_V_1_ack_out = ap_const_logic_1))) then 
                                        hostIpEncode_rsp_V_1_sel_rd <= not(hostIpEncode_rsp_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    hostIpEncode_rsp_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                hostIpEncode_rsp_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((hostIpEncode_rsp_V_1_ack_in = ap_const_logic_1) and (hostIpEncode_rsp_V_1_vld_in = ap_const_logic_1))) then 
                                        hostIpEncode_rsp_V_1_sel_wr <= not(hostIpEncode_rsp_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    hostIpEncode_rsp_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                hostIpEncode_rsp_V_1_state <= ap_const_lv2_0;
            else
                if ((((hostIpEncode_rsp_V_1_vld_in = ap_const_logic_0) and (hostIpEncode_rsp_V_1_ack_out = ap_const_logic_1) and (hostIpEncode_rsp_V_1_state = ap_const_lv2_3)) or ((hostIpEncode_rsp_V_1_vld_in = ap_const_logic_0) and (hostIpEncode_rsp_V_1_state = ap_const_lv2_2)))) then 
                    hostIpEncode_rsp_V_1_state <= ap_const_lv2_2;
                elsif ((((hostIpEncode_rsp_V_TREADY = ap_const_logic_0) and (hostIpEncode_rsp_V_1_state = ap_const_lv2_1)) or ((hostIpEncode_rsp_V_TREADY = ap_const_logic_0) and (hostIpEncode_rsp_V_1_vld_in = ap_const_logic_1) and (hostIpEncode_rsp_V_1_state = ap_const_lv2_3)))) then 
                    hostIpEncode_rsp_V_1_state <= ap_const_lv2_1;
                elsif ((((hostIpEncode_rsp_V_1_ack_out = ap_const_logic_1) and (hostIpEncode_rsp_V_1_state = ap_const_lv2_1)) or (not(((hostIpEncode_rsp_V_1_vld_in = ap_const_logic_0) and (hostIpEncode_rsp_V_1_ack_out = ap_const_logic_1))) and not(((hostIpEncode_rsp_V_TREADY = ap_const_logic_0) and (hostIpEncode_rsp_V_1_vld_in = ap_const_logic_1))) and (hostIpEncode_rsp_V_1_state = ap_const_lv2_3)) or ((hostIpEncode_rsp_V_1_vld_in = ap_const_logic_1) and (hostIpEncode_rsp_V_1_state = ap_const_lv2_2)))) then 
                    hostIpEncode_rsp_V_1_state <= ap_const_lv2_3;
                else 
                    hostIpEncode_rsp_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    macIpEncode_rsp_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                macIpEncode_rsp_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((macIpEncode_rsp_V_1_vld_out = ap_const_logic_1) and (macIpEncode_rsp_V_1_ack_out = ap_const_logic_1))) then 
                                        macIpEncode_rsp_V_1_sel_rd <= not(macIpEncode_rsp_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    macIpEncode_rsp_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                macIpEncode_rsp_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((macIpEncode_rsp_V_1_ack_in = ap_const_logic_1) and (macIpEncode_rsp_V_1_vld_in = ap_const_logic_1))) then 
                                        macIpEncode_rsp_V_1_sel_wr <= not(macIpEncode_rsp_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    macIpEncode_rsp_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                macIpEncode_rsp_V_1_state <= ap_const_lv2_0;
            else
                if ((((macIpEncode_rsp_V_1_vld_in = ap_const_logic_0) and (macIpEncode_rsp_V_1_ack_out = ap_const_logic_1) and (macIpEncode_rsp_V_1_state = ap_const_lv2_3)) or ((macIpEncode_rsp_V_1_vld_in = ap_const_logic_0) and (macIpEncode_rsp_V_1_state = ap_const_lv2_2)))) then 
                    macIpEncode_rsp_V_1_state <= ap_const_lv2_2;
                elsif ((((macIpEncode_rsp_V_TREADY = ap_const_logic_0) and (macIpEncode_rsp_V_1_state = ap_const_lv2_1)) or ((macIpEncode_rsp_V_TREADY = ap_const_logic_0) and (macIpEncode_rsp_V_1_vld_in = ap_const_logic_1) and (macIpEncode_rsp_V_1_state = ap_const_lv2_3)))) then 
                    macIpEncode_rsp_V_1_state <= ap_const_lv2_1;
                elsif ((((macIpEncode_rsp_V_1_ack_out = ap_const_logic_1) and (macIpEncode_rsp_V_1_state = ap_const_lv2_1)) or (not(((macIpEncode_rsp_V_1_vld_in = ap_const_logic_0) and (macIpEncode_rsp_V_1_ack_out = ap_const_logic_1))) and not(((macIpEncode_rsp_V_TREADY = ap_const_logic_0) and (macIpEncode_rsp_V_1_vld_in = ap_const_logic_1))) and (macIpEncode_rsp_V_1_state = ap_const_lv2_3)) or ((macIpEncode_rsp_V_1_vld_in = ap_const_logic_1) and (macIpEncode_rsp_V_1_state = ap_const_lv2_2)))) then 
                    macIpEncode_rsp_V_1_state <= ap_const_lv2_3;
                else 
                    macIpEncode_rsp_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((hostIpEncode_rsp_V_1_load_A = ap_const_logic_1)) then
                hostIpEncode_rsp_V_1_payload_A <= sext_ln163_1_fu_302_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((hostIpEncode_rsp_V_1_load_B = ap_const_logic_1)) then
                hostIpEncode_rsp_V_1_payload_B <= sext_ln163_1_fu_302_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((macIpEncode_rsp_V_1_load_A = ap_const_logic_1)) then
                macIpEncode_rsp_V_1_payload_A <= sext_ln163_fu_315_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((macIpEncode_rsp_V_1_load_B = ap_const_logic_1)) then
                macIpEncode_rsp_V_1_payload_B <= sext_ln163_fu_315_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_nbreadreq_fu_86_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_4_reg_324 <= tmp_4_nbreadreq_fu_94_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_4_reg_324_pp0_iter1_reg <= tmp_4_reg_324;
                tmp_5_reg_328_pp0_iter1_reg <= tmp_5_reg_328;
                tmp_V_2_reg_332_pp0_iter1_reg <= tmp_V_2_reg_332;
                tmp_V_reg_347_pp0_iter1_reg <= tmp_V_reg_347;
                tmp_reg_320 <= tmp_nbreadreq_fu_86_p3;
                tmp_reg_320_pp0_iter1_reg <= tmp_reg_320;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_nbreadreq_fu_94_p3 = ap_const_lv1_0) and (tmp_nbreadreq_fu_86_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_5_reg_328 <= tmp_5_nbreadreq_fu_102_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op10_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_V_2_reg_332 <= hostIpEncode_req_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op17_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_V_reg_347 <= macIpEncode_req_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_5_reg_328 = ap_const_lv1_1) and (tmp_4_reg_324 = ap_const_lv1_0) and (tmp_reg_320 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_hit_1_reg_362 <= arpTable_valid_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_324 = ap_const_lv1_1) and (tmp_reg_320 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_hit_reg_371 <= arpTable_valid_q0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter2, hostIpEncode_req_V_V_TVALID, tmp_nbreadreq_fu_86_p3, ap_predicate_op10_read_state1, macIpEncode_req_V_V_TVALID, ap_predicate_op17_read_state1, arpTableInsertFifo_V_empty_n, hostIpEncode_rsp_V_TREADY, macIpEncode_rsp_V_TREADY, arpRequestMetaFifo_V_full_n, ap_predicate_op56_write_state3, ap_predicate_op61_write_state3, macIpEncode_rsp_V_1_state, hostIpEncode_rsp_V_1_state)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_86_p3 = ap_const_lv1_1) and (arpTableInsertFifo_V_empty_n = ap_const_logic_0)) or ((macIpEncode_req_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op17_read_state1 = ap_const_boolean_1)) or ((hostIpEncode_req_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op10_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((hostIpEncode_rsp_V_1_state = ap_const_lv2_1) or (macIpEncode_rsp_V_1_state = ap_const_lv2_1) or ((hostIpEncode_rsp_V_TREADY = ap_const_logic_0) and (hostIpEncode_rsp_V_1_state = ap_const_lv2_3)) or ((macIpEncode_rsp_V_TREADY = ap_const_logic_0) and (macIpEncode_rsp_V_1_state = ap_const_lv2_3)) or ((arpRequestMetaFifo_V_full_n = ap_const_logic_0) and (ap_predicate_op61_write_state3 = ap_const_boolean_1)) or ((arpRequestMetaFifo_V_full_n = ap_const_logic_0) and (ap_predicate_op56_write_state3 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, hostIpEncode_req_V_V_TVALID, tmp_nbreadreq_fu_86_p3, ap_predicate_op10_read_state1, macIpEncode_req_V_V_TVALID, ap_predicate_op17_read_state1, arpTableInsertFifo_V_empty_n, hostIpEncode_rsp_V_TREADY, macIpEncode_rsp_V_TREADY, ap_block_state2_io, arpRequestMetaFifo_V_full_n, ap_predicate_op56_write_state3, ap_predicate_op61_write_state3, macIpEncode_rsp_V_1_state, hostIpEncode_rsp_V_1_state, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_86_p3 = ap_const_lv1_1) and (arpTableInsertFifo_V_empty_n = ap_const_logic_0)) or ((macIpEncode_req_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op17_read_state1 = ap_const_boolean_1)) or ((hostIpEncode_req_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op10_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or (hostIpEncode_rsp_V_1_state = ap_const_lv2_1) or (macIpEncode_rsp_V_1_state = ap_const_lv2_1) or ((hostIpEncode_rsp_V_TREADY = ap_const_logic_0) and (hostIpEncode_rsp_V_1_state = ap_const_lv2_3)) or ((macIpEncode_rsp_V_TREADY = ap_const_logic_0) and (macIpEncode_rsp_V_1_state = ap_const_lv2_3)) or ((arpRequestMetaFifo_V_full_n = ap_const_logic_0) and (ap_predicate_op61_write_state3 = ap_const_boolean_1)) or ((arpRequestMetaFifo_V_full_n = ap_const_logic_0) and (ap_predicate_op56_write_state3 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, hostIpEncode_req_V_V_TVALID, tmp_nbreadreq_fu_86_p3, ap_predicate_op10_read_state1, macIpEncode_req_V_V_TVALID, ap_predicate_op17_read_state1, arpTableInsertFifo_V_empty_n, hostIpEncode_rsp_V_TREADY, macIpEncode_rsp_V_TREADY, ap_block_state2_io, arpRequestMetaFifo_V_full_n, ap_predicate_op56_write_state3, ap_predicate_op61_write_state3, macIpEncode_rsp_V_1_state, hostIpEncode_rsp_V_1_state, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_86_p3 = ap_const_lv1_1) and (arpTableInsertFifo_V_empty_n = ap_const_logic_0)) or ((macIpEncode_req_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op17_read_state1 = ap_const_boolean_1)) or ((hostIpEncode_req_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op10_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or (hostIpEncode_rsp_V_1_state = ap_const_lv2_1) or (macIpEncode_rsp_V_1_state = ap_const_lv2_1) or ((hostIpEncode_rsp_V_TREADY = ap_const_logic_0) and (hostIpEncode_rsp_V_1_state = ap_const_lv2_3)) or ((macIpEncode_rsp_V_TREADY = ap_const_logic_0) and (macIpEncode_rsp_V_1_state = ap_const_lv2_3)) or ((arpRequestMetaFifo_V_full_n = ap_const_logic_0) and (ap_predicate_op61_write_state3 = ap_const_boolean_1)) or ((arpRequestMetaFifo_V_full_n = ap_const_logic_0) and (ap_predicate_op56_write_state3 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg, hostIpEncode_req_V_V_TVALID, tmp_nbreadreq_fu_86_p3, ap_predicate_op10_read_state1, macIpEncode_req_V_V_TVALID, ap_predicate_op17_read_state1, arpTableInsertFifo_V_empty_n)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_86_p3 = ap_const_lv1_1) and (arpTableInsertFifo_V_empty_n = ap_const_logic_0)) or ((macIpEncode_req_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op17_read_state1 = ap_const_boolean_1)) or ((hostIpEncode_req_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op10_read_state1 = ap_const_boolean_1)));
    end process;


    ap_block_state2_io_assign_proc : process(hostIpEncode_rsp_V_1_ack_in, ap_predicate_op41_write_state2, macIpEncode_rsp_V_1_ack_in, ap_predicate_op47_write_state2)
    begin
                ap_block_state2_io <= (((macIpEncode_rsp_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op47_write_state2 = ap_const_boolean_1)) or ((hostIpEncode_rsp_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op41_write_state2 = ap_const_boolean_1)));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_io_assign_proc : process(hostIpEncode_rsp_V_1_ack_in, macIpEncode_rsp_V_1_ack_in, ap_predicate_op58_write_state3, ap_predicate_op63_write_state3)
    begin
                ap_block_state3_io <= (((macIpEncode_rsp_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op63_write_state3 = ap_const_boolean_1)) or ((hostIpEncode_rsp_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op58_write_state3 = ap_const_boolean_1)));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(hostIpEncode_rsp_V_TREADY, macIpEncode_rsp_V_TREADY, arpRequestMetaFifo_V_full_n, ap_predicate_op56_write_state3, ap_predicate_op61_write_state3, macIpEncode_rsp_V_1_state, hostIpEncode_rsp_V_1_state)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((hostIpEncode_rsp_V_1_state = ap_const_lv2_1) or (macIpEncode_rsp_V_1_state = ap_const_lv2_1) or ((hostIpEncode_rsp_V_TREADY = ap_const_logic_0) and (hostIpEncode_rsp_V_1_state = ap_const_lv2_3)) or ((macIpEncode_rsp_V_TREADY = ap_const_logic_0) and (macIpEncode_rsp_V_1_state = ap_const_lv2_3)) or ((arpRequestMetaFifo_V_full_n = ap_const_logic_0) and (ap_predicate_op61_write_state3 = ap_const_boolean_1)) or ((arpRequestMetaFifo_V_full_n = ap_const_logic_0) and (ap_predicate_op56_write_state3 = ap_const_boolean_1)));
    end process;


    ap_condition_309_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
                ap_condition_309 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_47_assign_proc : process(tmp_nbreadreq_fu_86_p3, tmp_4_nbreadreq_fu_94_p3, tmp_5_nbreadreq_fu_102_p3)
    begin
                ap_condition_47 <= ((tmp_5_nbreadreq_fu_102_p3 = ap_const_lv1_1) and (tmp_4_nbreadreq_fu_94_p3 = ap_const_lv1_0) and (tmp_nbreadreq_fu_86_p3 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_enable_operation_14_assign_proc : process(ap_predicate_op14_load_state1)
    begin
                ap_enable_operation_14 <= (ap_predicate_op14_load_state1 = ap_const_boolean_1);
    end process;


    ap_enable_operation_16_assign_proc : process(ap_predicate_op16_load_state1)
    begin
                ap_enable_operation_16 <= (ap_predicate_op16_load_state1 = ap_const_boolean_1);
    end process;


    ap_enable_operation_21_assign_proc : process(ap_predicate_op21_load_state1)
    begin
                ap_enable_operation_21 <= (ap_predicate_op21_load_state1 = ap_const_boolean_1);
    end process;


    ap_enable_operation_23_assign_proc : process(ap_predicate_op23_load_state1)
    begin
                ap_enable_operation_23 <= (ap_predicate_op23_load_state1 = ap_const_boolean_1);
    end process;


    ap_enable_operation_33_assign_proc : process(tmp_nbreadreq_fu_86_p3)
    begin
                ap_enable_operation_33 <= (tmp_nbreadreq_fu_86_p3 = ap_const_lv1_1);
    end process;


    ap_enable_operation_35_assign_proc : process(tmp_nbreadreq_fu_86_p3)
    begin
                ap_enable_operation_35 <= (tmp_nbreadreq_fu_86_p3 = ap_const_lv1_1);
    end process;


    ap_enable_operation_36_assign_proc : process(ap_predicate_op36_load_state2)
    begin
                ap_enable_operation_36 <= (ap_predicate_op36_load_state2 = ap_const_boolean_1);
    end process;


    ap_enable_operation_37_assign_proc : process(ap_predicate_op37_load_state2)
    begin
                ap_enable_operation_37 <= (ap_predicate_op37_load_state2 = ap_const_boolean_1);
    end process;


    ap_enable_operation_42_assign_proc : process(ap_predicate_op42_load_state2)
    begin
                ap_enable_operation_42 <= (ap_predicate_op42_load_state2 = ap_const_boolean_1);
    end process;


    ap_enable_operation_43_assign_proc : process(ap_predicate_op43_load_state2)
    begin
                ap_enable_operation_43 <= (ap_predicate_op43_load_state2 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_enable_state1_pp0_iter0_stage0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0)
    begin
                ap_enable_state1_pp0_iter0_stage0 <= ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state2_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state2_pp0_iter1_stage0 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op10_read_state1_assign_proc : process(tmp_nbreadreq_fu_86_p3, tmp_4_nbreadreq_fu_94_p3, tmp_5_nbreadreq_fu_102_p3)
    begin
                ap_predicate_op10_read_state1 <= ((tmp_5_nbreadreq_fu_102_p3 = ap_const_lv1_1) and (tmp_4_nbreadreq_fu_94_p3 = ap_const_lv1_0) and (tmp_nbreadreq_fu_86_p3 = ap_const_lv1_0));
    end process;


    ap_predicate_op14_load_state1_assign_proc : process(tmp_nbreadreq_fu_86_p3, tmp_4_nbreadreq_fu_94_p3, tmp_5_nbreadreq_fu_102_p3)
    begin
                ap_predicate_op14_load_state1 <= ((tmp_5_nbreadreq_fu_102_p3 = ap_const_lv1_1) and (tmp_4_nbreadreq_fu_94_p3 = ap_const_lv1_0) and (tmp_nbreadreq_fu_86_p3 = ap_const_lv1_0));
    end process;


    ap_predicate_op16_load_state1_assign_proc : process(tmp_nbreadreq_fu_86_p3, tmp_4_nbreadreq_fu_94_p3, tmp_5_nbreadreq_fu_102_p3)
    begin
                ap_predicate_op16_load_state1 <= ((tmp_5_nbreadreq_fu_102_p3 = ap_const_lv1_1) and (tmp_4_nbreadreq_fu_94_p3 = ap_const_lv1_0) and (tmp_nbreadreq_fu_86_p3 = ap_const_lv1_0));
    end process;


    ap_predicate_op17_read_state1_assign_proc : process(tmp_nbreadreq_fu_86_p3, tmp_4_nbreadreq_fu_94_p3)
    begin
                ap_predicate_op17_read_state1 <= ((tmp_4_nbreadreq_fu_94_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_86_p3 = ap_const_lv1_0));
    end process;


    ap_predicate_op21_load_state1_assign_proc : process(tmp_nbreadreq_fu_86_p3, tmp_4_nbreadreq_fu_94_p3)
    begin
                ap_predicate_op21_load_state1 <= ((tmp_4_nbreadreq_fu_94_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_86_p3 = ap_const_lv1_0));
    end process;


    ap_predicate_op23_load_state1_assign_proc : process(tmp_nbreadreq_fu_86_p3, tmp_4_nbreadreq_fu_94_p3)
    begin
                ap_predicate_op23_load_state1 <= ((tmp_4_nbreadreq_fu_94_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_86_p3 = ap_const_lv1_0));
    end process;


    ap_predicate_op36_load_state2_assign_proc : process(tmp_reg_320, tmp_4_reg_324, tmp_5_reg_328)
    begin
                ap_predicate_op36_load_state2 <= ((tmp_5_reg_328 = ap_const_lv1_1) and (tmp_4_reg_324 = ap_const_lv1_0) and (tmp_reg_320 = ap_const_lv1_0));
    end process;


    ap_predicate_op37_load_state2_assign_proc : process(tmp_reg_320, tmp_4_reg_324, tmp_5_reg_328)
    begin
                ap_predicate_op37_load_state2 <= ((tmp_5_reg_328 = ap_const_lv1_1) and (tmp_4_reg_324 = ap_const_lv1_0) and (tmp_reg_320 = ap_const_lv1_0));
    end process;


    ap_predicate_op41_write_state2_assign_proc : process(tmp_reg_320, tmp_4_reg_324, tmp_5_reg_328)
    begin
                ap_predicate_op41_write_state2 <= ((tmp_5_reg_328 = ap_const_lv1_1) and (tmp_4_reg_324 = ap_const_lv1_0) and (tmp_reg_320 = ap_const_lv1_0));
    end process;


    ap_predicate_op42_load_state2_assign_proc : process(tmp_reg_320, tmp_4_reg_324)
    begin
                ap_predicate_op42_load_state2 <= ((tmp_4_reg_324 = ap_const_lv1_1) and (tmp_reg_320 = ap_const_lv1_0));
    end process;


    ap_predicate_op43_load_state2_assign_proc : process(tmp_reg_320, tmp_4_reg_324)
    begin
                ap_predicate_op43_load_state2 <= ((tmp_4_reg_324 = ap_const_lv1_1) and (tmp_reg_320 = ap_const_lv1_0));
    end process;


    ap_predicate_op47_write_state2_assign_proc : process(tmp_reg_320, tmp_4_reg_324)
    begin
                ap_predicate_op47_write_state2 <= ((tmp_4_reg_324 = ap_const_lv1_1) and (tmp_reg_320 = ap_const_lv1_0));
    end process;


    ap_predicate_op56_write_state3_assign_proc : process(tmp_reg_320_pp0_iter1_reg, tmp_4_reg_324_pp0_iter1_reg, tmp_5_reg_328_pp0_iter1_reg, tmp_hit_1_reg_362)
    begin
                ap_predicate_op56_write_state3 <= ((tmp_5_reg_328_pp0_iter1_reg = ap_const_lv1_1) and (tmp_hit_1_reg_362 = ap_const_lv1_0) and (tmp_4_reg_324_pp0_iter1_reg = ap_const_lv1_0) and (tmp_reg_320_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op58_write_state3_assign_proc : process(tmp_reg_320_pp0_iter1_reg, tmp_4_reg_324_pp0_iter1_reg, tmp_5_reg_328_pp0_iter1_reg)
    begin
                ap_predicate_op58_write_state3 <= ((tmp_5_reg_328_pp0_iter1_reg = ap_const_lv1_1) and (tmp_4_reg_324_pp0_iter1_reg = ap_const_lv1_0) and (tmp_reg_320_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op61_write_state3_assign_proc : process(tmp_reg_320_pp0_iter1_reg, tmp_4_reg_324_pp0_iter1_reg, tmp_hit_reg_371)
    begin
                ap_predicate_op61_write_state3 <= ((tmp_4_reg_324_pp0_iter1_reg = ap_const_lv1_1) and (tmp_hit_reg_371 = ap_const_lv1_0) and (tmp_reg_320_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op63_write_state3_assign_proc : process(tmp_reg_320_pp0_iter1_reg, tmp_4_reg_324_pp0_iter1_reg)
    begin
                ap_predicate_op63_write_state3 <= ((tmp_4_reg_324_pp0_iter1_reg = ap_const_lv1_1) and (tmp_reg_320_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    arpRequestMetaFifo_V_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, arpRequestMetaFifo_V_full_n, ap_predicate_op56_write_state3, ap_predicate_op61_write_state3, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op61_write_state3 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op56_write_state3 = ap_const_boolean_1)))) then 
            arpRequestMetaFifo_V_blk_n <= arpRequestMetaFifo_V_full_n;
        else 
            arpRequestMetaFifo_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    arpRequestMetaFifo_V_din_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op56_write_state3, ap_predicate_op61_write_state3, tmp_V_2_reg_332_pp0_iter1_reg, tmp_V_reg_347_pp0_iter1_reg, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((ap_predicate_op61_write_state3 = ap_const_boolean_1)) then 
                arpRequestMetaFifo_V_din <= tmp_V_reg_347_pp0_iter1_reg;
            elsif ((ap_predicate_op56_write_state3 = ap_const_boolean_1)) then 
                arpRequestMetaFifo_V_din <= tmp_V_2_reg_332_pp0_iter1_reg;
            else 
                arpRequestMetaFifo_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            arpRequestMetaFifo_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    arpRequestMetaFifo_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op56_write_state3, ap_predicate_op61_write_state3, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op61_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op56_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            arpRequestMetaFifo_V_write <= ap_const_logic_1;
        else 
            arpRequestMetaFifo_V_write <= ap_const_logic_0;
        end if; 
    end process;


    arpTableInsertFifo_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_86_p3, arpTableInsertFifo_V_empty_n, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (tmp_nbreadreq_fu_86_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            arpTableInsertFifo_V_blk_n <= arpTableInsertFifo_V_empty_n;
        else 
            arpTableInsertFifo_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    arpTableInsertFifo_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_86_p3, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_nbreadreq_fu_86_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            arpTableInsertFifo_V_read <= ap_const_logic_1;
        else 
            arpTableInsertFifo_V_read <= ap_const_logic_0;
        end if; 
    end process;

    arpTable_ipAddress_V_address0 <= zext_ln681_fu_287_p1(8 - 1 downto 0);

    arpTable_ipAddress_V_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            arpTable_ipAddress_V_ce0 <= ap_const_logic_1;
        else 
            arpTable_ipAddress_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arpTable_ipAddress_V_d0 <= arpTableInsertFifo_V_dout(32 - 1 downto 0);

    arpTable_ipAddress_V_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_86_p3, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_nbreadreq_fu_86_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            arpTable_ipAddress_V_we0 <= ap_const_logic_1;
        else 
            arpTable_ipAddress_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    arpTable_macAddress_s_address0_assign_proc : process(tmp_nbreadreq_fu_86_p3, tmp_4_nbreadreq_fu_94_p3, zext_ln681_2_fu_230_p1, zext_ln681_1_fu_246_p1, zext_ln681_fu_287_p1, ap_condition_47, ap_condition_309)
    begin
        if ((ap_const_boolean_1 = ap_condition_309)) then
            if ((tmp_nbreadreq_fu_86_p3 = ap_const_lv1_1)) then 
                arpTable_macAddress_s_address0 <= zext_ln681_fu_287_p1(8 - 1 downto 0);
            elsif (((tmp_4_nbreadreq_fu_94_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_86_p3 = ap_const_lv1_0))) then 
                arpTable_macAddress_s_address0 <= zext_ln681_1_fu_246_p1(8 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_47)) then 
                arpTable_macAddress_s_address0 <= zext_ln681_2_fu_230_p1(8 - 1 downto 0);
            else 
                arpTable_macAddress_s_address0 <= "XXXXXXXX";
            end if;
        else 
            arpTable_macAddress_s_address0 <= "XXXXXXXX";
        end if; 
    end process;


    arpTable_macAddress_s_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_86_p3, tmp_4_nbreadreq_fu_94_p3, tmp_5_nbreadreq_fu_102_p3, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_nbreadreq_fu_86_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_4_nbreadreq_fu_94_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_86_p3 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_5_nbreadreq_fu_102_p3 = ap_const_lv1_1) and (tmp_4_nbreadreq_fu_94_p3 = ap_const_lv1_0) and (tmp_nbreadreq_fu_86_p3 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            arpTable_macAddress_s_ce0 <= ap_const_logic_1;
        else 
            arpTable_macAddress_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arpTable_macAddress_s_d0 <= arpTableInsertFifo_V_dout(79 downto 32);

    arpTable_macAddress_s_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_86_p3, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_nbreadreq_fu_86_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            arpTable_macAddress_s_we0 <= ap_const_logic_1;
        else 
            arpTable_macAddress_s_we0 <= ap_const_logic_0;
        end if; 
    end process;


    arpTable_valid_address0_assign_proc : process(tmp_nbreadreq_fu_86_p3, tmp_4_nbreadreq_fu_94_p3, zext_ln681_2_fu_230_p1, zext_ln681_1_fu_246_p1, zext_ln681_fu_287_p1, ap_condition_47, ap_condition_309)
    begin
        if ((ap_const_boolean_1 = ap_condition_309)) then
            if ((tmp_nbreadreq_fu_86_p3 = ap_const_lv1_1)) then 
                arpTable_valid_address0 <= zext_ln681_fu_287_p1(8 - 1 downto 0);
            elsif (((tmp_4_nbreadreq_fu_94_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_86_p3 = ap_const_lv1_0))) then 
                arpTable_valid_address0 <= zext_ln681_1_fu_246_p1(8 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_47)) then 
                arpTable_valid_address0 <= zext_ln681_2_fu_230_p1(8 - 1 downto 0);
            else 
                arpTable_valid_address0 <= "XXXXXXXX";
            end if;
        else 
            arpTable_valid_address0 <= "XXXXXXXX";
        end if; 
    end process;


    arpTable_valid_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_86_p3, tmp_4_nbreadreq_fu_94_p3, tmp_5_nbreadreq_fu_102_p3, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_nbreadreq_fu_86_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_4_nbreadreq_fu_94_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_86_p3 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_5_nbreadreq_fu_102_p3 = ap_const_lv1_1) and (tmp_4_nbreadreq_fu_94_p3 = ap_const_lv1_0) and (tmp_nbreadreq_fu_86_p3 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            arpTable_valid_ce0 <= ap_const_logic_1;
        else 
            arpTable_valid_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arpTable_valid_d0 <= arpTableInsertFifo_V_dout(80 downto 80);

    arpTable_valid_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_86_p3, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_nbreadreq_fu_86_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            arpTable_valid_we0 <= ap_const_logic_1;
        else 
            arpTable_valid_we0 <= ap_const_logic_0;
        end if; 
    end process;


    hostIpEncode_req_V_V_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, hostIpEncode_req_V_V_TVALID, ap_predicate_op10_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op10_read_state1 = ap_const_boolean_1))) then 
            hostIpEncode_req_V_V_TDATA_blk_n <= hostIpEncode_req_V_V_TVALID;
        else 
            hostIpEncode_req_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    hostIpEncode_req_V_V_TREADY_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op10_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op10_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            hostIpEncode_req_V_V_TREADY <= ap_const_logic_1;
        else 
            hostIpEncode_req_V_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    hostIpEncode_rsp_V_1_ack_in <= hostIpEncode_rsp_V_1_state(1);
    hostIpEncode_rsp_V_1_ack_out <= hostIpEncode_rsp_V_TREADY;

    hostIpEncode_rsp_V_1_data_out_assign_proc : process(hostIpEncode_rsp_V_1_payload_A, hostIpEncode_rsp_V_1_payload_B, hostIpEncode_rsp_V_1_sel)
    begin
        if ((hostIpEncode_rsp_V_1_sel = ap_const_logic_1)) then 
            hostIpEncode_rsp_V_1_data_out <= hostIpEncode_rsp_V_1_payload_B;
        else 
            hostIpEncode_rsp_V_1_data_out <= hostIpEncode_rsp_V_1_payload_A;
        end if; 
    end process;

    hostIpEncode_rsp_V_1_load_A <= (hostIpEncode_rsp_V_1_state_cmp_full and not(hostIpEncode_rsp_V_1_sel_wr));
    hostIpEncode_rsp_V_1_load_B <= (hostIpEncode_rsp_V_1_state_cmp_full and hostIpEncode_rsp_V_1_sel_wr);
    hostIpEncode_rsp_V_1_sel <= hostIpEncode_rsp_V_1_sel_rd;
    hostIpEncode_rsp_V_1_state_cmp_full <= '0' when (hostIpEncode_rsp_V_1_state = ap_const_lv2_1) else '1';

    hostIpEncode_rsp_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op41_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op41_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            hostIpEncode_rsp_V_1_vld_in <= ap_const_logic_1;
        else 
            hostIpEncode_rsp_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    hostIpEncode_rsp_V_1_vld_out <= hostIpEncode_rsp_V_1_state(0);
    hostIpEncode_rsp_V_TDATA <= hostIpEncode_rsp_V_1_data_out;

    hostIpEncode_rsp_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_predicate_op41_write_state2, hostIpEncode_rsp_V_1_state, ap_predicate_op58_write_state3, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op41_write_state2 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op58_write_state3 = ap_const_boolean_1)))) then 
            hostIpEncode_rsp_V_TDATA_blk_n <= hostIpEncode_rsp_V_1_state(1);
        else 
            hostIpEncode_rsp_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    hostIpEncode_rsp_V_TVALID <= hostIpEncode_rsp_V_1_state(0);

    macIpEncode_req_V_V_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, macIpEncode_req_V_V_TVALID, ap_predicate_op17_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op17_read_state1 = ap_const_boolean_1))) then 
            macIpEncode_req_V_V_TDATA_blk_n <= macIpEncode_req_V_V_TVALID;
        else 
            macIpEncode_req_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    macIpEncode_req_V_V_TREADY_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op17_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op17_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            macIpEncode_req_V_V_TREADY <= ap_const_logic_1;
        else 
            macIpEncode_req_V_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    macIpEncode_rsp_V_1_ack_in <= macIpEncode_rsp_V_1_state(1);
    macIpEncode_rsp_V_1_ack_out <= macIpEncode_rsp_V_TREADY;

    macIpEncode_rsp_V_1_data_out_assign_proc : process(macIpEncode_rsp_V_1_payload_A, macIpEncode_rsp_V_1_payload_B, macIpEncode_rsp_V_1_sel)
    begin
        if ((macIpEncode_rsp_V_1_sel = ap_const_logic_1)) then 
            macIpEncode_rsp_V_1_data_out <= macIpEncode_rsp_V_1_payload_B;
        else 
            macIpEncode_rsp_V_1_data_out <= macIpEncode_rsp_V_1_payload_A;
        end if; 
    end process;

    macIpEncode_rsp_V_1_load_A <= (macIpEncode_rsp_V_1_state_cmp_full and not(macIpEncode_rsp_V_1_sel_wr));
    macIpEncode_rsp_V_1_load_B <= (macIpEncode_rsp_V_1_state_cmp_full and macIpEncode_rsp_V_1_sel_wr);
    macIpEncode_rsp_V_1_sel <= macIpEncode_rsp_V_1_sel_rd;
    macIpEncode_rsp_V_1_state_cmp_full <= '0' when (macIpEncode_rsp_V_1_state = ap_const_lv2_1) else '1';

    macIpEncode_rsp_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op47_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op47_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            macIpEncode_rsp_V_1_vld_in <= ap_const_logic_1;
        else 
            macIpEncode_rsp_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    macIpEncode_rsp_V_1_vld_out <= macIpEncode_rsp_V_1_state(0);
    macIpEncode_rsp_V_TDATA <= macIpEncode_rsp_V_1_data_out;

    macIpEncode_rsp_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_predicate_op47_write_state2, macIpEncode_rsp_V_1_state, ap_predicate_op63_write_state3, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op47_write_state2 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op63_write_state3 = ap_const_boolean_1)))) then 
            macIpEncode_rsp_V_TDATA_blk_n <= macIpEncode_rsp_V_1_state(1);
        else 
            macIpEncode_rsp_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    macIpEncode_rsp_V_TVALID <= macIpEncode_rsp_V_1_state(0);
    p_Result_4_i_fu_236_p4 <= macIpEncode_req_V_V_TDATA(31 downto 24);
    p_Result_5_i_fu_220_p4 <= hostIpEncode_req_V_V_TDATA(31 downto 24);
    p_Result_i_fu_277_p4 <= arpTableInsertFifo_V_dout(31 downto 24);
        sext_ln163_1_fu_302_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_fu_294_p3),56));

        sext_ln163_fu_315_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_fu_307_p3),56));

    tmp_1_fu_307_p3 <= (arpTable_valid_q0 & arpTable_macAddress_s_q0);
    tmp_2_fu_294_p3 <= (arpTable_valid_q0 & arpTable_macAddress_s_q0);
    tmp_4_nbreadreq_fu_94_p3 <= (0=>(macIpEncode_req_V_V_TVALID), others=>'-');
    tmp_5_nbreadreq_fu_102_p3 <= (0=>(hostIpEncode_req_V_V_TVALID), others=>'-');
    tmp_nbreadreq_fu_86_p3 <= (0=>(arpTableInsertFifo_V_empty_n), others=>'-');
    zext_ln681_1_fu_246_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_4_i_fu_236_p4),64));
    zext_ln681_2_fu_230_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_5_i_fu_220_p4),64));
    zext_ln681_fu_287_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_i_fu_277_p4),64));
end behav;
