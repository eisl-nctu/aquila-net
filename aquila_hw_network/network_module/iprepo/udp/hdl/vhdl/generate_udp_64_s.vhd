-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity generate_udp_64_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    tx_shift2udpFifo_V_d_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    tx_shift2udpFifo_V_d_empty_n : IN STD_LOGIC;
    tx_shift2udpFifo_V_d_read : OUT STD_LOGIC;
    tx_shift2udpFifo_V_k_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    tx_shift2udpFifo_V_k_empty_n : IN STD_LOGIC;
    tx_shift2udpFifo_V_k_read : OUT STD_LOGIC;
    tx_shift2udpFifo_V_l_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    tx_shift2udpFifo_V_l_empty_n : IN STD_LOGIC;
    tx_shift2udpFifo_V_l_read : OUT STD_LOGIC;
    tx_udpMetaFifo_V_the_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    tx_udpMetaFifo_V_the_empty_n : IN STD_LOGIC;
    tx_udpMetaFifo_V_the_read : OUT STD_LOGIC;
    tx_udpMetaFifo_V_my_s_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    tx_udpMetaFifo_V_my_s_empty_n : IN STD_LOGIC;
    tx_udpMetaFifo_V_my_s_read : OUT STD_LOGIC;
    tx_udpMetaFifo_V_len_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    tx_udpMetaFifo_V_len_empty_n : IN STD_LOGIC;
    tx_udpMetaFifo_V_len_read : OUT STD_LOGIC;
    tx_udpMetaFifo_V_val_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    tx_udpMetaFifo_V_val_empty_n : IN STD_LOGIC;
    tx_udpMetaFifo_V_val_read : OUT STD_LOGIC;
    m_axis_tx_data_TREADY : IN STD_LOGIC;
    m_axis_tx_data_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axis_tx_data_TVALID : OUT STD_LOGIC;
    m_axis_tx_data_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axis_tx_data_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of generate_udp_64_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv23_40 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000001000000";
    constant ap_const_lv23_41 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000001000001";
    constant ap_const_lv22_3F : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000111111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv7_3F : STD_LOGIC_VECTOR (6 downto 0) := "0111111";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv7_41 : STD_LOGIC_VECTOR (6 downto 0) := "1000001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal io_acc_block_signal_op8 : STD_LOGIC;
    signal state_load_load_fu_228_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_nbreadreq_fu_138_p5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op8_read_state1 : BOOLEAN;
    signal io_acc_block_signal_op14 : STD_LOGIC;
    signal ap_predicate_op14_read_state1 : BOOLEAN;
    signal io_acc_block_signal_op94 : STD_LOGIC;
    signal tmp_nbreadreq_fu_160_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op94_read_state1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal output_V_data_V_1_ack_in : STD_LOGIC;
    signal state_load_reg_959 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_16_reg_963 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op115_write_state2 : BOOLEAN;
    signal tmp_9_reg_977 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op127_write_state2 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal output_V_data_V_1_ack_out : STD_LOGIC;
    signal output_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal output_V_keep_V_1_ack_out : STD_LOGIC;
    signal output_V_keep_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal output_V_last_V_1_ack_out : STD_LOGIC;
    signal output_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal state_load_reg_959_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_16_reg_963_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op152_write_state3 : BOOLEAN;
    signal tmp_9_reg_977_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op156_write_state3 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal output_V_data_V_1_data_in : STD_LOGIC_VECTOR (63 downto 0);
    signal output_V_data_V_1_data_out : STD_LOGIC_VECTOR (63 downto 0);
    signal output_V_data_V_1_vld_in : STD_LOGIC;
    signal output_V_data_V_1_vld_out : STD_LOGIC;
    signal output_V_data_V_1_payload_A : STD_LOGIC_VECTOR (63 downto 0);
    signal output_V_data_V_1_payload_B : STD_LOGIC_VECTOR (63 downto 0);
    signal output_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal output_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal output_V_data_V_1_sel : STD_LOGIC;
    signal output_V_data_V_1_load_A : STD_LOGIC;
    signal output_V_data_V_1_load_B : STD_LOGIC;
    signal output_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal output_V_keep_V_1_data_in : STD_LOGIC_VECTOR (7 downto 0);
    signal output_V_keep_V_1_data_out : STD_LOGIC_VECTOR (7 downto 0);
    signal output_V_keep_V_1_vld_in : STD_LOGIC;
    signal output_V_keep_V_1_vld_out : STD_LOGIC;
    signal output_V_keep_V_1_ack_in : STD_LOGIC;
    signal output_V_keep_V_1_payload_A : STD_LOGIC_VECTOR (7 downto 0);
    signal output_V_keep_V_1_payload_B : STD_LOGIC_VECTOR (7 downto 0);
    signal output_V_keep_V_1_sel_rd : STD_LOGIC := '0';
    signal output_V_keep_V_1_sel_wr : STD_LOGIC := '0';
    signal output_V_keep_V_1_sel : STD_LOGIC;
    signal output_V_keep_V_1_load_A : STD_LOGIC;
    signal output_V_keep_V_1_load_B : STD_LOGIC;
    signal output_V_keep_V_1_state_cmp_full : STD_LOGIC;
    signal output_V_last_V_1_data_in : STD_LOGIC_VECTOR (0 downto 0);
    signal output_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal output_V_last_V_1_vld_in : STD_LOGIC;
    signal output_V_last_V_1_vld_out : STD_LOGIC;
    signal output_V_last_V_1_ack_in : STD_LOGIC;
    signal output_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal output_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal output_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal output_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal output_V_last_V_1_sel : STD_LOGIC;
    signal output_V_last_V_1_load_A : STD_LOGIC;
    signal output_V_last_V_1_load_B : STD_LOGIC;
    signal output_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal header_idx : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal header_header_V : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal m_axis_tx_data_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tx_udpMetaFifo_V_the_blk_n : STD_LOGIC;
    signal tx_udpMetaFifo_V_my_s_blk_n : STD_LOGIC;
    signal tx_udpMetaFifo_V_len_blk_n : STD_LOGIC;
    signal tx_udpMetaFifo_V_val_blk_n : STD_LOGIC;
    signal tx_shift2udpFifo_V_d_blk_n : STD_LOGIC;
    signal tx_shift2udpFifo_V_k_blk_n : STD_LOGIC;
    signal tx_shift2udpFifo_V_l_blk_n : STD_LOGIC;
    signal reg_223 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_data_V_4_reg_967 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_205_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_2_reg_972 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_34_reg_981_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_last_V_reg_986 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_1_fu_274_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_1_reg_991 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln647_3_fu_356_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln647_3_reg_996 : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln647_fu_366_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln647_reg_1001 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln647_6_fu_442_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln647_6_reg_1006 : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln647_2_fu_452_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln647_2_reg_1011 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln82_1_fu_464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln82_1_reg_1016 : STD_LOGIC_VECTOR (0 downto 0);
    signal Lo_assign_fu_516_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal Lo_assign_reg_1021 : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln82_1_fu_622_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln82_1_reg_1026 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_12_fu_630_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_12_reg_1031 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln82_fu_638_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln82_reg_1038 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln82_1_fu_642_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln82_1_reg_1044 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln887_fu_688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_fu_870_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_V_4_fu_952_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal select_ln223_fu_498_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln82_2_fu_478_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln82_fu_614_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_s_fu_808_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal Lo_assign_1_fu_256_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln76_1_fu_264_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln76_1_fu_268_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln78_1_fu_280_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln76_2_fu_252_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_292_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln647_4_fu_300_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln647_fu_286_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln647_fu_314_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln647_2_fu_326_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_18_fu_304_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln647_1_fu_320_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_fu_332_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_2_fu_348_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_1_fu_340_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln647_fu_362_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln647_2_fu_372_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln76_1_fu_248_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_382_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln647_1_fu_376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln647_fu_400_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln647_5_fu_412_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_20_fu_390_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln647_4_fu_406_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_3_fu_418_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_5_fu_434_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_4_fu_426_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln647_3_fu_448_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln76_1_fu_458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_213_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln76_1_fu_470_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal xor_ln223_fu_492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln76_fu_524_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln76_fu_528_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal shl_ln_fu_546_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln80_fu_554_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln80_fu_558_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln80_1_fu_572_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln80_1_fu_578_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln76_fu_534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln76_fu_594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln82_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln76_fu_606_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln78_fu_540_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln76_fu_512_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln80_2_fu_588_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_564_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_654_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_15_fu_664_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln80_fu_674_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln887_fu_682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln647_fu_728_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_10_i_i_i_fu_718_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal agg_result_V_0_1_i_i_fu_732_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln647_2_fu_762_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_10_i_i18_s_fu_752_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_6_fu_740_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal agg_result_V_0_1_i_i_1_fu_766_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln647_3_fu_796_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_10_i_i23_s_fu_786_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_7_fu_774_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal agg_result_V_0_1_i_i_2_fu_800_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln647_1_fu_835_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln647_1_fu_838_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln647_4_fu_849_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln647_3_fu_852_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_8_fu_844_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_5_fu_858_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_V_2_fu_863_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln82_2_fu_882_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln82_fu_896_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln82_2_fu_900_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_13_fu_886_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln82_3_fu_904_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln82_5_fu_920_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln82_3_fu_926_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln82_4_fu_912_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln82_fu_932_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln82_1_fu_936_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln82_fu_940_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln82_1_fu_946_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_192 : BOOLEAN;
    signal ap_condition_498 : BOOLEAN;
    signal ap_condition_462 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    output_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                output_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((output_V_data_V_1_vld_out = ap_const_logic_1) and (output_V_data_V_1_ack_out = ap_const_logic_1))) then 
                                        output_V_data_V_1_sel_rd <= not(output_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    output_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                output_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((output_V_data_V_1_vld_in = ap_const_logic_1) and (output_V_data_V_1_ack_in = ap_const_logic_1))) then 
                                        output_V_data_V_1_sel_wr <= not(output_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    output_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                output_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((output_V_data_V_1_state = ap_const_lv2_3) and (output_V_data_V_1_vld_in = ap_const_logic_0) and (output_V_data_V_1_ack_out = ap_const_logic_1)) or ((output_V_data_V_1_state = ap_const_lv2_2) and (output_V_data_V_1_vld_in = ap_const_logic_0)))) then 
                    output_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((m_axis_tx_data_TREADY = ap_const_logic_0) and (output_V_data_V_1_state = ap_const_lv2_1)) or ((output_V_data_V_1_state = ap_const_lv2_3) and (m_axis_tx_data_TREADY = ap_const_logic_0) and (output_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    output_V_data_V_1_state <= ap_const_lv2_1;
                elsif ((((output_V_data_V_1_ack_out = ap_const_logic_1) and (output_V_data_V_1_state = ap_const_lv2_1)) or (not(((output_V_data_V_1_vld_in = ap_const_logic_0) and (output_V_data_V_1_ack_out = ap_const_logic_1))) and not(((m_axis_tx_data_TREADY = ap_const_logic_0) and (output_V_data_V_1_vld_in = ap_const_logic_1))) and (output_V_data_V_1_state = ap_const_lv2_3)) or ((output_V_data_V_1_state = ap_const_lv2_2) and (output_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    output_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    output_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    output_V_keep_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                output_V_keep_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((output_V_keep_V_1_vld_out = ap_const_logic_1) and (output_V_keep_V_1_ack_out = ap_const_logic_1))) then 
                                        output_V_keep_V_1_sel_rd <= not(output_V_keep_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    output_V_keep_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                output_V_keep_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((output_V_keep_V_1_ack_in = ap_const_logic_1) and (output_V_keep_V_1_vld_in = ap_const_logic_1))) then 
                                        output_V_keep_V_1_sel_wr <= not(output_V_keep_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    output_V_keep_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                output_V_keep_V_1_state <= ap_const_lv2_0;
            else
                if ((((output_V_keep_V_1_state = ap_const_lv2_3) and (output_V_keep_V_1_vld_in = ap_const_logic_0) and (output_V_keep_V_1_ack_out = ap_const_logic_1)) or ((output_V_keep_V_1_state = ap_const_lv2_2) and (output_V_keep_V_1_vld_in = ap_const_logic_0)))) then 
                    output_V_keep_V_1_state <= ap_const_lv2_2;
                elsif ((((m_axis_tx_data_TREADY = ap_const_logic_0) and (output_V_keep_V_1_state = ap_const_lv2_1)) or ((output_V_keep_V_1_state = ap_const_lv2_3) and (m_axis_tx_data_TREADY = ap_const_logic_0) and (output_V_keep_V_1_vld_in = ap_const_logic_1)))) then 
                    output_V_keep_V_1_state <= ap_const_lv2_1;
                elsif ((((output_V_keep_V_1_ack_out = ap_const_logic_1) and (output_V_keep_V_1_state = ap_const_lv2_1)) or (not(((output_V_keep_V_1_vld_in = ap_const_logic_0) and (output_V_keep_V_1_ack_out = ap_const_logic_1))) and not(((m_axis_tx_data_TREADY = ap_const_logic_0) and (output_V_keep_V_1_vld_in = ap_const_logic_1))) and (output_V_keep_V_1_state = ap_const_lv2_3)) or ((output_V_keep_V_1_state = ap_const_lv2_2) and (output_V_keep_V_1_vld_in = ap_const_logic_1)))) then 
                    output_V_keep_V_1_state <= ap_const_lv2_3;
                else 
                    output_V_keep_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    output_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                output_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((output_V_last_V_1_vld_out = ap_const_logic_1) and (output_V_last_V_1_ack_out = ap_const_logic_1))) then 
                                        output_V_last_V_1_sel_rd <= not(output_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    output_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                output_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((output_V_last_V_1_ack_in = ap_const_logic_1) and (output_V_last_V_1_vld_in = ap_const_logic_1))) then 
                                        output_V_last_V_1_sel_wr <= not(output_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    output_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                output_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((output_V_last_V_1_state = ap_const_lv2_3) and (output_V_last_V_1_vld_in = ap_const_logic_0) and (output_V_last_V_1_ack_out = ap_const_logic_1)) or ((output_V_last_V_1_state = ap_const_lv2_2) and (output_V_last_V_1_vld_in = ap_const_logic_0)))) then 
                    output_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((m_axis_tx_data_TREADY = ap_const_logic_0) and (output_V_last_V_1_state = ap_const_lv2_1)) or ((output_V_last_V_1_state = ap_const_lv2_3) and (m_axis_tx_data_TREADY = ap_const_logic_0) and (output_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    output_V_last_V_1_state <= ap_const_lv2_1;
                elsif ((((output_V_last_V_1_ack_out = ap_const_logic_1) and (output_V_last_V_1_state = ap_const_lv2_1)) or (not(((output_V_last_V_1_vld_in = ap_const_logic_0) and (output_V_last_V_1_ack_out = ap_const_logic_1))) and not(((m_axis_tx_data_TREADY = ap_const_logic_0) and (output_V_last_V_1_vld_in = ap_const_logic_1))) and (output_V_last_V_1_state = ap_const_lv2_3)) or ((output_V_last_V_1_state = ap_const_lv2_2) and (output_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    output_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    output_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    header_idx_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_192)) then
                if (((tmp_nbreadreq_fu_160_p6 = ap_const_lv1_1) and (state = ap_const_lv2_0))) then 
                    header_idx <= ap_const_lv16_0;
                elsif ((state_load_load_fu_228_p1 = ap_const_lv2_1)) then 
                    header_idx <= select_ln82_fu_614_p3;
                elsif (((grp_nbreadreq_fu_138_p5 = ap_const_lv1_1) and (state = ap_const_lv2_2))) then 
                    header_idx <= select_ln82_2_fu_478_p3;
                end if;
            end if; 
        end if;
    end process;

    state_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_192)) then
                if (((tmp_nbreadreq_fu_160_p6 = ap_const_lv1_1) and (state = ap_const_lv2_0))) then 
                    state <= ap_const_lv2_1;
                elsif (((or_ln887_fu_688_p2 = ap_const_lv1_1) and (state_load_load_fu_228_p1 = ap_const_lv2_1))) then 
                    state <= ap_const_lv2_2;
                elsif (((grp_nbreadreq_fu_138_p5 = ap_const_lv1_1) and (state = ap_const_lv2_2))) then 
                    state <= select_ln223_fu_498_p3;
                elsif ((ap_const_boolean_1 = ap_condition_462)) then 
                    state <= ap_const_lv2_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((state_load_load_fu_228_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    Lo_assign_reg_1021(21 downto 6) <= Lo_assign_fu_516_p3(21 downto 6);
                    select_ln82_1_reg_1026(21 downto 6) <= select_ln82_1_fu_622_p3(21 downto 6);
                    sub_ln82_1_reg_1044(6) <= sub_ln82_1_fu_642_p2(6);
                    tmp_12_reg_1031(6) <= tmp_12_fu_630_p3(6);
                    trunc_ln82_reg_1038(6) <= trunc_ln82_fu_638_p1(6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_138_p5 = ap_const_lv1_1) and (state = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln82_1_reg_1016 <= and_ln82_1_fu_464_p2;
                icmp_ln76_1_reg_991 <= icmp_ln76_1_fu_274_p2;
                lshr_ln647_2_reg_1011 <= lshr_ln647_2_fu_452_p2;
                lshr_ln647_reg_1001 <= lshr_ln647_fu_366_p2;
                    sub_ln647_3_reg_996(6 downto 1) <= sub_ln647_3_fu_356_p2(6 downto 1);
                    sub_ln647_6_reg_1006(6 downto 1) <= sub_ln647_6_fu_442_p2(6 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                empty_34_reg_981_0 <= tx_shift2udpFifo_V_d_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_nbreadreq_fu_160_p6 = ap_const_lv1_1) and (state = ap_const_lv2_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                header_header_V <= p_Result_s_fu_808_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((output_V_data_V_1_load_A = ap_const_logic_1)) then
                output_V_data_V_1_payload_A <= output_V_data_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((output_V_data_V_1_load_B = ap_const_logic_1)) then
                output_V_data_V_1_payload_B <= output_V_data_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((output_V_keep_V_1_load_A = ap_const_logic_1)) then
                output_V_keep_V_1_payload_A <= output_V_keep_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((output_V_keep_V_1_load_B = ap_const_logic_1)) then
                output_V_keep_V_1_payload_B <= output_V_keep_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((output_V_last_V_1_load_A = ap_const_logic_1)) then
                output_V_last_V_1_payload_A <= output_V_last_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((output_V_last_V_1_load_B = ap_const_logic_1)) then
                output_V_last_V_1_payload_B <= output_V_last_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_nbreadreq_fu_138_p5 = ap_const_lv1_1) and (state = ap_const_lv2_2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((grp_nbreadreq_fu_138_p5 = ap_const_lv1_1) and (state = ap_const_lv2_3) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_223 <= tx_shift2udpFifo_V_k_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                state_load_reg_959 <= state;
                state_load_reg_959_pp0_iter1_reg <= state_load_reg_959;
                tmp_16_reg_963_pp0_iter1_reg <= tmp_16_reg_963;
                tmp_9_reg_977_pp0_iter1_reg <= tmp_9_reg_977;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((state = ap_const_lv2_3) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_16_reg_963 <= grp_nbreadreq_fu_138_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((state = ap_const_lv2_2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_9_reg_977 <= grp_nbreadreq_fu_138_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_138_p5 = ap_const_lv1_1) and (state = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_data_V_4_reg_967 <= tx_shift2udpFifo_V_d_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_138_p5 = ap_const_lv1_1) and (state = ap_const_lv2_3) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_last_V_2_reg_972 <= tx_shift2udpFifo_V_l_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_138_p5 = ap_const_lv1_1) and (state = ap_const_lv2_2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_last_V_reg_986 <= tx_shift2udpFifo_V_l_dout;
            end if;
        end if;
    end process;
    sub_ln647_3_reg_996(0) <= '0';
    sub_ln647_6_reg_1006(0) <= '0';
    Lo_assign_reg_1021(5 downto 0) <= "000000";
    select_ln82_1_reg_1026(5 downto 0) <= "111111";
    tmp_12_reg_1031(5 downto 0) <= "000000";
    trunc_ln82_reg_1038(5 downto 0) <= "111111";
    sub_ln82_1_reg_1044(5 downto 0) <= "111111";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Lo_assign_1_fu_256_p3 <= (header_idx & ap_const_lv6_0);
    Lo_assign_fu_516_p3 <= (header_idx & ap_const_lv6_0);
    add_ln647_fu_400_p2 <= std_logic_vector(unsigned(tmp_19_fu_382_p3) + unsigned(ap_const_lv7_41));
    add_ln76_1_fu_268_p2 <= std_logic_vector(unsigned(zext_ln76_1_fu_264_p1) + unsigned(ap_const_lv23_40));
    add_ln76_fu_528_p2 <= std_logic_vector(unsigned(zext_ln76_fu_524_p1) + unsigned(ap_const_lv23_40));
    agg_result_V_0_1_i_i_1_fu_766_p3 <= (trunc_ln647_2_fu_762_p1 & p_Result_10_i_i18_s_fu_752_p4);
    agg_result_V_0_1_i_i_2_fu_800_p3 <= (trunc_ln647_3_fu_796_p1 & p_Result_10_i_i23_s_fu_786_p4);
    agg_result_V_0_1_i_i_fu_732_p3 <= (trunc_ln647_fu_728_p1 & p_Result_10_i_i_i_fu_718_p4);
    and_ln82_1_fu_464_p2 <= (xor_ln76_1_fu_458_p2 and grp_fu_218_p2);
    and_ln82_fu_600_p2 <= (xor_ln76_fu_594_p2 and grp_fu_218_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter2, io_acc_block_signal_op8, ap_predicate_op8_read_state1, io_acc_block_signal_op14, ap_predicate_op14_read_state1, io_acc_block_signal_op94, ap_predicate_op94_read_state1, m_axis_tx_data_TREADY, output_V_data_V_1_state, output_V_keep_V_1_state, output_V_last_V_1_state)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((io_acc_block_signal_op94 = ap_const_logic_0) and (ap_predicate_op94_read_state1 = ap_const_boolean_1)) or ((io_acc_block_signal_op14 = ap_const_logic_0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1)) or ((io_acc_block_signal_op8 = ap_const_logic_0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((output_V_last_V_1_state = ap_const_lv2_1) or (output_V_keep_V_1_state = ap_const_lv2_1) or (output_V_data_V_1_state = ap_const_lv2_1) or ((output_V_last_V_1_state = ap_const_lv2_3) and (m_axis_tx_data_TREADY = ap_const_logic_0)) or ((output_V_keep_V_1_state = ap_const_lv2_3) and (m_axis_tx_data_TREADY = ap_const_logic_0)) or ((output_V_data_V_1_state = ap_const_lv2_3) and (m_axis_tx_data_TREADY = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, io_acc_block_signal_op8, ap_predicate_op8_read_state1, io_acc_block_signal_op14, ap_predicate_op14_read_state1, io_acc_block_signal_op94, ap_predicate_op94_read_state1, m_axis_tx_data_TREADY, ap_block_state2_io, output_V_data_V_1_state, output_V_keep_V_1_state, output_V_last_V_1_state, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((io_acc_block_signal_op94 = ap_const_logic_0) and (ap_predicate_op94_read_state1 = ap_const_boolean_1)) or ((io_acc_block_signal_op14 = ap_const_logic_0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1)) or ((io_acc_block_signal_op8 = ap_const_logic_0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or (output_V_last_V_1_state = ap_const_lv2_1) or (output_V_keep_V_1_state = ap_const_lv2_1) or (output_V_data_V_1_state = ap_const_lv2_1) or ((output_V_last_V_1_state = ap_const_lv2_3) and (m_axis_tx_data_TREADY = ap_const_logic_0)) or ((output_V_keep_V_1_state = ap_const_lv2_3) and (m_axis_tx_data_TREADY = ap_const_logic_0)) or ((output_V_data_V_1_state = ap_const_lv2_3) and (m_axis_tx_data_TREADY = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, io_acc_block_signal_op8, ap_predicate_op8_read_state1, io_acc_block_signal_op14, ap_predicate_op14_read_state1, io_acc_block_signal_op94, ap_predicate_op94_read_state1, m_axis_tx_data_TREADY, ap_block_state2_io, output_V_data_V_1_state, output_V_keep_V_1_state, output_V_last_V_1_state, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((io_acc_block_signal_op94 = ap_const_logic_0) and (ap_predicate_op94_read_state1 = ap_const_boolean_1)) or ((io_acc_block_signal_op14 = ap_const_logic_0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1)) or ((io_acc_block_signal_op8 = ap_const_logic_0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or (output_V_last_V_1_state = ap_const_lv2_1) or (output_V_keep_V_1_state = ap_const_lv2_1) or (output_V_data_V_1_state = ap_const_lv2_1) or ((output_V_last_V_1_state = ap_const_lv2_3) and (m_axis_tx_data_TREADY = ap_const_logic_0)) or ((output_V_keep_V_1_state = ap_const_lv2_3) and (m_axis_tx_data_TREADY = ap_const_logic_0)) or ((output_V_data_V_1_state = ap_const_lv2_3) and (m_axis_tx_data_TREADY = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg, io_acc_block_signal_op8, ap_predicate_op8_read_state1, io_acc_block_signal_op14, ap_predicate_op14_read_state1, io_acc_block_signal_op94, ap_predicate_op94_read_state1)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((io_acc_block_signal_op94 = ap_const_logic_0) and (ap_predicate_op94_read_state1 = ap_const_boolean_1)) or ((io_acc_block_signal_op14 = ap_const_logic_0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1)) or ((io_acc_block_signal_op8 = ap_const_logic_0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1)));
    end process;


    ap_block_state2_io_assign_proc : process(output_V_data_V_1_ack_in, state_load_reg_959, ap_predicate_op115_write_state2, ap_predicate_op127_write_state2)
    begin
                ap_block_state2_io <= (((output_V_data_V_1_ack_in = ap_const_logic_0) and (state_load_reg_959 = ap_const_lv2_1)) or ((output_V_data_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op127_write_state2 = ap_const_boolean_1)) or ((output_V_data_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op115_write_state2 = ap_const_boolean_1)));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_io_assign_proc : process(output_V_data_V_1_ack_in, state_load_reg_959_pp0_iter1_reg, ap_predicate_op152_write_state3, ap_predicate_op156_write_state3)
    begin
                ap_block_state3_io <= (((output_V_data_V_1_ack_in = ap_const_logic_0) and (state_load_reg_959_pp0_iter1_reg = ap_const_lv2_1)) or ((output_V_data_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op156_write_state3 = ap_const_boolean_1)) or ((output_V_data_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op152_write_state3 = ap_const_boolean_1)));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(m_axis_tx_data_TREADY, output_V_data_V_1_state, output_V_keep_V_1_state, output_V_last_V_1_state)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((output_V_last_V_1_state = ap_const_lv2_1) or (output_V_keep_V_1_state = ap_const_lv2_1) or (output_V_data_V_1_state = ap_const_lv2_1) or ((output_V_last_V_1_state = ap_const_lv2_3) and (m_axis_tx_data_TREADY = ap_const_logic_0)) or ((output_V_keep_V_1_state = ap_const_lv2_3) and (m_axis_tx_data_TREADY = ap_const_logic_0)) or ((output_V_data_V_1_state = ap_const_lv2_3) and (m_axis_tx_data_TREADY = ap_const_logic_0)));
    end process;


    ap_condition_192_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_192 <= ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_462_assign_proc : process(grp_nbreadreq_fu_138_p5, state, grp_fu_205_p1)
    begin
                ap_condition_462 <= ((grp_fu_205_p1 = ap_const_lv1_1) and (grp_nbreadreq_fu_138_p5 = ap_const_lv1_1) and (state = ap_const_lv2_3));
    end process;


    ap_condition_498_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_01001)
    begin
                ap_condition_498 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op115_write_state2_assign_proc : process(state_load_reg_959, tmp_16_reg_963)
    begin
                ap_predicate_op115_write_state2 <= ((tmp_16_reg_963 = ap_const_lv1_1) and (state_load_reg_959 = ap_const_lv2_3));
    end process;


    ap_predicate_op127_write_state2_assign_proc : process(state_load_reg_959, tmp_9_reg_977)
    begin
                ap_predicate_op127_write_state2 <= ((state_load_reg_959 = ap_const_lv2_2) and (tmp_9_reg_977 = ap_const_lv1_1));
    end process;


    ap_predicate_op14_read_state1_assign_proc : process(grp_nbreadreq_fu_138_p5, state)
    begin
                ap_predicate_op14_read_state1 <= ((grp_nbreadreq_fu_138_p5 = ap_const_lv1_1) and (state = ap_const_lv2_2));
    end process;


    ap_predicate_op152_write_state3_assign_proc : process(state_load_reg_959_pp0_iter1_reg, tmp_16_reg_963_pp0_iter1_reg)
    begin
                ap_predicate_op152_write_state3 <= ((tmp_16_reg_963_pp0_iter1_reg = ap_const_lv1_1) and (state_load_reg_959_pp0_iter1_reg = ap_const_lv2_3));
    end process;


    ap_predicate_op156_write_state3_assign_proc : process(state_load_reg_959_pp0_iter1_reg, tmp_9_reg_977_pp0_iter1_reg)
    begin
                ap_predicate_op156_write_state3 <= ((state_load_reg_959_pp0_iter1_reg = ap_const_lv2_2) and (tmp_9_reg_977_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op8_read_state1_assign_proc : process(grp_nbreadreq_fu_138_p5, state)
    begin
                ap_predicate_op8_read_state1 <= ((grp_nbreadreq_fu_138_p5 = ap_const_lv1_1) and (state = ap_const_lv2_3));
    end process;


    ap_predicate_op94_read_state1_assign_proc : process(tmp_nbreadreq_fu_160_p6, state)
    begin
                ap_predicate_op94_read_state1 <= ((tmp_nbreadreq_fu_160_p6 = ap_const_lv1_1) and (state = ap_const_lv2_0));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_205_p1 <= tx_shift2udpFifo_V_l_dout;
    grp_fu_213_p2 <= std_logic_vector(unsigned(header_idx) + unsigned(ap_const_lv16_1));
    grp_fu_218_p2 <= "1" when (header_idx = ap_const_lv16_0) else "0";
    grp_nbreadreq_fu_138_p5 <= (0=>(tx_shift2udpFifo_V_l_empty_n and tx_shift2udpFifo_V_k_empty_n and tx_shift2udpFifo_V_d_empty_n), others=>'-');
    icmp_ln647_1_fu_376_p2 <= "0" when (zext_ln647_2_fu_372_p1 = ap_const_lv26_0) else "1";
    icmp_ln647_fu_286_p2 <= "1" when (unsigned(Lo_assign_1_fu_256_p3) > unsigned(or_ln78_1_fu_280_p2)) else "0";
    icmp_ln76_1_fu_274_p2 <= "1" when (unsigned(add_ln76_1_fu_268_p2) < unsigned(ap_const_lv23_41)) else "0";
    icmp_ln76_fu_534_p2 <= "1" when (unsigned(add_ln76_fu_528_p2) < unsigned(ap_const_lv23_41)) else "0";
    icmp_ln82_2_fu_882_p2 <= "1" when (unsigned(Lo_assign_reg_1021) > unsigned(select_ln82_1_reg_1026)) else "0";
    icmp_ln887_fu_682_p2 <= "1" when (select_ln80_fu_674_p3 = ap_const_lv5_0) else "0";
    io_acc_block_signal_op14 <= (tx_shift2udpFifo_V_l_empty_n and tx_shift2udpFifo_V_k_empty_n and tx_shift2udpFifo_V_d_empty_n);
    io_acc_block_signal_op8 <= (tx_shift2udpFifo_V_l_empty_n and tx_shift2udpFifo_V_k_empty_n and tx_shift2udpFifo_V_d_empty_n);
    io_acc_block_signal_op94 <= (tx_udpMetaFifo_V_val_empty_n and tx_udpMetaFifo_V_the_empty_n and tx_udpMetaFifo_V_my_s_empty_n and tx_udpMetaFifo_V_len_empty_n);
    lshr_ln647_1_fu_838_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv64_FFFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln647_1_fu_835_p1(31-1 downto 0)))));
    lshr_ln647_2_fu_452_p2 <= std_logic_vector(shift_right(unsigned(select_ln647_4_fu_426_p3),to_integer(unsigned('0' & zext_ln647_3_fu_448_p1(31-1 downto 0)))));
    lshr_ln647_3_fu_852_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv64_FFFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln647_4_fu_849_p1(31-1 downto 0)))));
    lshr_ln647_fu_366_p2 <= std_logic_vector(shift_right(unsigned(select_ln647_1_fu_340_p3),to_integer(unsigned('0' & zext_ln647_fu_362_p1(31-1 downto 0)))));
    lshr_ln82_1_fu_946_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv64_FFFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln82_1_fu_936_p1(31-1 downto 0)))));
    lshr_ln82_fu_940_p2 <= std_logic_vector(shift_right(unsigned(select_ln82_4_fu_912_p3),to_integer(unsigned('0' & zext_ln82_fu_932_p1(31-1 downto 0)))));
    m_axis_tx_data_TDATA <= output_V_data_V_1_data_out;

    m_axis_tx_data_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, state_load_reg_959, ap_predicate_op115_write_state2, ap_predicate_op127_write_state2, output_V_data_V_1_state, state_load_reg_959_pp0_iter1_reg, ap_predicate_op152_write_state3, ap_predicate_op156_write_state3, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (state_load_reg_959 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op127_write_state2 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op115_write_state2 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (state_load_reg_959_pp0_iter1_reg = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op156_write_state3 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op152_write_state3 = ap_const_boolean_1)))) then 
            m_axis_tx_data_TDATA_blk_n <= output_V_data_V_1_state(1);
        else 
            m_axis_tx_data_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    m_axis_tx_data_TKEEP <= output_V_keep_V_1_data_out;
    m_axis_tx_data_TLAST <= output_V_last_V_1_data_out;
    m_axis_tx_data_TVALID <= output_V_last_V_1_state(0);
    or_ln78_1_fu_280_p2 <= (ap_const_lv22_3F or Lo_assign_1_fu_256_p3);
    or_ln78_fu_540_p2 <= (ap_const_lv22_3F or Lo_assign_fu_516_p3);
    or_ln887_fu_688_p2 <= (xor_ln76_fu_594_p2 or icmp_ln887_fu_682_p2);
    output_V_data_V_1_ack_in <= output_V_data_V_1_state(1);
    output_V_data_V_1_ack_out <= m_axis_tx_data_TREADY;

    output_V_data_V_1_data_in_assign_proc : process(state_load_reg_959, ap_predicate_op115_write_state2, ap_predicate_op127_write_state2, tmp_data_V_4_reg_967, ret_V_fu_870_p3, ret_V_4_fu_952_p2, ap_condition_498)
    begin
        if ((ap_const_boolean_1 = ap_condition_498)) then
            if ((state_load_reg_959 = ap_const_lv2_1)) then 
                output_V_data_V_1_data_in <= ret_V_4_fu_952_p2;
            elsif ((ap_predicate_op127_write_state2 = ap_const_boolean_1)) then 
                output_V_data_V_1_data_in <= ret_V_fu_870_p3;
            elsif ((ap_predicate_op115_write_state2 = ap_const_boolean_1)) then 
                output_V_data_V_1_data_in <= tmp_data_V_4_reg_967;
            else 
                output_V_data_V_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            output_V_data_V_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_V_data_V_1_data_out_assign_proc : process(output_V_data_V_1_payload_A, output_V_data_V_1_payload_B, output_V_data_V_1_sel)
    begin
        if ((output_V_data_V_1_sel = ap_const_logic_1)) then 
            output_V_data_V_1_data_out <= output_V_data_V_1_payload_B;
        else 
            output_V_data_V_1_data_out <= output_V_data_V_1_payload_A;
        end if; 
    end process;

    output_V_data_V_1_load_A <= (output_V_data_V_1_state_cmp_full and not(output_V_data_V_1_sel_wr));
    output_V_data_V_1_load_B <= (output_V_data_V_1_state_cmp_full and output_V_data_V_1_sel_wr);
    output_V_data_V_1_sel <= output_V_data_V_1_sel_rd;
    output_V_data_V_1_state_cmp_full <= '0' when (output_V_data_V_1_state = ap_const_lv2_1) else '1';

    output_V_data_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, state_load_reg_959, ap_predicate_op115_write_state2, ap_predicate_op127_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (state_load_reg_959 = ap_const_lv2_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op127_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op115_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            output_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            output_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    output_V_data_V_1_vld_out <= output_V_data_V_1_state(0);
    output_V_keep_V_1_ack_in <= output_V_keep_V_1_state(1);
    output_V_keep_V_1_ack_out <= m_axis_tx_data_TREADY;

    output_V_keep_V_1_data_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, state_load_reg_959, ap_predicate_op115_write_state2, ap_predicate_op127_write_state2, reg_223, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (state_load_reg_959 = ap_const_lv2_1))) then 
            output_V_keep_V_1_data_in <= ap_const_lv8_FF;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op127_write_state2 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op115_write_state2 = ap_const_boolean_1)))) then 
            output_V_keep_V_1_data_in <= reg_223;
        else 
            output_V_keep_V_1_data_in <= "XXXXXXXX";
        end if; 
    end process;


    output_V_keep_V_1_data_out_assign_proc : process(output_V_keep_V_1_payload_A, output_V_keep_V_1_payload_B, output_V_keep_V_1_sel)
    begin
        if ((output_V_keep_V_1_sel = ap_const_logic_1)) then 
            output_V_keep_V_1_data_out <= output_V_keep_V_1_payload_B;
        else 
            output_V_keep_V_1_data_out <= output_V_keep_V_1_payload_A;
        end if; 
    end process;

    output_V_keep_V_1_load_A <= (output_V_keep_V_1_state_cmp_full and not(output_V_keep_V_1_sel_wr));
    output_V_keep_V_1_load_B <= (output_V_keep_V_1_state_cmp_full and output_V_keep_V_1_sel_wr);
    output_V_keep_V_1_sel <= output_V_keep_V_1_sel_rd;
    output_V_keep_V_1_state_cmp_full <= '0' when (output_V_keep_V_1_state = ap_const_lv2_1) else '1';

    output_V_keep_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, state_load_reg_959, ap_predicate_op115_write_state2, ap_predicate_op127_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (state_load_reg_959 = ap_const_lv2_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op127_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op115_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            output_V_keep_V_1_vld_in <= ap_const_logic_1;
        else 
            output_V_keep_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    output_V_keep_V_1_vld_out <= output_V_keep_V_1_state(0);
    output_V_last_V_1_ack_in <= output_V_last_V_1_state(1);
    output_V_last_V_1_ack_out <= m_axis_tx_data_TREADY;

    output_V_last_V_1_data_in_assign_proc : process(state_load_reg_959, ap_predicate_op115_write_state2, ap_predicate_op127_write_state2, tmp_last_V_2_reg_972, tmp_last_V_reg_986, ap_condition_498)
    begin
        if ((ap_const_boolean_1 = ap_condition_498)) then
            if ((state_load_reg_959 = ap_const_lv2_1)) then 
                output_V_last_V_1_data_in <= ap_const_lv1_0;
            elsif ((ap_predicate_op127_write_state2 = ap_const_boolean_1)) then 
                output_V_last_V_1_data_in <= tmp_last_V_reg_986;
            elsif ((ap_predicate_op115_write_state2 = ap_const_boolean_1)) then 
                output_V_last_V_1_data_in <= tmp_last_V_2_reg_972;
            else 
                output_V_last_V_1_data_in <= "X";
            end if;
        else 
            output_V_last_V_1_data_in <= "X";
        end if; 
    end process;


    output_V_last_V_1_data_out_assign_proc : process(output_V_last_V_1_payload_A, output_V_last_V_1_payload_B, output_V_last_V_1_sel)
    begin
        if ((output_V_last_V_1_sel = ap_const_logic_1)) then 
            output_V_last_V_1_data_out <= output_V_last_V_1_payload_B;
        else 
            output_V_last_V_1_data_out <= output_V_last_V_1_payload_A;
        end if; 
    end process;

    output_V_last_V_1_load_A <= (output_V_last_V_1_state_cmp_full and not(output_V_last_V_1_sel_wr));
    output_V_last_V_1_load_B <= (output_V_last_V_1_state_cmp_full and output_V_last_V_1_sel_wr);
    output_V_last_V_1_sel <= output_V_last_V_1_sel_rd;
    output_V_last_V_1_state_cmp_full <= '0' when (output_V_last_V_1_state = ap_const_lv2_1) else '1';

    output_V_last_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, state_load_reg_959, ap_predicate_op115_write_state2, ap_predicate_op127_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (state_load_reg_959 = ap_const_lv2_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op127_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op115_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            output_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            output_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    output_V_last_V_1_vld_out <= output_V_last_V_1_state(0);
    p_Result_10_i_i18_s_fu_752_p4 <= tx_udpMetaFifo_V_my_s_dout(15 downto 8);
    p_Result_10_i_i23_s_fu_786_p4 <= tx_udpMetaFifo_V_len_dout(15 downto 8);
    p_Result_10_i_i_i_fu_718_p4 <= tx_udpMetaFifo_V_the_dout(15 downto 8);
    p_Result_5_fu_858_p2 <= (lshr_ln647_3_fu_852_p2 and lshr_ln647_2_reg_1011);
    p_Result_6_fu_740_p5 <= (header_header_V(63 downto 32) & agg_result_V_0_1_i_i_fu_732_p3 & header_header_V(15 downto 0));
    p_Result_7_fu_774_p5 <= (p_Result_6_fu_740_p5(63 downto 16) & agg_result_V_0_1_i_i_1_fu_766_p3);
    p_Result_8_fu_844_p2 <= (lshr_ln647_reg_1001 and lshr_ln647_1_fu_838_p2);
    p_Result_s_fu_808_p5 <= (p_Result_7_fu_774_p5(63 downto 48) & agg_result_V_0_1_i_i_2_fu_800_p3 & p_Result_7_fu_774_p5(31 downto 0));
    ret_V_2_fu_863_p3 <= 
        p_Result_8_fu_844_p2 when (icmp_ln76_1_reg_991(0) = '1') else 
        empty_34_reg_981_0;
    ret_V_4_fu_952_p2 <= (lshr_ln82_fu_940_p2 and lshr_ln82_1_fu_946_p2);
    ret_V_fu_870_p3 <= 
        p_Result_5_fu_858_p2 when (and_ln82_1_reg_1016(0) = '1') else 
        ret_V_2_fu_863_p3;
    select_ln223_fu_498_p3 <= 
        ap_const_lv2_3 when (xor_ln223_fu_492_p2(0) = '1') else 
        ap_const_lv2_0;
    select_ln647_1_fu_340_p3 <= 
        tmp_18_fu_304_p4 when (icmp_ln647_fu_286_p2(0) = '1') else 
        header_header_V;
    select_ln647_2_fu_348_p3 <= 
        sub_ln647_1_fu_320_p2 when (icmp_ln647_fu_286_p2(0) = '1') else 
        tmp_17_fu_292_p3;
    select_ln647_3_fu_418_p3 <= 
        add_ln647_fu_400_p2 when (icmp_ln647_1_fu_376_p2(0) = '1') else 
        sub_ln647_5_fu_412_p2;
    select_ln647_4_fu_426_p3 <= 
        tmp_20_fu_390_p4 when (icmp_ln647_1_fu_376_p2(0) = '1') else 
        header_header_V;
    select_ln647_5_fu_434_p3 <= 
        sub_ln647_4_fu_406_p2 when (icmp_ln647_1_fu_376_p2(0) = '1') else 
        tmp_19_fu_382_p3;
    select_ln647_fu_332_p3 <= 
        sub_ln647_fu_314_p2 when (icmp_ln647_fu_286_p2(0) = '1') else 
        sub_ln647_2_fu_326_p2;
    select_ln76_1_fu_470_p3 <= 
        grp_fu_213_p2 when (icmp_ln76_1_fu_274_p2(0) = '1') else 
        header_idx;
    select_ln76_fu_606_p3 <= 
        grp_fu_213_p2 when (icmp_ln76_fu_534_p2(0) = '1') else 
        header_idx;
    select_ln80_fu_674_p3 <= 
        tmp_14_fu_654_p4 when (tmp_11_fu_564_p3(0) = '1') else 
        tmp_15_fu_664_p4;
    select_ln82_1_fu_622_p3 <= 
        ap_const_lv22_3F when (and_ln82_fu_600_p2(0) = '1') else 
        or_ln78_fu_540_p2;
    select_ln82_2_fu_478_p3 <= 
        grp_fu_213_p2 when (and_ln82_1_fu_464_p2(0) = '1') else 
        select_ln76_1_fu_470_p3;
    select_ln82_3_fu_904_p3 <= 
        sub_ln82_fu_896_p2 when (icmp_ln82_2_fu_882_p2(0) = '1') else 
        sub_ln82_2_fu_900_p2;
    select_ln82_4_fu_912_p3 <= 
        tmp_13_fu_886_p4 when (icmp_ln82_2_fu_882_p2(0) = '1') else 
        header_header_V;
    select_ln82_5_fu_920_p3 <= 
        sub_ln82_1_reg_1044 when (icmp_ln82_2_fu_882_p2(0) = '1') else 
        tmp_12_reg_1031;
    select_ln82_fu_614_p3 <= 
        grp_fu_213_p2 when (and_ln82_fu_600_p2(0) = '1') else 
        select_ln76_fu_606_p3;
    shl_ln_fu_546_p3 <= (grp_fu_213_p2 & ap_const_lv6_0);
    state_load_load_fu_228_p1 <= state;
    sub_ln647_1_fu_320_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(tmp_17_fu_292_p3));
    sub_ln647_2_fu_326_p2 <= std_logic_vector(unsigned(trunc_ln647_4_fu_300_p1) - unsigned(tmp_17_fu_292_p3));
    sub_ln647_3_fu_356_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(select_ln647_fu_332_p3));
    sub_ln647_4_fu_406_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(tmp_19_fu_382_p3));
    sub_ln647_5_fu_412_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(tmp_19_fu_382_p3));
    sub_ln647_6_fu_442_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(select_ln647_3_fu_418_p3));
    sub_ln647_fu_314_p2 <= std_logic_vector(unsigned(tmp_17_fu_292_p3) - unsigned(trunc_ln647_4_fu_300_p1));
    sub_ln80_1_fu_572_p2 <= std_logic_vector(unsigned(ap_const_lv23_0) - unsigned(sub_ln80_fu_558_p2));
    sub_ln80_2_fu_588_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(trunc_ln80_1_fu_578_p4));
    sub_ln80_fu_558_p2 <= std_logic_vector(unsigned(ap_const_lv23_40) - unsigned(zext_ln80_fu_554_p1));
    sub_ln82_1_fu_642_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(tmp_12_fu_630_p3));
    sub_ln82_2_fu_900_p2 <= std_logic_vector(unsigned(trunc_ln82_reg_1038) - unsigned(tmp_12_reg_1031));
    sub_ln82_3_fu_926_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(select_ln82_3_fu_904_p3));
    sub_ln82_fu_896_p2 <= std_logic_vector(unsigned(tmp_12_reg_1031) - unsigned(trunc_ln82_reg_1038));
    tmp_11_fu_564_p3 <= sub_ln80_fu_558_p2(22 downto 22);
    tmp_12_fu_630_p3 <= (trunc_ln76_fu_512_p1 & ap_const_lv6_0);
    
    tmp_13_fu_886_p4_proc : process(header_header_V)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_13_fu_886_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := header_header_V;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for tmp_13_fu_886_p4_i in 0 to 64-1 loop
                v0_cpy(tmp_13_fu_886_p4_i) := header_header_V(64-1-tmp_13_fu_886_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_13_fu_886_p4 <= resvalue(64-1 downto 0);
    end process;

    tmp_14_fu_654_p4 <= sub_ln80_2_fu_588_p2(7 downto 3);
    tmp_15_fu_664_p4 <= sub_ln80_fu_558_p2(10 downto 6);
    tmp_17_fu_292_p3 <= (trunc_ln76_2_fu_252_p1 & ap_const_lv6_0);
    
    tmp_18_fu_304_p4_proc : process(header_header_V)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_18_fu_304_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := header_header_V;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for tmp_18_fu_304_p4_i in 0 to 64-1 loop
                v0_cpy(tmp_18_fu_304_p4_i) := header_header_V(64-1-tmp_18_fu_304_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_18_fu_304_p4 <= resvalue(64-1 downto 0);
    end process;

    tmp_19_fu_382_p3 <= (trunc_ln76_1_fu_248_p1 & ap_const_lv6_0);
    
    tmp_20_fu_390_p4_proc : process(header_header_V)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_20_fu_390_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := header_header_V;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for tmp_20_fu_390_p4_i in 0 to 64-1 loop
                v0_cpy(tmp_20_fu_390_p4_i) := header_header_V(64-1-tmp_20_fu_390_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_20_fu_390_p4 <= resvalue(64-1 downto 0);
    end process;

    tmp_nbreadreq_fu_160_p6 <= (0=>(tx_udpMetaFifo_V_val_empty_n and tx_udpMetaFifo_V_the_empty_n and tx_udpMetaFifo_V_my_s_empty_n and tx_udpMetaFifo_V_len_empty_n), others=>'-');
    trunc_ln647_2_fu_762_p1 <= tx_udpMetaFifo_V_my_s_dout(8 - 1 downto 0);
    trunc_ln647_3_fu_796_p1 <= tx_udpMetaFifo_V_len_dout(8 - 1 downto 0);
    trunc_ln647_4_fu_300_p1 <= or_ln78_1_fu_280_p2(7 - 1 downto 0);
    trunc_ln647_fu_728_p1 <= tx_udpMetaFifo_V_the_dout(8 - 1 downto 0);
    trunc_ln76_1_fu_248_p1 <= header_idx(1 - 1 downto 0);
    trunc_ln76_2_fu_252_p1 <= header_idx(1 - 1 downto 0);
    trunc_ln76_fu_512_p1 <= header_idx(1 - 1 downto 0);
    trunc_ln80_1_fu_578_p4 <= sub_ln80_1_fu_572_p2(10 downto 3);
    trunc_ln82_fu_638_p1 <= select_ln82_1_fu_622_p3(7 - 1 downto 0);

    tx_shift2udpFifo_V_d_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, tx_shift2udpFifo_V_d_empty_n, ap_predicate_op8_read_state1, ap_predicate_op14_read_state1, ap_block_pp0_stage0)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1)))) then 
            tx_shift2udpFifo_V_d_blk_n <= tx_shift2udpFifo_V_d_empty_n;
        else 
            tx_shift2udpFifo_V_d_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    tx_shift2udpFifo_V_d_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op8_read_state1, ap_predicate_op14_read_state1, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tx_shift2udpFifo_V_d_read <= ap_const_logic_1;
        else 
            tx_shift2udpFifo_V_d_read <= ap_const_logic_0;
        end if; 
    end process;


    tx_shift2udpFifo_V_k_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, tx_shift2udpFifo_V_k_empty_n, ap_predicate_op8_read_state1, ap_predicate_op14_read_state1, ap_block_pp0_stage0)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1)))) then 
            tx_shift2udpFifo_V_k_blk_n <= tx_shift2udpFifo_V_k_empty_n;
        else 
            tx_shift2udpFifo_V_k_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    tx_shift2udpFifo_V_k_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op8_read_state1, ap_predicate_op14_read_state1, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tx_shift2udpFifo_V_k_read <= ap_const_logic_1;
        else 
            tx_shift2udpFifo_V_k_read <= ap_const_logic_0;
        end if; 
    end process;


    tx_shift2udpFifo_V_l_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, tx_shift2udpFifo_V_l_empty_n, ap_predicate_op8_read_state1, ap_predicate_op14_read_state1, ap_block_pp0_stage0)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1)))) then 
            tx_shift2udpFifo_V_l_blk_n <= tx_shift2udpFifo_V_l_empty_n;
        else 
            tx_shift2udpFifo_V_l_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    tx_shift2udpFifo_V_l_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op8_read_state1, ap_predicate_op14_read_state1, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tx_shift2udpFifo_V_l_read <= ap_const_logic_1;
        else 
            tx_shift2udpFifo_V_l_read <= ap_const_logic_0;
        end if; 
    end process;


    tx_udpMetaFifo_V_len_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, tx_udpMetaFifo_V_len_empty_n, ap_predicate_op94_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op94_read_state1 = ap_const_boolean_1))) then 
            tx_udpMetaFifo_V_len_blk_n <= tx_udpMetaFifo_V_len_empty_n;
        else 
            tx_udpMetaFifo_V_len_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    tx_udpMetaFifo_V_len_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op94_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op94_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            tx_udpMetaFifo_V_len_read <= ap_const_logic_1;
        else 
            tx_udpMetaFifo_V_len_read <= ap_const_logic_0;
        end if; 
    end process;


    tx_udpMetaFifo_V_my_s_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, tx_udpMetaFifo_V_my_s_empty_n, ap_predicate_op94_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op94_read_state1 = ap_const_boolean_1))) then 
            tx_udpMetaFifo_V_my_s_blk_n <= tx_udpMetaFifo_V_my_s_empty_n;
        else 
            tx_udpMetaFifo_V_my_s_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    tx_udpMetaFifo_V_my_s_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op94_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op94_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            tx_udpMetaFifo_V_my_s_read <= ap_const_logic_1;
        else 
            tx_udpMetaFifo_V_my_s_read <= ap_const_logic_0;
        end if; 
    end process;


    tx_udpMetaFifo_V_the_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, tx_udpMetaFifo_V_the_empty_n, ap_predicate_op94_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op94_read_state1 = ap_const_boolean_1))) then 
            tx_udpMetaFifo_V_the_blk_n <= tx_udpMetaFifo_V_the_empty_n;
        else 
            tx_udpMetaFifo_V_the_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    tx_udpMetaFifo_V_the_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op94_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op94_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            tx_udpMetaFifo_V_the_read <= ap_const_logic_1;
        else 
            tx_udpMetaFifo_V_the_read <= ap_const_logic_0;
        end if; 
    end process;


    tx_udpMetaFifo_V_val_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, tx_udpMetaFifo_V_val_empty_n, ap_predicate_op94_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op94_read_state1 = ap_const_boolean_1))) then 
            tx_udpMetaFifo_V_val_blk_n <= tx_udpMetaFifo_V_val_empty_n;
        else 
            tx_udpMetaFifo_V_val_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    tx_udpMetaFifo_V_val_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op94_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op94_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            tx_udpMetaFifo_V_val_read <= ap_const_logic_1;
        else 
            tx_udpMetaFifo_V_val_read <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln223_fu_492_p2 <= (tx_shift2udpFifo_V_l_dout xor ap_const_lv1_1);
    xor_ln76_1_fu_458_p2 <= (icmp_ln76_1_fu_274_p2 xor ap_const_lv1_1);
    xor_ln76_fu_594_p2 <= (icmp_ln76_fu_534_p2 xor ap_const_lv1_1);
    zext_ln647_1_fu_835_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln647_3_reg_996),64));
    zext_ln647_2_fu_372_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(header_idx),26));
    zext_ln647_3_fu_448_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln647_5_fu_434_p3),64));
    zext_ln647_4_fu_849_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln647_6_reg_1006),64));
    zext_ln647_fu_362_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln647_2_fu_348_p3),64));
    zext_ln76_1_fu_264_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Lo_assign_1_fu_256_p3),23));
    zext_ln76_fu_524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Lo_assign_fu_516_p3),23));
    zext_ln80_fu_554_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_546_p3),23));
    zext_ln82_1_fu_936_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln82_3_fu_926_p2),64));
    zext_ln82_fu_932_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln82_5_fu_920_p3),64));
end behav;
