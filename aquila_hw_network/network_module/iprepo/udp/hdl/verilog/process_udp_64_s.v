// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module process_udp_64_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        s_axis_rx_data_TVALID,
        portStatusFifo_V_dout,
        portStatusFifo_V_empty_n,
        portStatusFifo_V_read,
        rx_udp2shiftFifo_V_d_din,
        rx_udp2shiftFifo_V_d_full_n,
        rx_udp2shiftFifo_V_d_write,
        rx_udp2shiftFifo_V_k_din,
        rx_udp2shiftFifo_V_k_full_n,
        rx_udp2shiftFifo_V_k_write,
        rx_udp2shiftFifo_V_l_din,
        rx_udp2shiftFifo_V_l_full_n,
        rx_udp2shiftFifo_V_l_write,
        portLookupReqFifo_V_s_din,
        portLookupReqFifo_V_s_full_n,
        portLookupReqFifo_V_s_write,
        rx_udpMetaFifo_V_din,
        rx_udpMetaFifo_V_full_n,
        rx_udpMetaFifo_V_write,
        s_axis_rx_data_TDATA,
        s_axis_rx_data_TREADY,
        s_axis_rx_data_TKEEP,
        s_axis_rx_data_TLAST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input   s_axis_rx_data_TVALID;
input  [0:0] portStatusFifo_V_dout;
input   portStatusFifo_V_empty_n;
output   portStatusFifo_V_read;
output  [63:0] rx_udp2shiftFifo_V_d_din;
input   rx_udp2shiftFifo_V_d_full_n;
output   rx_udp2shiftFifo_V_d_write;
output  [7:0] rx_udp2shiftFifo_V_k_din;
input   rx_udp2shiftFifo_V_k_full_n;
output   rx_udp2shiftFifo_V_k_write;
output  [0:0] rx_udp2shiftFifo_V_l_din;
input   rx_udp2shiftFifo_V_l_full_n;
output   rx_udp2shiftFifo_V_l_write;
output  [15:0] portLookupReqFifo_V_s_din;
input   portLookupReqFifo_V_s_full_n;
output   portLookupReqFifo_V_s_write;
output  [48:0] rx_udpMetaFifo_V_din;
input   rx_udpMetaFifo_V_full_n;
output   rx_udpMetaFifo_V_write;
input  [63:0] s_axis_rx_data_TDATA;
output   s_axis_rx_data_TREADY;
input  [7:0] s_axis_rx_data_TKEEP;
input  [0:0] s_axis_rx_data_TLAST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg portStatusFifo_V_read;
reg rx_udp2shiftFifo_V_d_write;
reg rx_udp2shiftFifo_V_k_write;
reg rx_udp2shiftFifo_V_l_write;
reg portLookupReqFifo_V_s_write;
reg[48:0] rx_udpMetaFifo_V_din;
reg rx_udpMetaFifo_V_write;
reg s_axis_rx_data_TREADY;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire   [0:0] tmp_1_nbreadreq_fu_122_p5;
reg    ap_predicate_op13_read_state1;
wire   [0:0] tmp_nbreadreq_fu_144_p3;
reg    ap_predicate_op65_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire    io_acc_block_signal_op99;
reg   [0:0] fsmState_V_load_reg_807;
reg   [0:0] tmp_1_reg_827;
reg   [0:0] and_ln99_reg_850;
reg    ap_predicate_op99_write_state2;
reg   [0:0] or_ln73_reg_846;
reg   [0:0] port_status_valid_lo_reg_823;
reg    ap_predicate_op106_write_state2;
reg   [0:0] metaWritten_load_reg_814;
reg    ap_predicate_op113_write_state2;
reg   [0:0] tmp_reg_854;
reg    ap_predicate_op120_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] fsmState_V;
reg   [0:0] currWord_last_V;
reg   [0:0] pu_header_ready;
reg   [15:0] pu_header_idx;
reg   [0:0] metaWritten;
reg   [0:0] port_status_reg;
reg   [0:0] port_status_valid;
reg   [15:0] dstPort_V;
reg   [63:0] pu_header_header_V;
reg    s_axis_rx_data_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    rx_udp2shiftFifo_V_d_blk_n;
reg    rx_udp2shiftFifo_V_k_blk_n;
reg    rx_udp2shiftFifo_V_l_blk_n;
reg    portLookupReqFifo_V_s_blk_n;
reg    rx_udpMetaFifo_V_blk_n;
reg    portStatusFifo_V_blk_n;
wire   [0:0] metaWritten_load_load_fu_437_p1;
reg   [0:0] tmp_valid_1_reg_818;
wire   [0:0] port_status_valid_lo_load_fu_445_p1;
reg   [63:0] tmp_data_V_reg_831;
reg   [7:0] tmp_keep_V_reg_836;
wire   [0:0] tmp_last_V_fu_458_p1;
reg   [0:0] tmp_last_V_reg_841;
wire   [0:0] or_ln73_fu_621_p2;
wire   [0:0] and_ln99_fu_628_p2;
reg   [0:0] tmp_6_reg_858;
reg    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_write_flag_0_i_i_phi_fu_188_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_write_flag_0_i_i_reg_185;
wire   [0:0] pu_header_ready_load_load_fu_428_p1;
reg   [15:0] ap_phi_mux_packetHeader_idx_0_i_phi_fu_199_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_packetHeader_idx_0_i_reg_196;
wire   [15:0] add_ln67_fu_614_p2;
reg   [0:0] ap_phi_mux_metaWritten_flag_2_i_phi_fu_208_p8;
wire   [0:0] ap_phi_reg_pp0_iter0_metaWritten_flag_2_i_reg_205;
reg   [0:0] ap_phi_mux_metaWritten_flag_5_i_phi_fu_225_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_metaWritten_flag_5_i_reg_222;
reg   [0:0] ap_phi_mux_pu_header_ready_flag_phi_fu_236_p10;
wire   [0:0] ap_phi_reg_pp0_iter0_pu_header_ready_flag_reg_233;
reg   [0:0] ap_phi_mux_pu_header_ready_new_s_phi_fu_256_p10;
wire   [0:0] and_ln130_fu_647_p2;
wire   [0:0] ap_phi_reg_pp0_iter0_pu_header_ready_new_s_reg_253;
reg   [15:0] ap_phi_mux_pu_header_idx_new_4_s_phi_fu_274_p10;
wire   [15:0] select_ln130_fu_654_p3;
wire   [15:0] ap_phi_reg_pp0_iter0_pu_header_idx_new_4_s_reg_271;
reg   [0:0] ap_phi_mux_metaWritten_flag_8_i_phi_fu_293_p10;
wire   [0:0] ap_phi_reg_pp0_iter0_metaWritten_flag_8_i_reg_290;
wire   [0:0] or_ln130_fu_663_p2;
wire   [0:0] or_ln157_fu_670_p2;
reg   [0:0] ap_phi_mux_metaWritten_new_8_i_phi_fu_312_p10;
wire   [0:0] xor_ln130_fu_640_p2;
wire   [0:0] ap_phi_reg_pp0_iter0_metaWritten_new_8_i_reg_309;
wire   [0:0] xor_ln157_fu_677_p2;
reg   [0:0] ap_phi_mux_port_status_reg_flag_phi_fu_330_p10;
wire   [0:0] ap_phi_reg_pp0_iter0_port_status_reg_flag_reg_327;
reg   [0:0] ap_phi_mux_port_status_reg_new_s_phi_fu_350_p10;
wire   [0:0] ap_phi_reg_pp0_iter0_port_status_reg_new_s_reg_347;
wire   [0:0] and_ln157_fu_685_p2;
reg   [0:0] ap_phi_mux_port_status_valid_ne_phi_fu_369_p10;
wire   [0:0] ap_phi_reg_pp0_iter0_port_status_valid_ne_reg_366;
wire   [15:0] tmp_V_fu_752_p3;
wire   [63:0] p_Result_s_fu_602_p2;
reg    ap_block_pp0_stage0_01001;
wire   [48:0] tmp_5_fu_771_p7;
wire   [48:0] tmp_137_fu_791_p7;
wire   [25:0] zext_ln414_fu_476_p1;
wire   [0:0] trunc_ln64_fu_468_p1;
wire   [6:0] tmp_3_fu_486_p3;
wire   [0:0] icmp_ln414_fu_480_p2;
wire   [6:0] sub_ln414_fu_494_p2;
wire   [6:0] sub_ln414_1_fu_516_p2;
wire   [6:0] select_ln414_1_fu_508_p3;
wire   [6:0] select_ln414_fu_500_p3;
wire   [6:0] select_ln414_2_fu_522_p3;
wire   [63:0] zext_ln414_1_fu_530_p1;
wire   [63:0] shl_ln414_fu_542_p2;
reg   [63:0] tmp_4_fu_548_p4;
wire   [63:0] zext_ln414_2_fu_534_p1;
wire   [63:0] zext_ln414_3_fu_538_p1;
wire   [63:0] shl_ln414_1_fu_566_p2;
wire   [63:0] lshr_ln414_fu_572_p2;
wire   [63:0] and_ln414_fu_578_p2;
wire   [63:0] xor_ln414_fu_584_p2;
wire   [63:0] select_ln414_3_fu_558_p3;
wire   [63:0] and_ln414_1_fu_590_p2;
wire   [63:0] and_ln414_2_fu_596_p2;
wire   [7:0] p_Result_10_1_i_i_s_fu_742_p4;
wire   [7:0] p_Result_10_i_i_i_fu_732_p4;
wire   [7:0] grp_fu_409_p4;
wire   [7:0] grp_fu_399_p4;
wire   [7:0] trunc_ln647_1_fu_767_p1;
wire   [7:0] grp_fu_389_p4;
wire   [7:0] trunc_ln647_fu_787_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_291;
reg    ap_condition_280;
reg    ap_condition_284;
reg    ap_condition_157;
reg    ap_condition_621;
reg    ap_condition_246;
reg    ap_condition_136;
reg    ap_condition_371;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 fsmState_V = 1'd0;
#0 currWord_last_V = 1'd0;
#0 pu_header_ready = 1'd0;
#0 pu_header_idx = 16'd0;
#0 metaWritten = 1'd0;
#0 port_status_reg = 1'd0;
#0 port_status_valid = 1'd0;
#0 dstPort_V = 16'd0;
#0 pu_header_header_V = 64'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_136)) begin
        if (((tmp_nbreadreq_fu_144_p3 == 1'd1) & (fsmState_V == 1'd1))) begin
            fsmState_V <= 1'd0;
        end else if ((1'b1 == ap_condition_246)) begin
            fsmState_V <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_nbreadreq_fu_122_p5 == 1'd1) & (fsmState_V == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln99_reg_850 <= and_ln99_fu_628_p2;
        or_ln73_reg_846 <= or_ln73_fu_621_p2;
        tmp_data_V_reg_831 <= s_axis_rx_data_TDATA;
        tmp_keep_V_reg_836 <= s_axis_rx_data_TKEEP;
        tmp_last_V_reg_841 <= s_axis_rx_data_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_nbreadreq_fu_122_p5 == 1'd1) & (fsmState_V == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        currWord_last_V <= s_axis_rx_data_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln73_reg_846 == 1'd1) & (tmp_1_reg_827 == 1'd1) & (port_status_valid_lo_reg_823 == 1'd0) & (fsmState_V_load_reg_807 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dstPort_V <= tmp_V_fu_752_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fsmState_V_load_reg_807 <= fsmState_V;
        metaWritten_load_reg_814 <= metaWritten;
        port_status_valid_lo_reg_823 <= port_status_valid;
        tmp_valid_1_reg_818 <= port_status_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_metaWritten_flag_8_i_phi_fu_293_p10 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        metaWritten <= ap_phi_mux_metaWritten_new_8_i_phi_fu_312_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_port_status_reg_flag_phi_fu_330_p10 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        port_status_reg <= ap_phi_mux_port_status_reg_new_s_phi_fu_350_p10;
        port_status_valid <= ap_phi_mux_port_status_valid_ne_phi_fu_369_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_nbreadreq_fu_122_p5 == 1'd1) & (pu_header_ready_load_load_fu_428_p1 == 1'd0) & (fsmState_V == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pu_header_header_V <= p_Result_s_fu_602_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_pu_header_ready_flag_phi_fu_236_p10 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pu_header_idx <= ap_phi_mux_pu_header_idx_new_4_s_phi_fu_274_p10;
        pu_header_ready <= ap_phi_mux_pu_header_ready_new_s_phi_fu_256_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((fsmState_V == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_1_reg_827 <= tmp_1_nbreadreq_fu_122_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op65_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_6_reg_858 <= portStatusFifo_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((fsmState_V == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_reg_854 <= tmp_nbreadreq_fu_144_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((or_ln73_fu_621_p2 == 1'd1) & (port_status_valid_lo_load_fu_445_p1 == 1'd1) & (tmp_1_nbreadreq_fu_122_p5 == 1'd1) & (metaWritten_load_load_fu_437_p1 == 1'd0) & (fsmState_V == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_metaWritten_flag_2_i_phi_fu_208_p8 = 1'd1;
    end else if ((((or_ln73_fu_621_p2 == 1'd1) & (port_status_valid_lo_load_fu_445_p1 == 1'd1) & (metaWritten_load_load_fu_437_p1 == 1'd1) & (tmp_1_nbreadreq_fu_122_p5 == 1'd1) & (fsmState_V == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((or_ln73_fu_621_p2 == 1'd1) & (tmp_1_nbreadreq_fu_122_p5 == 1'd1) & (port_status_valid_lo_load_fu_445_p1 == 1'd0) & (fsmState_V == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((tmp_1_nbreadreq_fu_122_p5 == 1'd1) & (or_ln73_fu_621_p2 == 1'd0) & (fsmState_V == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        ap_phi_mux_metaWritten_flag_2_i_phi_fu_208_p8 = 1'd0;
    end else begin
        ap_phi_mux_metaWritten_flag_2_i_phi_fu_208_p8 = ap_phi_reg_pp0_iter0_metaWritten_flag_2_i_reg_205;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_291)) begin
        if ((metaWritten_load_load_fu_437_p1 == 1'd0)) begin
            ap_phi_mux_metaWritten_flag_5_i_phi_fu_225_p4 = 1'd1;
        end else if ((metaWritten_load_load_fu_437_p1 == 1'd1)) begin
            ap_phi_mux_metaWritten_flag_5_i_phi_fu_225_p4 = 1'd0;
        end else begin
            ap_phi_mux_metaWritten_flag_5_i_phi_fu_225_p4 = ap_phi_reg_pp0_iter0_metaWritten_flag_5_i_reg_222;
        end
    end else begin
        ap_phi_mux_metaWritten_flag_5_i_phi_fu_225_p4 = ap_phi_reg_pp0_iter0_metaWritten_flag_5_i_reg_222;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_144_p3 == 1'd1) & (fsmState_V == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_metaWritten_flag_8_i_phi_fu_293_p10 = or_ln157_fu_670_p2;
    end else if (((tmp_1_nbreadreq_fu_122_p5 == 1'd1) & (tmp_last_V_fu_458_p1 == 1'd0) & (fsmState_V == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_metaWritten_flag_8_i_phi_fu_293_p10 = ap_phi_mux_metaWritten_flag_2_i_phi_fu_208_p8;
    end else if (((tmp_last_V_fu_458_p1 == 1'd1) & (tmp_1_nbreadreq_fu_122_p5 == 1'd1) & (fsmState_V == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_metaWritten_flag_8_i_phi_fu_293_p10 = or_ln130_fu_663_p2;
    end else if ((((tmp_nbreadreq_fu_144_p3 == 1'd0) & (fsmState_V == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((tmp_1_nbreadreq_fu_122_p5 == 1'd0) & (fsmState_V == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        ap_phi_mux_metaWritten_flag_8_i_phi_fu_293_p10 = 1'd0;
    end else begin
        ap_phi_mux_metaWritten_flag_8_i_phi_fu_293_p10 = ap_phi_reg_pp0_iter0_metaWritten_flag_8_i_reg_290;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_157)) begin
        if (((tmp_nbreadreq_fu_144_p3 == 1'd1) & (fsmState_V == 1'd1))) begin
            ap_phi_mux_metaWritten_new_8_i_phi_fu_312_p10 = xor_ln157_fu_677_p2;
        end else if ((1'b1 == ap_condition_284)) begin
            ap_phi_mux_metaWritten_new_8_i_phi_fu_312_p10 = 1'd1;
        end else if ((1'b1 == ap_condition_280)) begin
            ap_phi_mux_metaWritten_new_8_i_phi_fu_312_p10 = xor_ln130_fu_640_p2;
        end else begin
            ap_phi_mux_metaWritten_new_8_i_phi_fu_312_p10 = ap_phi_reg_pp0_iter0_metaWritten_new_8_i_reg_309;
        end
    end else begin
        ap_phi_mux_metaWritten_new_8_i_phi_fu_312_p10 = ap_phi_reg_pp0_iter0_metaWritten_new_8_i_reg_309;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_621)) begin
        if ((pu_header_ready_load_load_fu_428_p1 == 1'd0)) begin
            ap_phi_mux_packetHeader_idx_0_i_phi_fu_199_p4 = add_ln67_fu_614_p2;
        end else if ((pu_header_ready_load_load_fu_428_p1 == 1'd1)) begin
            ap_phi_mux_packetHeader_idx_0_i_phi_fu_199_p4 = pu_header_idx;
        end else begin
            ap_phi_mux_packetHeader_idx_0_i_phi_fu_199_p4 = ap_phi_reg_pp0_iter0_packetHeader_idx_0_i_reg_196;
        end
    end else begin
        ap_phi_mux_packetHeader_idx_0_i_phi_fu_199_p4 = ap_phi_reg_pp0_iter0_packetHeader_idx_0_i_reg_196;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_144_p3 == 1'd1) & (fsmState_V == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_port_status_reg_flag_phi_fu_330_p10 = 1'd1;
    end else if (((tmp_last_V_fu_458_p1 == 1'd1) & (tmp_1_nbreadreq_fu_122_p5 == 1'd1) & (fsmState_V == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_port_status_reg_flag_phi_fu_330_p10 = port_status_valid;
    end else if ((((tmp_nbreadreq_fu_144_p3 == 1'd0) & (fsmState_V == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((tmp_1_nbreadreq_fu_122_p5 == 1'd1) & (tmp_last_V_fu_458_p1 == 1'd0) & (fsmState_V == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((tmp_1_nbreadreq_fu_122_p5 == 1'd0) & (fsmState_V == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        ap_phi_mux_port_status_reg_flag_phi_fu_330_p10 = 1'd0;
    end else begin
        ap_phi_mux_port_status_reg_flag_phi_fu_330_p10 = ap_phi_reg_pp0_iter0_port_status_reg_flag_reg_327;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_144_p3 == 1'd1) & (fsmState_V == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_port_status_reg_new_s_phi_fu_350_p10 = and_ln157_fu_685_p2;
    end else if ((((tmp_1_nbreadreq_fu_122_p5 == 1'd1) & (tmp_last_V_fu_458_p1 == 1'd0) & (fsmState_V == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((tmp_last_V_fu_458_p1 == 1'd1) & (tmp_1_nbreadreq_fu_122_p5 == 1'd1) & (fsmState_V == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((tmp_1_nbreadreq_fu_122_p5 == 1'd0) & (fsmState_V == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        ap_phi_mux_port_status_reg_new_s_phi_fu_350_p10 = 1'd0;
    end else begin
        ap_phi_mux_port_status_reg_new_s_phi_fu_350_p10 = ap_phi_reg_pp0_iter0_port_status_reg_new_s_reg_347;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_144_p3 == 1'd1) & (fsmState_V == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_port_status_valid_ne_phi_fu_369_p10 = xor_ln157_fu_677_p2;
    end else if ((((tmp_1_nbreadreq_fu_122_p5 == 1'd1) & (tmp_last_V_fu_458_p1 == 1'd0) & (fsmState_V == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((tmp_last_V_fu_458_p1 == 1'd1) & (tmp_1_nbreadreq_fu_122_p5 == 1'd1) & (fsmState_V == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((tmp_1_nbreadreq_fu_122_p5 == 1'd0) & (fsmState_V == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        ap_phi_mux_port_status_valid_ne_phi_fu_369_p10 = 1'd0;
    end else begin
        ap_phi_mux_port_status_valid_ne_phi_fu_369_p10 = ap_phi_reg_pp0_iter0_port_status_valid_ne_reg_366;
    end
end

always @ (*) begin
    if ((((tmp_nbreadreq_fu_144_p3 == 1'd1) & (fsmState_V == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((tmp_nbreadreq_fu_144_p3 == 1'd0) & (fsmState_V == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        ap_phi_mux_pu_header_idx_new_4_s_phi_fu_274_p10 = 16'd0;
    end else if (((tmp_1_nbreadreq_fu_122_p5 == 1'd1) & (tmp_last_V_fu_458_p1 == 1'd0) & (fsmState_V == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_pu_header_idx_new_4_s_phi_fu_274_p10 = ap_phi_mux_packetHeader_idx_0_i_phi_fu_199_p4;
    end else if (((tmp_last_V_fu_458_p1 == 1'd1) & (tmp_1_nbreadreq_fu_122_p5 == 1'd1) & (fsmState_V == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_pu_header_idx_new_4_s_phi_fu_274_p10 = select_ln130_fu_654_p3;
    end else begin
        ap_phi_mux_pu_header_idx_new_4_s_phi_fu_274_p10 = ap_phi_reg_pp0_iter0_pu_header_idx_new_4_s_reg_271;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_144_p3 == 1'd1) & (fsmState_V == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_pu_header_ready_flag_phi_fu_236_p10 = currWord_last_V;
    end else if ((((tmp_1_nbreadreq_fu_122_p5 == 1'd1) & (tmp_last_V_fu_458_p1 == 1'd0) & (fsmState_V == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((tmp_last_V_fu_458_p1 == 1'd1) & (tmp_1_nbreadreq_fu_122_p5 == 1'd1) & (fsmState_V == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        ap_phi_mux_pu_header_ready_flag_phi_fu_236_p10 = 1'd1;
    end else if ((((tmp_nbreadreq_fu_144_p3 == 1'd0) & (fsmState_V == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((tmp_1_nbreadreq_fu_122_p5 == 1'd0) & (fsmState_V == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        ap_phi_mux_pu_header_ready_flag_phi_fu_236_p10 = 1'd0;
    end else begin
        ap_phi_mux_pu_header_ready_flag_phi_fu_236_p10 = ap_phi_reg_pp0_iter0_pu_header_ready_flag_reg_233;
    end
end

always @ (*) begin
    if ((((tmp_nbreadreq_fu_144_p3 == 1'd1) & (fsmState_V == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((tmp_nbreadreq_fu_144_p3 == 1'd0) & (fsmState_V == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        ap_phi_mux_pu_header_ready_new_s_phi_fu_256_p10 = 1'd0;
    end else if (((tmp_1_nbreadreq_fu_122_p5 == 1'd1) & (tmp_last_V_fu_458_p1 == 1'd0) & (fsmState_V == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_pu_header_ready_new_s_phi_fu_256_p10 = or_ln73_fu_621_p2;
    end else if (((tmp_last_V_fu_458_p1 == 1'd1) & (tmp_1_nbreadreq_fu_122_p5 == 1'd1) & (fsmState_V == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_pu_header_ready_new_s_phi_fu_256_p10 = and_ln130_fu_647_p2;
    end else begin
        ap_phi_mux_pu_header_ready_new_s_phi_fu_256_p10 = ap_phi_reg_pp0_iter0_pu_header_ready_new_s_reg_253;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_621)) begin
        if ((pu_header_ready_load_load_fu_428_p1 == 1'd0)) begin
            ap_phi_mux_write_flag_0_i_i_phi_fu_188_p4 = 1'd1;
        end else if ((pu_header_ready_load_load_fu_428_p1 == 1'd1)) begin
            ap_phi_mux_write_flag_0_i_i_phi_fu_188_p4 = 1'd0;
        end else begin
            ap_phi_mux_write_flag_0_i_i_phi_fu_188_p4 = ap_phi_reg_pp0_iter0_write_flag_0_i_i_reg_185;
        end
    end else begin
        ap_phi_mux_write_flag_0_i_i_phi_fu_188_p4 = ap_phi_reg_pp0_iter0_write_flag_0_i_i_reg_185;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op106_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        portLookupReqFifo_V_s_blk_n = portLookupReqFifo_V_s_full_n;
    end else begin
        portLookupReqFifo_V_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op106_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        portLookupReqFifo_V_s_write = 1'b1;
    end else begin
        portLookupReqFifo_V_s_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op65_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        portStatusFifo_V_blk_n = portStatusFifo_V_empty_n;
    end else begin
        portStatusFifo_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op65_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        portStatusFifo_V_read = 1'b1;
    end else begin
        portStatusFifo_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op99_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        rx_udp2shiftFifo_V_d_blk_n = rx_udp2shiftFifo_V_d_full_n;
    end else begin
        rx_udp2shiftFifo_V_d_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op99_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_udp2shiftFifo_V_d_write = 1'b1;
    end else begin
        rx_udp2shiftFifo_V_d_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op99_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        rx_udp2shiftFifo_V_k_blk_n = rx_udp2shiftFifo_V_k_full_n;
    end else begin
        rx_udp2shiftFifo_V_k_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op99_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_udp2shiftFifo_V_k_write = 1'b1;
    end else begin
        rx_udp2shiftFifo_V_k_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op99_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        rx_udp2shiftFifo_V_l_blk_n = rx_udp2shiftFifo_V_l_full_n;
    end else begin
        rx_udp2shiftFifo_V_l_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op99_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_udp2shiftFifo_V_l_write = 1'b1;
    end else begin
        rx_udp2shiftFifo_V_l_write = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op120_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op113_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        rx_udpMetaFifo_V_blk_n = rx_udpMetaFifo_V_full_n;
    end else begin
        rx_udpMetaFifo_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_371)) begin
        if ((ap_predicate_op120_write_state2 == 1'b1)) begin
            rx_udpMetaFifo_V_din = tmp_137_fu_791_p7;
        end else if ((ap_predicate_op113_write_state2 == 1'b1)) begin
            rx_udpMetaFifo_V_din = tmp_5_fu_771_p7;
        end else begin
            rx_udpMetaFifo_V_din = 'bx;
        end
    end else begin
        rx_udpMetaFifo_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op120_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op113_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        rx_udpMetaFifo_V_write = 1'b1;
    end else begin
        rx_udpMetaFifo_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op13_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        s_axis_rx_data_TDATA_blk_n = s_axis_rx_data_TVALID;
    end else begin
        s_axis_rx_data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op13_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        s_axis_rx_data_TREADY = 1'b1;
    end else begin
        s_axis_rx_data_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln67_fu_614_p2 = (pu_header_idx + 16'd1);

assign and_ln130_fu_647_p2 = (xor_ln130_fu_640_p2 & or_ln73_fu_621_p2);

assign and_ln157_fu_685_p2 = (xor_ln157_fu_677_p2 & portStatusFifo_V_dout);

assign and_ln414_1_fu_590_p2 = (xor_ln414_fu_584_p2 & pu_header_header_V);

assign and_ln414_2_fu_596_p2 = (select_ln414_3_fu_558_p3 & and_ln414_fu_578_p2);

assign and_ln414_fu_578_p2 = (shl_ln414_1_fu_566_p2 & lshr_ln414_fu_572_p2);

assign and_ln99_fu_628_p2 = (port_status_reg & metaWritten);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((portStatusFifo_V_empty_n == 1'b0) & (ap_predicate_op65_read_state1 == 1'b1)) | ((s_axis_rx_data_TVALID == 1'b0) & (ap_predicate_op13_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((portLookupReqFifo_V_s_full_n == 1'b0) & (ap_predicate_op106_write_state2 == 1'b1)) | ((io_acc_block_signal_op99 == 1'b0) & (ap_predicate_op99_write_state2 == 1'b1)) | ((rx_udpMetaFifo_V_full_n == 1'b0) & (ap_predicate_op120_write_state2 == 1'b1)) | ((rx_udpMetaFifo_V_full_n == 1'b0) & (ap_predicate_op113_write_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((portStatusFifo_V_empty_n == 1'b0) & (ap_predicate_op65_read_state1 == 1'b1)) | ((s_axis_rx_data_TVALID == 1'b0) & (ap_predicate_op13_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((portLookupReqFifo_V_s_full_n == 1'b0) & (ap_predicate_op106_write_state2 == 1'b1)) | ((io_acc_block_signal_op99 == 1'b0) & (ap_predicate_op99_write_state2 == 1'b1)) | ((rx_udpMetaFifo_V_full_n == 1'b0) & (ap_predicate_op120_write_state2 == 1'b1)) | ((rx_udpMetaFifo_V_full_n == 1'b0) & (ap_predicate_op113_write_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((portStatusFifo_V_empty_n == 1'b0) & (ap_predicate_op65_read_state1 == 1'b1)) | ((s_axis_rx_data_TVALID == 1'b0) & (ap_predicate_op13_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((portLookupReqFifo_V_s_full_n == 1'b0) & (ap_predicate_op106_write_state2 == 1'b1)) | ((io_acc_block_signal_op99 == 1'b0) & (ap_predicate_op99_write_state2 == 1'b1)) | ((rx_udpMetaFifo_V_full_n == 1'b0) & (ap_predicate_op120_write_state2 == 1'b1)) | ((rx_udpMetaFifo_V_full_n == 1'b0) & (ap_predicate_op113_write_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((portStatusFifo_V_empty_n == 1'b0) & (ap_predicate_op65_read_state1 == 1'b1)) | ((s_axis_rx_data_TVALID == 1'b0) & (ap_predicate_op13_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((portLookupReqFifo_V_s_full_n == 1'b0) & (ap_predicate_op106_write_state2 == 1'b1)) | ((io_acc_block_signal_op99 == 1'b0) & (ap_predicate_op99_write_state2 == 1'b1)) | ((rx_udpMetaFifo_V_full_n == 1'b0) & (ap_predicate_op120_write_state2 == 1'b1)) | ((rx_udpMetaFifo_V_full_n == 1'b0) & (ap_predicate_op113_write_state2 == 1'b1)));
end

always @ (*) begin
    ap_condition_136 = ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_157 = ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_246 = ((or_ln73_fu_621_p2 == 1'd1) & (tmp_1_nbreadreq_fu_122_p5 == 1'd1) & (port_status_valid_lo_load_fu_445_p1 == 1'd0) & (fsmState_V == 1'd0));
end

always @ (*) begin
    ap_condition_280 = ((tmp_last_V_fu_458_p1 == 1'd1) & (tmp_1_nbreadreq_fu_122_p5 == 1'd1) & (fsmState_V == 1'd0));
end

always @ (*) begin
    ap_condition_284 = ((tmp_1_nbreadreq_fu_122_p5 == 1'd1) & (tmp_last_V_fu_458_p1 == 1'd0) & (fsmState_V == 1'd0));
end

always @ (*) begin
    ap_condition_291 = ((tmp_nbreadreq_fu_144_p3 == 1'd1) & (fsmState_V == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_371 = ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_621 = ((tmp_1_nbreadreq_fu_122_p5 == 1'd1) & (fsmState_V == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_metaWritten_flag_2_i_reg_205 = 'bx;

assign ap_phi_reg_pp0_iter0_metaWritten_flag_5_i_reg_222 = 'bx;

assign ap_phi_reg_pp0_iter0_metaWritten_flag_8_i_reg_290 = 'bx;

assign ap_phi_reg_pp0_iter0_metaWritten_new_8_i_reg_309 = 'bx;

assign ap_phi_reg_pp0_iter0_packetHeader_idx_0_i_reg_196 = 'bx;

assign ap_phi_reg_pp0_iter0_port_status_reg_flag_reg_327 = 'bx;

assign ap_phi_reg_pp0_iter0_port_status_reg_new_s_reg_347 = 'bx;

assign ap_phi_reg_pp0_iter0_port_status_valid_ne_reg_366 = 'bx;

assign ap_phi_reg_pp0_iter0_pu_header_idx_new_4_s_reg_271 = 'bx;

assign ap_phi_reg_pp0_iter0_pu_header_ready_flag_reg_233 = 'bx;

assign ap_phi_reg_pp0_iter0_pu_header_ready_new_s_reg_253 = 'bx;

assign ap_phi_reg_pp0_iter0_write_flag_0_i_i_reg_185 = 'bx;

always @ (*) begin
    ap_predicate_op106_write_state2 = ((or_ln73_reg_846 == 1'd1) & (tmp_1_reg_827 == 1'd1) & (port_status_valid_lo_reg_823 == 1'd0) & (fsmState_V_load_reg_807 == 1'd0));
end

always @ (*) begin
    ap_predicate_op113_write_state2 = ((port_status_valid_lo_reg_823 == 1'd1) & (or_ln73_reg_846 == 1'd1) & (tmp_1_reg_827 == 1'd1) & (fsmState_V_load_reg_807 == 1'd0) & (metaWritten_load_reg_814 == 1'd0));
end

always @ (*) begin
    ap_predicate_op120_write_state2 = ((fsmState_V_load_reg_807 == 1'd1) & (tmp_reg_854 == 1'd1) & (metaWritten_load_reg_814 == 1'd0));
end

always @ (*) begin
    ap_predicate_op13_read_state1 = ((tmp_1_nbreadreq_fu_122_p5 == 1'd1) & (fsmState_V == 1'd0));
end

always @ (*) begin
    ap_predicate_op65_read_state1 = ((tmp_nbreadreq_fu_144_p3 == 1'd1) & (fsmState_V == 1'd1));
end

always @ (*) begin
    ap_predicate_op99_write_state2 = ((1'd1 == and_ln99_reg_850) & (tmp_1_reg_827 == 1'd1) & (fsmState_V_load_reg_807 == 1'd0));
end

assign grp_fu_389_p4 = {{pu_header_header_V[15:8]}};

assign grp_fu_399_p4 = {{pu_header_header_V[47:40]}};

assign grp_fu_409_p4 = {{pu_header_header_V[39:32]}};

assign icmp_ln414_fu_480_p2 = ((zext_ln414_fu_476_p1 != 26'd0) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op99 = (rx_udp2shiftFifo_V_l_full_n & rx_udp2shiftFifo_V_k_full_n & rx_udp2shiftFifo_V_d_full_n);

assign lshr_ln414_fu_572_p2 = 64'd18446744073709551615 >> zext_ln414_3_fu_538_p1;

assign metaWritten_load_load_fu_437_p1 = metaWritten;

assign or_ln130_fu_663_p2 = (port_status_valid | ap_phi_mux_metaWritten_flag_2_i_phi_fu_208_p8);

assign or_ln157_fu_670_p2 = (currWord_last_V | ap_phi_mux_metaWritten_flag_5_i_phi_fu_225_p4);

assign or_ln73_fu_621_p2 = (pu_header_ready | ap_phi_mux_write_flag_0_i_i_phi_fu_188_p4);

assign p_Result_10_1_i_i_s_fu_742_p4 = {{pu_header_header_V[23:16]}};

assign p_Result_10_i_i_i_fu_732_p4 = {{pu_header_header_V[31:24]}};

assign p_Result_s_fu_602_p2 = (and_ln414_2_fu_596_p2 | and_ln414_1_fu_590_p2);

assign portLookupReqFifo_V_s_din = {{p_Result_10_1_i_i_s_fu_742_p4}, {p_Result_10_i_i_i_fu_732_p4}};

assign port_status_valid_lo_load_fu_445_p1 = port_status_valid;

assign pu_header_ready_load_load_fu_428_p1 = pu_header_ready;

assign rx_udp2shiftFifo_V_d_din = tmp_data_V_reg_831;

assign rx_udp2shiftFifo_V_k_din = tmp_keep_V_reg_836;

assign rx_udp2shiftFifo_V_l_din = tmp_last_V_reg_841;

assign select_ln130_fu_654_p3 = ((port_status_valid[0:0] === 1'b1) ? 16'd0 : ap_phi_mux_packetHeader_idx_0_i_phi_fu_199_p4);

assign select_ln414_1_fu_508_p3 = ((icmp_ln414_fu_480_p2[0:0] === 1'b1) ? sub_ln414_fu_494_p2 : tmp_3_fu_486_p3);

assign select_ln414_2_fu_522_p3 = ((icmp_ln414_fu_480_p2[0:0] === 1'b1) ? sub_ln414_1_fu_516_p2 : 7'd0);

assign select_ln414_3_fu_558_p3 = ((icmp_ln414_fu_480_p2[0:0] === 1'b1) ? tmp_4_fu_548_p4 : shl_ln414_fu_542_p2);

assign select_ln414_fu_500_p3 = ((icmp_ln414_fu_480_p2[0:0] === 1'b1) ? 7'd63 : tmp_3_fu_486_p3);

assign shl_ln414_1_fu_566_p2 = 64'd18446744073709551615 << zext_ln414_2_fu_534_p1;

assign shl_ln414_fu_542_p2 = s_axis_rx_data_TDATA << zext_ln414_1_fu_530_p1;

assign sub_ln414_1_fu_516_p2 = (7'd63 - tmp_3_fu_486_p3);

assign sub_ln414_fu_494_p2 = (7'd63 - tmp_3_fu_486_p3);

assign tmp_137_fu_791_p7 = {{{{{{tmp_6_reg_858}, {grp_fu_409_p4}}, {grp_fu_399_p4}}, {dstPort_V}}, {trunc_ln647_fu_787_p1}}, {grp_fu_389_p4}};

assign tmp_1_nbreadreq_fu_122_p5 = s_axis_rx_data_TVALID;

assign tmp_3_fu_486_p3 = {{trunc_ln64_fu_468_p1}, {6'd0}};

integer ap_tvar_int_0;

always @ (shl_ln414_fu_542_p2) begin
    for (ap_tvar_int_0 = 64 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 63 - 0) begin
            tmp_4_fu_548_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_4_fu_548_p4[ap_tvar_int_0] = shl_ln414_fu_542_p2[63 - ap_tvar_int_0];
        end
    end
end

assign tmp_5_fu_771_p7 = {{{{{{tmp_valid_1_reg_818}, {grp_fu_409_p4}}, {grp_fu_399_p4}}, {dstPort_V}}, {trunc_ln647_1_fu_767_p1}}, {grp_fu_389_p4}};

assign tmp_V_fu_752_p3 = {{p_Result_10_1_i_i_s_fu_742_p4}, {p_Result_10_i_i_i_fu_732_p4}};

assign tmp_last_V_fu_458_p1 = s_axis_rx_data_TLAST;

assign tmp_nbreadreq_fu_144_p3 = portStatusFifo_V_empty_n;

assign trunc_ln647_1_fu_767_p1 = pu_header_header_V[7:0];

assign trunc_ln647_fu_787_p1 = pu_header_header_V[7:0];

assign trunc_ln64_fu_468_p1 = pu_header_idx[0:0];

assign xor_ln130_fu_640_p2 = (port_status_valid ^ 1'd1);

assign xor_ln157_fu_677_p2 = (currWord_last_V ^ 1'd1);

assign xor_ln414_fu_584_p2 = (64'd18446744073709551615 ^ and_ln414_fu_578_p2);

assign zext_ln414_1_fu_530_p1 = select_ln414_1_fu_508_p3;

assign zext_ln414_2_fu_534_p1 = select_ln414_fu_500_p3;

assign zext_ln414_3_fu_538_p1 = select_ln414_2_fu_522_p3;

assign zext_ln414_fu_476_p1 = pu_header_idx;

endmodule //process_udp_64_s
