// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module read_data_arbiter (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        txApp2txEng_data_str_3_dout,
        txApp2txEng_data_str_3_empty_n,
        txApp2txEng_data_str_3_read,
        txApp2txEng_data_str_5_dout,
        txApp2txEng_data_str_5_empty_n,
        txApp2txEng_data_str_5_read,
        txApp2txEng_data_str_6_dout,
        txApp2txEng_data_str_6_empty_n,
        txApp2txEng_data_str_6_read,
        txBufferReadDataStit_1_dout,
        txBufferReadDataStit_1_empty_n,
        txBufferReadDataStit_1_read,
        txEng_isDDRbypass_V_dout,
        txEng_isDDRbypass_V_empty_n,
        txEng_isDDRbypass_V_read,
        txEng_tcpPkgBuffer0_s_9_din,
        txEng_tcpPkgBuffer0_s_9_full_n,
        txEng_tcpPkgBuffer0_s_9_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [63:0] txApp2txEng_data_str_3_dout;
input   txApp2txEng_data_str_3_empty_n;
output   txApp2txEng_data_str_3_read;
input  [7:0] txApp2txEng_data_str_5_dout;
input   txApp2txEng_data_str_5_empty_n;
output   txApp2txEng_data_str_5_read;
input  [0:0] txApp2txEng_data_str_6_dout;
input   txApp2txEng_data_str_6_empty_n;
output   txApp2txEng_data_str_6_read;
input  [72:0] txBufferReadDataStit_1_dout;
input   txBufferReadDataStit_1_empty_n;
output   txBufferReadDataStit_1_read;
input  [0:0] txEng_isDDRbypass_V_dout;
input   txEng_isDDRbypass_V_empty_n;
output   txEng_isDDRbypass_V_read;
output  [72:0] txEng_tcpPkgBuffer0_s_9_din;
input   txEng_tcpPkgBuffer0_s_9_full_n;
output   txEng_tcpPkgBuffer0_s_9_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg txApp2txEng_data_str_3_read;
reg txApp2txEng_data_str_5_read;
reg txApp2txEng_data_str_6_read;
reg txBufferReadDataStit_1_read;
reg txEng_isDDRbypass_V_read;
reg[72:0] txEng_tcpPkgBuffer0_s_9_din;
reg txEng_tcpPkgBuffer0_s_9_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    io_acc_block_signal_op7;
wire   [0:0] tmp_162_nbreadreq_fu_58_p5;
reg    ap_predicate_op7_read_state1;
wire   [0:0] tmp_161_nbreadreq_fu_80_p3;
reg    ap_predicate_op14_read_state1;
wire   [0:0] tmp_nbreadreq_fu_94_p3;
reg    ap_predicate_op20_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [1:0] tps_state_V_load_reg_167;
reg   [0:0] tmp_162_reg_171;
reg    ap_predicate_op31_write_state2;
reg   [0:0] tmp_161_reg_190;
reg    ap_predicate_op36_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [1:0] tps_state_V;
reg    txEng_isDDRbypass_V_blk_n;
wire    ap_block_pp0_stage0;
reg    txBufferReadDataStit_1_blk_n;
reg    txEng_tcpPkgBuffer0_s_9_blk_n;
reg    txApp2txEng_data_str_3_blk_n;
reg    txApp2txEng_data_str_5_blk_n;
reg    txApp2txEng_data_str_6_blk_n;
reg   [63:0] tmp_data_V_reg_175;
reg   [7:0] tmp_keep_V_reg_180;
wire   [0:0] tmp_last_V_7_fu_133_p1;
reg   [0:0] tmp_last_V_7_reg_185;
reg   [72:0] tmp54_reg_194;
wire   [0:0] tmp_last_V_fu_137_p3;
reg    ap_block_pp0_stage0_subdone;
wire   [1:0] select_ln1408_fu_145_p3;
wire   [72:0] tmp_2_fu_159_p4;
reg    ap_block_pp0_stage0_01001;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_191;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 tps_state_V = 2'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_nbreadreq_fu_94_p3 == 1'd1) & (tps_state_V == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tps_state_V <= select_ln1408_fu_145_p3;
    end else if ((((tmp_161_nbreadreq_fu_80_p3 == 1'd1) & (tmp_last_V_fu_137_p3 == 1'd1) & (tps_state_V == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_last_V_7_fu_133_p1 == 1'd1) & (tmp_162_nbreadreq_fu_58_p5 == 1'd1) & (tps_state_V == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        tps_state_V <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op14_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp54_reg_194 <= txBufferReadDataStit_1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tps_state_V == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_161_reg_190 <= tmp_161_nbreadreq_fu_80_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tps_state_V == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_162_reg_171 <= tmp_162_nbreadreq_fu_58_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_162_nbreadreq_fu_58_p5 == 1'd1) & (tps_state_V == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_V_reg_175 <= txApp2txEng_data_str_3_dout;
        tmp_keep_V_reg_180 <= txApp2txEng_data_str_5_dout;
        tmp_last_V_7_reg_185 <= txApp2txEng_data_str_6_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tps_state_V_load_reg_167 <= tps_state_V;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        txApp2txEng_data_str_3_blk_n = txApp2txEng_data_str_3_empty_n;
    end else begin
        txApp2txEng_data_str_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        txApp2txEng_data_str_3_read = 1'b1;
    end else begin
        txApp2txEng_data_str_3_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        txApp2txEng_data_str_5_blk_n = txApp2txEng_data_str_5_empty_n;
    end else begin
        txApp2txEng_data_str_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        txApp2txEng_data_str_5_read = 1'b1;
    end else begin
        txApp2txEng_data_str_5_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        txApp2txEng_data_str_6_blk_n = txApp2txEng_data_str_6_empty_n;
    end else begin
        txApp2txEng_data_str_6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        txApp2txEng_data_str_6_read = 1'b1;
    end else begin
        txApp2txEng_data_str_6_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op14_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        txBufferReadDataStit_1_blk_n = txBufferReadDataStit_1_empty_n;
    end else begin
        txBufferReadDataStit_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op14_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        txBufferReadDataStit_1_read = 1'b1;
    end else begin
        txBufferReadDataStit_1_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op20_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        txEng_isDDRbypass_V_blk_n = txEng_isDDRbypass_V_empty_n;
    end else begin
        txEng_isDDRbypass_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op20_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        txEng_isDDRbypass_V_read = 1'b1;
    end else begin
        txEng_isDDRbypass_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op36_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op31_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        txEng_tcpPkgBuffer0_s_9_blk_n = txEng_tcpPkgBuffer0_s_9_full_n;
    end else begin
        txEng_tcpPkgBuffer0_s_9_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_191)) begin
        if ((ap_predicate_op36_write_state2 == 1'b1)) begin
            txEng_tcpPkgBuffer0_s_9_din = tmp54_reg_194;
        end else if ((ap_predicate_op31_write_state2 == 1'b1)) begin
            txEng_tcpPkgBuffer0_s_9_din = tmp_2_fu_159_p4;
        end else begin
            txEng_tcpPkgBuffer0_s_9_din = 'bx;
        end
    end else begin
        txEng_tcpPkgBuffer0_s_9_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op36_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op31_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        txEng_tcpPkgBuffer0_s_9_write = 1'b1;
    end else begin
        txEng_tcpPkgBuffer0_s_9_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((txEng_isDDRbypass_V_empty_n == 1'b0) & (ap_predicate_op20_read_state1 == 1'b1)) | ((txBufferReadDataStit_1_empty_n == 1'b0) & (ap_predicate_op14_read_state1 == 1'b1)) | ((io_acc_block_signal_op7 == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((txEng_tcpPkgBuffer0_s_9_full_n == 1'b0) & (ap_predicate_op36_write_state2 == 1'b1)) | ((txEng_tcpPkgBuffer0_s_9_full_n == 1'b0) & (ap_predicate_op31_write_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((txEng_isDDRbypass_V_empty_n == 1'b0) & (ap_predicate_op20_read_state1 == 1'b1)) | ((txBufferReadDataStit_1_empty_n == 1'b0) & (ap_predicate_op14_read_state1 == 1'b1)) | ((io_acc_block_signal_op7 == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((txEng_tcpPkgBuffer0_s_9_full_n == 1'b0) & (ap_predicate_op36_write_state2 == 1'b1)) | ((txEng_tcpPkgBuffer0_s_9_full_n == 1'b0) & (ap_predicate_op31_write_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((txEng_isDDRbypass_V_empty_n == 1'b0) & (ap_predicate_op20_read_state1 == 1'b1)) | ((txBufferReadDataStit_1_empty_n == 1'b0) & (ap_predicate_op14_read_state1 == 1'b1)) | ((io_acc_block_signal_op7 == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((txEng_tcpPkgBuffer0_s_9_full_n == 1'b0) & (ap_predicate_op36_write_state2 == 1'b1)) | ((txEng_tcpPkgBuffer0_s_9_full_n == 1'b0) & (ap_predicate_op31_write_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((txEng_isDDRbypass_V_empty_n == 1'b0) & (ap_predicate_op20_read_state1 == 1'b1)) | ((txBufferReadDataStit_1_empty_n == 1'b0) & (ap_predicate_op14_read_state1 == 1'b1)) | ((io_acc_block_signal_op7 == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((txEng_tcpPkgBuffer0_s_9_full_n == 1'b0) & (ap_predicate_op36_write_state2 == 1'b1)) | ((txEng_tcpPkgBuffer0_s_9_full_n == 1'b0) & (ap_predicate_op31_write_state2 == 1'b1)));
end

always @ (*) begin
    ap_condition_191 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

always @ (*) begin
    ap_predicate_op14_read_state1 = ((tmp_161_nbreadreq_fu_80_p3 == 1'd1) & (tps_state_V == 2'd1));
end

always @ (*) begin
    ap_predicate_op20_read_state1 = ((tmp_nbreadreq_fu_94_p3 == 1'd1) & (tps_state_V == 2'd0));
end

always @ (*) begin
    ap_predicate_op31_write_state2 = ((tmp_162_reg_171 == 1'd1) & (tps_state_V_load_reg_167 == 2'd2));
end

always @ (*) begin
    ap_predicate_op36_write_state2 = ((tps_state_V_load_reg_167 == 2'd1) & (tmp_161_reg_190 == 1'd1));
end

always @ (*) begin
    ap_predicate_op7_read_state1 = ((tmp_162_nbreadreq_fu_58_p5 == 1'd1) & (tps_state_V == 2'd2));
end

assign io_acc_block_signal_op7 = (txApp2txEng_data_str_6_empty_n & txApp2txEng_data_str_5_empty_n & txApp2txEng_data_str_3_empty_n);

assign select_ln1408_fu_145_p3 = ((txEng_isDDRbypass_V_dout[0:0] === 1'b1) ? 2'd2 : 2'd1);

assign tmp_161_nbreadreq_fu_80_p3 = txBufferReadDataStit_1_empty_n;

assign tmp_162_nbreadreq_fu_58_p5 = (txApp2txEng_data_str_6_empty_n & txApp2txEng_data_str_5_empty_n & txApp2txEng_data_str_3_empty_n);

assign tmp_2_fu_159_p4 = {{{tmp_last_V_7_reg_185}, {tmp_keep_V_reg_180}}, {tmp_data_V_reg_175}};

assign tmp_last_V_7_fu_133_p1 = txApp2txEng_data_str_6_dout;

assign tmp_last_V_fu_137_p3 = txBufferReadDataStit_1_dout[32'd72];

assign tmp_nbreadreq_fu_94_p3 = txEng_isDDRbypass_V_empty_n;

endmodule //read_data_arbiter
