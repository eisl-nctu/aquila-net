// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module txAppStatusHandler (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        txBufferWriteStatus_V_TVALID,
        txApp_txEventCache_V_dout,
        txApp_txEventCache_V_empty_n,
        txApp_txEventCache_V_read,
        txApp2txSar_push_V_din,
        txApp2txSar_push_V_full_n,
        txApp2txSar_push_V_write,
        txBufferWriteStatus_V_TDATA,
        txBufferWriteStatus_V_TREADY
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input   txBufferWriteStatus_V_TVALID;
input  [53:0] txApp_txEventCache_V_dout;
input   txApp_txEventCache_V_empty_n;
output   txApp_txEventCache_V_read;
output  [31:0] txApp2txSar_push_V_din;
input   txApp2txSar_push_V_full_n;
output   txApp2txSar_push_V_write;
input  [7:0] txBufferWriteStatus_V_TDATA;
output   txBufferWriteStatus_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg txApp_txEventCache_V_read;
reg[31:0] txApp2txSar_push_V_din;
reg txApp2txSar_push_V_write;
reg txBufferWriteStatus_V_TREADY;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire   [0:0] grp_nbreadreq_fu_78_p3;
reg    ap_predicate_op8_read_state1;
reg    ap_predicate_op13_read_state1;
wire   [0:0] tmp_nbreadreq_fu_92_p3;
reg    ap_predicate_op26_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [1:0] tash_state_load_reg_267;
reg   [0:0] tmp_22_reg_281;
reg   [0:0] tmp_24_reg_285;
reg    ap_predicate_op44_write_state2;
reg   [0:0] tmp_21_reg_289;
reg   [0:0] tmp_23_reg_293;
reg   [0:0] tmp_25_reg_297;
reg    ap_predicate_op51_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [1:0] tash_state;
reg   [15:0] ev_sessionID_V;
reg   [15:0] ev_address_V;
reg   [15:0] ev_length_V;
reg    txBufferWriteStatus_V_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    txApp_txEventCache_V_blk_n;
reg    txApp2txSar_push_V_blk_n;
reg   [15:0] ev_load_reg_271;
reg   [15:0] ev_length_V_load_reg_276;
wire   [0:0] grp_fu_124_p3;
wire   [0:0] tmp_25_fu_168_p3;
reg   [0:0] tmp_reg_301;
reg   [15:0] tmp_sessionID_V_load_reg_305;
wire   [0:0] icmp_ln80_fu_228_p2;
reg    ap_block_pp0_stage0_subdone;
reg   [1:0] ap_phi_mux_storemerge_i_phi_fu_116_p4;
wire   [1:0] ap_phi_reg_pp0_iter0_storemerge_i_reg_113;
wire   [31:0] tmp_4_fu_244_p3;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] tmp_2_fu_253_p3;
wire   [16:0] rhs_V_fu_158_p1;
wire   [16:0] lhs_V_fu_154_p1;
wire   [16:0] ret_V_fu_162_p2;
wire   [2:0] trunc_ln368_fu_182_p1;
wire   [15:0] grp_fu_132_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_296;
reg    ap_condition_176;
reg    ap_condition_153;
reg    ap_condition_180;
reg    ap_condition_111;
reg    ap_condition_207;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 tash_state = 2'd0;
#0 ev_sessionID_V = 16'd0;
#0 ev_address_V = 16'd0;
#0 ev_length_V = 16'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_111)) begin
        if ((1'b1 == ap_condition_180)) begin
            tash_state <= 2'd1;
        end else if ((1'b1 == ap_condition_153)) begin
            tash_state <= ap_phi_mux_storemerge_i_phi_fu_116_p4;
        end else if ((1'b1 == ap_condition_176)) begin
            tash_state <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_nbreadreq_fu_92_p3 == 1'd1) & (tash_state == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ev_address_V <= {{txApp_txEventCache_V_dout[34:19]}};
        ev_length_V <= {{txApp_txEventCache_V_dout[50:35]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ev_length_V_load_reg_276 <= ev_length_V;
        ev_load_reg_271 <= ev_address_V;
        tash_state_load_reg_267 <= tash_state;
    end
end

always @ (posedge ap_clk) begin
    if (((tash_state_load_reg_267 == 2'd0) & (tmp_reg_301 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ev_sessionID_V <= tmp_sessionID_V_load_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if (((tash_state == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_21_reg_289 <= grp_nbreadreq_fu_78_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tash_state == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_22_reg_281 <= grp_nbreadreq_fu_78_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_78_p3 == 1'd1) & (tash_state == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_23_reg_293 <= txBufferWriteStatus_V_TDATA[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_78_p3 == 1'd1) & (tash_state == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_24_reg_285 <= txBufferWriteStatus_V_TDATA[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_124_p3 == 1'd1) & (grp_nbreadreq_fu_78_p3 == 1'd1) & (tash_state == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_25_reg_297 <= ret_V_fu_162_p2[32'd16];
    end
end

always @ (posedge ap_clk) begin
    if (((tash_state == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_reg_301 <= tmp_nbreadreq_fu_92_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_nbreadreq_fu_92_p3 == 1'd1) & (tash_state == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_sessionID_V_load_reg_305 <= {{txApp_txEventCache_V_dout[18:3]}};
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_296)) begin
        if ((tmp_25_fu_168_p3 == 1'd1)) begin
            ap_phi_mux_storemerge_i_phi_fu_116_p4 = 2'd2;
        end else if ((tmp_25_fu_168_p3 == 1'd0)) begin
            ap_phi_mux_storemerge_i_phi_fu_116_p4 = 2'd0;
        end else begin
            ap_phi_mux_storemerge_i_phi_fu_116_p4 = ap_phi_reg_pp0_iter0_storemerge_i_reg_113;
        end
    end else begin
        ap_phi_mux_storemerge_i_phi_fu_116_p4 = ap_phi_reg_pp0_iter0_storemerge_i_reg_113;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op51_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op44_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        txApp2txSar_push_V_blk_n = txApp2txSar_push_V_full_n;
    end else begin
        txApp2txSar_push_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_207)) begin
        if ((ap_predicate_op51_write_state2 == 1'b1)) begin
            txApp2txSar_push_V_din = tmp_2_fu_253_p3;
        end else if ((ap_predicate_op44_write_state2 == 1'b1)) begin
            txApp2txSar_push_V_din = tmp_4_fu_244_p3;
        end else begin
            txApp2txSar_push_V_din = 'bx;
        end
    end else begin
        txApp2txSar_push_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op51_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op44_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        txApp2txSar_push_V_write = 1'b1;
    end else begin
        txApp2txSar_push_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op26_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        txApp_txEventCache_V_blk_n = txApp_txEventCache_V_empty_n;
    end else begin
        txApp_txEventCache_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op26_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        txApp_txEventCache_V_read = 1'b1;
    end else begin
        txApp_txEventCache_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op13_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op8_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        txBufferWriteStatus_V_TDATA_blk_n = txBufferWriteStatus_V_TVALID;
    end else begin
        txBufferWriteStatus_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op13_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op8_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        txBufferWriteStatus_V_TREADY = 1'b1;
    end else begin
        txBufferWriteStatus_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((txApp_txEventCache_V_empty_n == 1'b0) & (ap_predicate_op26_read_state1 == 1'b1)) | ((txBufferWriteStatus_V_TVALID == 1'b0) & (ap_predicate_op13_read_state1 == 1'b1)) | ((txBufferWriteStatus_V_TVALID == 1'b0) & (ap_predicate_op8_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((txApp2txSar_push_V_full_n == 1'b0) & (ap_predicate_op51_write_state2 == 1'b1)) | ((txApp2txSar_push_V_full_n == 1'b0) & (ap_predicate_op44_write_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((txApp_txEventCache_V_empty_n == 1'b0) & (ap_predicate_op26_read_state1 == 1'b1)) | ((txBufferWriteStatus_V_TVALID == 1'b0) & (ap_predicate_op13_read_state1 == 1'b1)) | ((txBufferWriteStatus_V_TVALID == 1'b0) & (ap_predicate_op8_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((txApp2txSar_push_V_full_n == 1'b0) & (ap_predicate_op51_write_state2 == 1'b1)) | ((txApp2txSar_push_V_full_n == 1'b0) & (ap_predicate_op44_write_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((txApp_txEventCache_V_empty_n == 1'b0) & (ap_predicate_op26_read_state1 == 1'b1)) | ((txBufferWriteStatus_V_TVALID == 1'b0) & (ap_predicate_op13_read_state1 == 1'b1)) | ((txBufferWriteStatus_V_TVALID == 1'b0) & (ap_predicate_op8_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((txApp2txSar_push_V_full_n == 1'b0) & (ap_predicate_op51_write_state2 == 1'b1)) | ((txApp2txSar_push_V_full_n == 1'b0) & (ap_predicate_op44_write_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((txApp_txEventCache_V_empty_n == 1'b0) & (ap_predicate_op26_read_state1 == 1'b1)) | ((txBufferWriteStatus_V_TVALID == 1'b0) & (ap_predicate_op13_read_state1 == 1'b1)) | ((txBufferWriteStatus_V_TVALID == 1'b0) & (ap_predicate_op8_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((txApp2txSar_push_V_full_n == 1'b0) & (ap_predicate_op51_write_state2 == 1'b1)) | ((txApp2txSar_push_V_full_n == 1'b0) & (ap_predicate_op44_write_state2 == 1'b1)));
end

always @ (*) begin
    ap_condition_111 = ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_153 = ((grp_fu_124_p3 == 1'd1) & (grp_nbreadreq_fu_78_p3 == 1'd1) & (tash_state == 2'd1));
end

always @ (*) begin
    ap_condition_176 = ((grp_fu_124_p3 == 1'd1) & (grp_nbreadreq_fu_78_p3 == 1'd1) & (tash_state == 2'd2));
end

always @ (*) begin
    ap_condition_180 = ((tmp_nbreadreq_fu_92_p3 == 1'd1) & (icmp_ln80_fu_228_p2 == 1'd1) & (tash_state == 2'd0));
end

always @ (*) begin
    ap_condition_207 = ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_296 = ((grp_fu_124_p3 == 1'd1) & (grp_nbreadreq_fu_78_p3 == 1'd1) & (tash_state == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_storemerge_i_reg_113 = 'bx;

always @ (*) begin
    ap_predicate_op13_read_state1 = ((grp_nbreadreq_fu_78_p3 == 1'd1) & (tash_state == 2'd1));
end

always @ (*) begin
    ap_predicate_op26_read_state1 = ((tmp_nbreadreq_fu_92_p3 == 1'd1) & (tash_state == 2'd0));
end

always @ (*) begin
    ap_predicate_op44_write_state2 = ((tmp_24_reg_285 == 1'd1) & (tmp_22_reg_281 == 1'd1) & (tash_state_load_reg_267 == 2'd2));
end

always @ (*) begin
    ap_predicate_op51_write_state2 = ((tmp_25_reg_297 == 1'd0) & (tash_state_load_reg_267 == 2'd1) & (tmp_23_reg_293 == 1'd1) & (tmp_21_reg_289 == 1'd1));
end

always @ (*) begin
    ap_predicate_op8_read_state1 = ((grp_nbreadreq_fu_78_p3 == 1'd1) & (tash_state == 2'd2));
end

assign grp_fu_124_p3 = txBufferWriteStatus_V_TDATA[32'd7];

assign grp_fu_132_p2 = (ev_load_reg_271 + ev_length_V_load_reg_276);

assign grp_nbreadreq_fu_78_p3 = txBufferWriteStatus_V_TVALID;

assign icmp_ln80_fu_228_p2 = ((trunc_ln368_fu_182_p1 == 3'd0) ? 1'b1 : 1'b0);

assign lhs_V_fu_154_p1 = ev_address_V;

assign ret_V_fu_162_p2 = (rhs_V_fu_158_p1 + lhs_V_fu_154_p1);

assign rhs_V_fu_158_p1 = ev_length_V;

assign tmp_25_fu_168_p3 = ret_V_fu_162_p2[32'd16];

assign tmp_2_fu_253_p3 = {{grp_fu_132_p2}, {ev_sessionID_V}};

assign tmp_4_fu_244_p3 = {{grp_fu_132_p2}, {ev_sessionID_V}};

assign tmp_nbreadreq_fu_92_p3 = txApp_txEventCache_V_empty_n;

assign trunc_ln368_fu_182_p1 = txApp_txEventCache_V_dout[2:0];

endmodule //txAppStatusHandler
