// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module updateReplyHandler (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        sessionUpdate_rsp_V_TVALID,
        slc_sessionInsert_rs_13_din,
        slc_sessionInsert_rs_13_full_n,
        slc_sessionInsert_rs_13_write,
        slc_sessionInsert_rs_9_din,
        slc_sessionInsert_rs_9_full_n,
        slc_sessionInsert_rs_9_write,
        slc_sessionInsert_rs_8_din,
        slc_sessionInsert_rs_8_full_n,
        slc_sessionInsert_rs_8_write,
        slc_sessionInsert_rs_11_din,
        slc_sessionInsert_rs_11_full_n,
        slc_sessionInsert_rs_11_write,
        slc_sessionInsert_rs_14_din,
        slc_sessionInsert_rs_14_full_n,
        slc_sessionInsert_rs_14_write,
        slc_sessionInsert_rs_7_din,
        slc_sessionInsert_rs_7_full_n,
        slc_sessionInsert_rs_7_write,
        slc_sessionInsert_rs_15_din,
        slc_sessionInsert_rs_15_full_n,
        slc_sessionInsert_rs_15_write,
        sessionUpdate_rsp_V_TDATA,
        sessionUpdate_rsp_V_TREADY
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input   sessionUpdate_rsp_V_TVALID;
output  [0:0] slc_sessionInsert_rs_13_din;
input   slc_sessionInsert_rs_13_full_n;
output   slc_sessionInsert_rs_13_write;
output  [31:0] slc_sessionInsert_rs_9_din;
input   slc_sessionInsert_rs_9_full_n;
output   slc_sessionInsert_rs_9_write;
output  [15:0] slc_sessionInsert_rs_8_din;
input   slc_sessionInsert_rs_8_full_n;
output   slc_sessionInsert_rs_8_write;
output  [15:0] slc_sessionInsert_rs_11_din;
input   slc_sessionInsert_rs_11_full_n;
output   slc_sessionInsert_rs_11_write;
output  [15:0] slc_sessionInsert_rs_14_din;
input   slc_sessionInsert_rs_14_full_n;
output   slc_sessionInsert_rs_14_write;
output  [0:0] slc_sessionInsert_rs_7_din;
input   slc_sessionInsert_rs_7_full_n;
output   slc_sessionInsert_rs_7_write;
output  [0:0] slc_sessionInsert_rs_15_din;
input   slc_sessionInsert_rs_15_full_n;
output   slc_sessionInsert_rs_15_write;
input  [87:0] sessionUpdate_rsp_V_TDATA;
output   sessionUpdate_rsp_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg slc_sessionInsert_rs_13_write;
reg slc_sessionInsert_rs_9_write;
reg slc_sessionInsert_rs_8_write;
reg slc_sessionInsert_rs_11_write;
reg slc_sessionInsert_rs_14_write;
reg slc_sessionInsert_rs_7_write;
reg slc_sessionInsert_rs_15_write;
reg sessionUpdate_rsp_V_TREADY;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire   [0:0] tmp_nbreadreq_fu_72_p3;
reg    ap_block_state1_pp0_stage0_iter0;
wire    io_acc_block_signal_op23;
reg   [0:0] tmp_reg_172;
reg   [0:0] trunc_ln148_reg_176;
reg    ap_predicate_op23_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg    sessionUpdate_rsp_V_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    slc_sessionInsert_rs_13_blk_n;
reg    slc_sessionInsert_rs_9_blk_n;
reg    slc_sessionInsert_rs_8_blk_n;
reg    slc_sessionInsert_rs_11_blk_n;
reg    slc_sessionInsert_rs_14_blk_n;
reg    slc_sessionInsert_rs_7_blk_n;
reg    slc_sessionInsert_rs_15_blk_n;
wire   [0:0] trunc_ln148_fu_112_p1;
reg   [31:0] tmp_key_theirIp_V_reg_180;
reg   [15:0] tmp_key_myPort_V_reg_185;
reg   [15:0] tmp_key_theirPort_V_reg_190;
reg   [15:0] tmp_sessionID_V_reg_195;
reg   [0:0] tmp_success_reg_200;
reg   [0:0] tmp_source_reg_205;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage0_01001;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_72_p3 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_key_myPort_V_reg_185 <= {{sessionUpdate_rsp_V_TDATA[48:33]}};
        tmp_key_theirIp_V_reg_180 <= {{sessionUpdate_rsp_V_TDATA[32:1]}};
        tmp_key_theirPort_V_reg_190 <= {{sessionUpdate_rsp_V_TDATA[64:49]}};
        tmp_sessionID_V_reg_195 <= {{sessionUpdate_rsp_V_TDATA[80:65]}};
        tmp_source_reg_205 <= sessionUpdate_rsp_V_TDATA[32'd82];
        tmp_success_reg_200 <= sessionUpdate_rsp_V_TDATA[32'd81];
        trunc_ln148_reg_176 <= trunc_ln148_fu_112_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_reg_172 <= tmp_nbreadreq_fu_72_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (tmp_nbreadreq_fu_72_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sessionUpdate_rsp_V_TDATA_blk_n = sessionUpdate_rsp_V_TVALID;
    end else begin
        sessionUpdate_rsp_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_72_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sessionUpdate_rsp_V_TREADY = 1'b1;
    end else begin
        sessionUpdate_rsp_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op23_write_state2 == 1'b1))) begin
        slc_sessionInsert_rs_11_blk_n = slc_sessionInsert_rs_11_full_n;
    end else begin
        slc_sessionInsert_rs_11_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op23_write_state2 == 1'b1))) begin
        slc_sessionInsert_rs_11_write = 1'b1;
    end else begin
        slc_sessionInsert_rs_11_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op23_write_state2 == 1'b1))) begin
        slc_sessionInsert_rs_13_blk_n = slc_sessionInsert_rs_13_full_n;
    end else begin
        slc_sessionInsert_rs_13_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op23_write_state2 == 1'b1))) begin
        slc_sessionInsert_rs_13_write = 1'b1;
    end else begin
        slc_sessionInsert_rs_13_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op23_write_state2 == 1'b1))) begin
        slc_sessionInsert_rs_14_blk_n = slc_sessionInsert_rs_14_full_n;
    end else begin
        slc_sessionInsert_rs_14_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op23_write_state2 == 1'b1))) begin
        slc_sessionInsert_rs_14_write = 1'b1;
    end else begin
        slc_sessionInsert_rs_14_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op23_write_state2 == 1'b1))) begin
        slc_sessionInsert_rs_15_blk_n = slc_sessionInsert_rs_15_full_n;
    end else begin
        slc_sessionInsert_rs_15_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op23_write_state2 == 1'b1))) begin
        slc_sessionInsert_rs_15_write = 1'b1;
    end else begin
        slc_sessionInsert_rs_15_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op23_write_state2 == 1'b1))) begin
        slc_sessionInsert_rs_7_blk_n = slc_sessionInsert_rs_7_full_n;
    end else begin
        slc_sessionInsert_rs_7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op23_write_state2 == 1'b1))) begin
        slc_sessionInsert_rs_7_write = 1'b1;
    end else begin
        slc_sessionInsert_rs_7_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op23_write_state2 == 1'b1))) begin
        slc_sessionInsert_rs_8_blk_n = slc_sessionInsert_rs_8_full_n;
    end else begin
        slc_sessionInsert_rs_8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op23_write_state2 == 1'b1))) begin
        slc_sessionInsert_rs_8_write = 1'b1;
    end else begin
        slc_sessionInsert_rs_8_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op23_write_state2 == 1'b1))) begin
        slc_sessionInsert_rs_9_blk_n = slc_sessionInsert_rs_9_full_n;
    end else begin
        slc_sessionInsert_rs_9_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op23_write_state2 == 1'b1))) begin
        slc_sessionInsert_rs_9_write = 1'b1;
    end else begin
        slc_sessionInsert_rs_9_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((io_acc_block_signal_op23 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op23_write_state2 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_72_p3 == 1'd1) & (sessionUpdate_rsp_V_TVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((io_acc_block_signal_op23 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op23_write_state2 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_72_p3 == 1'd1) & (sessionUpdate_rsp_V_TVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((io_acc_block_signal_op23 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op23_write_state2 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_72_p3 == 1'd1) & (sessionUpdate_rsp_V_TVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_72_p3 == 1'd1) & (sessionUpdate_rsp_V_TVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((io_acc_block_signal_op23 == 1'b0) & (ap_predicate_op23_write_state2 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

always @ (*) begin
    ap_predicate_op23_write_state2 = ((trunc_ln148_reg_176 == 1'd0) & (tmp_reg_172 == 1'd1));
end

assign io_acc_block_signal_op23 = (slc_sessionInsert_rs_9_full_n & slc_sessionInsert_rs_8_full_n & slc_sessionInsert_rs_7_full_n & slc_sessionInsert_rs_15_full_n & slc_sessionInsert_rs_14_full_n & slc_sessionInsert_rs_13_full_n & slc_sessionInsert_rs_11_full_n);

assign slc_sessionInsert_rs_11_din = tmp_key_theirPort_V_reg_190;

assign slc_sessionInsert_rs_13_din = 1'd0;

assign slc_sessionInsert_rs_14_din = tmp_sessionID_V_reg_195;

assign slc_sessionInsert_rs_15_din = tmp_source_reg_205;

assign slc_sessionInsert_rs_7_din = tmp_success_reg_200;

assign slc_sessionInsert_rs_8_din = tmp_key_myPort_V_reg_185;

assign slc_sessionInsert_rs_9_din = tmp_key_theirIp_V_reg_180;

assign tmp_nbreadreq_fu_72_p3 = sessionUpdate_rsp_V_TVALID;

assign trunc_ln148_fu_112_p1 = sessionUpdate_rsp_V_TDATA[0:0];

endmodule //updateReplyHandler
