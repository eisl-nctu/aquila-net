// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module prependPseudoHeader (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        rxEng_pseudoHeaderFi_3_dout,
        rxEng_pseudoHeaderFi_3_empty_n,
        rxEng_pseudoHeaderFi_3_read,
        rxEng_pseudoHeaderFi_5_dout,
        rxEng_pseudoHeaderFi_5_empty_n,
        rxEng_pseudoHeaderFi_5_read,
        rxEng_pseudoHeaderFi_6_dout,
        rxEng_pseudoHeaderFi_6_empty_n,
        rxEng_pseudoHeaderFi_6_read,
        rxEng_dataBuffer5_V_1_dout,
        rxEng_dataBuffer5_V_1_empty_n,
        rxEng_dataBuffer5_V_1_read,
        rxEng_dataBuffer5_V_2_dout,
        rxEng_dataBuffer5_V_2_empty_n,
        rxEng_dataBuffer5_V_2_read,
        rxEng_dataBuffer5_V_s_dout,
        rxEng_dataBuffer5_V_s_empty_n,
        rxEng_dataBuffer5_V_s_read,
        rxEng_dataBuffer1_V_din,
        rxEng_dataBuffer1_V_full_n,
        rxEng_dataBuffer1_V_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [63:0] rxEng_pseudoHeaderFi_3_dout;
input   rxEng_pseudoHeaderFi_3_empty_n;
output   rxEng_pseudoHeaderFi_3_read;
input  [7:0] rxEng_pseudoHeaderFi_5_dout;
input   rxEng_pseudoHeaderFi_5_empty_n;
output   rxEng_pseudoHeaderFi_5_read;
input  [0:0] rxEng_pseudoHeaderFi_6_dout;
input   rxEng_pseudoHeaderFi_6_empty_n;
output   rxEng_pseudoHeaderFi_6_read;
input  [63:0] rxEng_dataBuffer5_V_1_dout;
input   rxEng_dataBuffer5_V_1_empty_n;
output   rxEng_dataBuffer5_V_1_read;
input  [7:0] rxEng_dataBuffer5_V_2_dout;
input   rxEng_dataBuffer5_V_2_empty_n;
output   rxEng_dataBuffer5_V_2_read;
input  [0:0] rxEng_dataBuffer5_V_s_dout;
input   rxEng_dataBuffer5_V_s_empty_n;
output   rxEng_dataBuffer5_V_s_read;
output  [72:0] rxEng_dataBuffer1_V_din;
input   rxEng_dataBuffer1_V_full_n;
output   rxEng_dataBuffer1_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg rxEng_pseudoHeaderFi_3_read;
reg rxEng_pseudoHeaderFi_5_read;
reg rxEng_pseudoHeaderFi_6_read;
reg rxEng_dataBuffer5_V_1_read;
reg rxEng_dataBuffer5_V_2_read;
reg rxEng_dataBuffer5_V_s_read;
reg[72:0] rxEng_dataBuffer1_V_din;
reg rxEng_dataBuffer1_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    io_acc_block_signal_op8;
wire   [0:0] tmp_205_nbreadreq_fu_54_p5;
reg    ap_predicate_op8_read_state1;
wire    io_acc_block_signal_op18;
wire   [0:0] tmp_nbreadreq_fu_76_p5;
reg    ap_predicate_op18_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] state_2_load_reg_214;
reg   [0:0] tmp_205_reg_221;
reg   [0:0] tmp_last_V_reg_235;
reg    ap_predicate_op38_write_state2;
reg   [0:0] tmp_reg_239;
reg    ap_predicate_op45_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] state_2;
reg   [0:0] firstPayload;
reg   [63:0] prevWord_data_V_10;
reg    rxEng_pseudoHeaderFi_3_blk_n;
wire    ap_block_pp0_stage0;
reg    rxEng_pseudoHeaderFi_5_blk_n;
reg    rxEng_pseudoHeaderFi_6_blk_n;
reg    rxEng_dataBuffer1_V_blk_n;
reg    rxEng_dataBuffer5_V_1_blk_n;
reg    rxEng_dataBuffer5_V_2_blk_n;
reg    rxEng_dataBuffer5_V_s_blk_n;
reg   [63:0] tmp_data_V_reg_225;
reg   [7:0] tmp_keep_V_reg_230;
wire   [0:0] tmp_last_V_fu_130_p1;
reg   [7:0] tmp_keep_V_12_reg_248;
wire   [0:0] tmp_last_V_10_fu_160_p1;
reg   [0:0] tmp_last_V_10_reg_253;
wire   [63:0] p_Result_s_fu_172_p5;
wire   [0:0] firstPayload_load_load_fu_118_p1;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] ap_phi_reg_pp0_iter0_tmp_data_V_12_reg_105;
reg   [63:0] ap_phi_reg_pp0_iter1_tmp_data_V_12_reg_105;
wire   [72:0] tmp48_fu_196_p4;
reg    ap_block_pp0_stage0_01001;
wire   [72:0] tmp_1_fu_205_p4;
wire   [31:0] trunc_ln647_fu_168_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_167;
reg    ap_condition_179;
reg    ap_condition_119;
reg    ap_condition_182;
reg    ap_condition_207;
reg    ap_condition_185;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 state_2 = 1'd0;
#0 firstPayload = 1'd1;
#0 prevWord_data_V_10 = 64'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_119)) begin
        if ((1'b1 == ap_condition_179)) begin
            ap_phi_reg_pp0_iter1_tmp_data_V_12_reg_105 <= rxEng_dataBuffer5_V_1_dout;
        end else if ((1'b1 == ap_condition_167)) begin
            ap_phi_reg_pp0_iter1_tmp_data_V_12_reg_105 <= p_Result_s_fu_172_p5;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_data_V_12_reg_105 <= ap_phi_reg_pp0_iter0_tmp_data_V_12_reg_105;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_119)) begin
        if ((1'b1 == ap_condition_167)) begin
            firstPayload <= 1'd0;
        end else if ((1'b1 == ap_condition_182)) begin
            firstPayload <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_119)) begin
        if ((1'b1 == ap_condition_185)) begin
            state_2 <= 1'd0;
        end else if ((1'b1 == ap_condition_182)) begin
            state_2 <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_205_nbreadreq_fu_54_p5 == 1'd1) & (state_2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        prevWord_data_V_10 <= rxEng_pseudoHeaderFi_3_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        state_2_load_reg_214 <= state_2;
    end
end

always @ (posedge ap_clk) begin
    if (((state_2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_205_reg_221 <= tmp_205_nbreadreq_fu_54_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_205_nbreadreq_fu_54_p5 == 1'd1) & (state_2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_V_reg_225 <= rxEng_pseudoHeaderFi_3_dout;
        tmp_keep_V_reg_230 <= rxEng_pseudoHeaderFi_5_dout;
        tmp_last_V_reg_235 <= rxEng_pseudoHeaderFi_6_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_nbreadreq_fu_76_p5 == 1'd1) & (state_2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_keep_V_12_reg_248 <= rxEng_dataBuffer5_V_2_dout;
        tmp_last_V_10_reg_253 <= rxEng_dataBuffer5_V_s_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((state_2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_reg_239 <= tmp_nbreadreq_fu_76_p5;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op45_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op38_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        rxEng_dataBuffer1_V_blk_n = rxEng_dataBuffer1_V_full_n;
    end else begin
        rxEng_dataBuffer1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_207)) begin
        if ((ap_predicate_op45_write_state2 == 1'b1)) begin
            rxEng_dataBuffer1_V_din = tmp_1_fu_205_p4;
        end else if ((ap_predicate_op38_write_state2 == 1'b1)) begin
            rxEng_dataBuffer1_V_din = tmp48_fu_196_p4;
        end else begin
            rxEng_dataBuffer1_V_din = 'bx;
        end
    end else begin
        rxEng_dataBuffer1_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op45_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op38_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        rxEng_dataBuffer1_V_write = 1'b1;
    end else begin
        rxEng_dataBuffer1_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op18_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        rxEng_dataBuffer5_V_1_blk_n = rxEng_dataBuffer5_V_1_empty_n;
    end else begin
        rxEng_dataBuffer5_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op18_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rxEng_dataBuffer5_V_1_read = 1'b1;
    end else begin
        rxEng_dataBuffer5_V_1_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op18_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        rxEng_dataBuffer5_V_2_blk_n = rxEng_dataBuffer5_V_2_empty_n;
    end else begin
        rxEng_dataBuffer5_V_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op18_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rxEng_dataBuffer5_V_2_read = 1'b1;
    end else begin
        rxEng_dataBuffer5_V_2_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op18_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        rxEng_dataBuffer5_V_s_blk_n = rxEng_dataBuffer5_V_s_empty_n;
    end else begin
        rxEng_dataBuffer5_V_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op18_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rxEng_dataBuffer5_V_s_read = 1'b1;
    end else begin
        rxEng_dataBuffer5_V_s_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op8_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        rxEng_pseudoHeaderFi_3_blk_n = rxEng_pseudoHeaderFi_3_empty_n;
    end else begin
        rxEng_pseudoHeaderFi_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op8_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rxEng_pseudoHeaderFi_3_read = 1'b1;
    end else begin
        rxEng_pseudoHeaderFi_3_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op8_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        rxEng_pseudoHeaderFi_5_blk_n = rxEng_pseudoHeaderFi_5_empty_n;
    end else begin
        rxEng_pseudoHeaderFi_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op8_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rxEng_pseudoHeaderFi_5_read = 1'b1;
    end else begin
        rxEng_pseudoHeaderFi_5_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op8_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        rxEng_pseudoHeaderFi_6_blk_n = rxEng_pseudoHeaderFi_6_empty_n;
    end else begin
        rxEng_pseudoHeaderFi_6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op8_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rxEng_pseudoHeaderFi_6_read = 1'b1;
    end else begin
        rxEng_pseudoHeaderFi_6_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((io_acc_block_signal_op18 == 1'b0) & (ap_predicate_op18_read_state1 == 1'b1)) | ((io_acc_block_signal_op8 == 1'b0) & (ap_predicate_op8_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((rxEng_dataBuffer1_V_full_n == 1'b0) & (ap_predicate_op45_write_state2 == 1'b1)) | ((rxEng_dataBuffer1_V_full_n == 1'b0) & (ap_predicate_op38_write_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((io_acc_block_signal_op18 == 1'b0) & (ap_predicate_op18_read_state1 == 1'b1)) | ((io_acc_block_signal_op8 == 1'b0) & (ap_predicate_op8_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((rxEng_dataBuffer1_V_full_n == 1'b0) & (ap_predicate_op45_write_state2 == 1'b1)) | ((rxEng_dataBuffer1_V_full_n == 1'b0) & (ap_predicate_op38_write_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((io_acc_block_signal_op18 == 1'b0) & (ap_predicate_op18_read_state1 == 1'b1)) | ((io_acc_block_signal_op8 == 1'b0) & (ap_predicate_op8_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((rxEng_dataBuffer1_V_full_n == 1'b0) & (ap_predicate_op45_write_state2 == 1'b1)) | ((rxEng_dataBuffer1_V_full_n == 1'b0) & (ap_predicate_op38_write_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((io_acc_block_signal_op18 == 1'b0) & (ap_predicate_op18_read_state1 == 1'b1)) | ((io_acc_block_signal_op8 == 1'b0) & (ap_predicate_op8_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((rxEng_dataBuffer1_V_full_n == 1'b0) & (ap_predicate_op45_write_state2 == 1'b1)) | ((rxEng_dataBuffer1_V_full_n == 1'b0) & (ap_predicate_op38_write_state2 == 1'b1)));
end

always @ (*) begin
    ap_condition_119 = ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_167 = ((tmp_nbreadreq_fu_76_p5 == 1'd1) & (firstPayload_load_load_fu_118_p1 == 1'd1) & (state_2 == 1'd1));
end

always @ (*) begin
    ap_condition_179 = ((tmp_nbreadreq_fu_76_p5 == 1'd1) & (firstPayload_load_load_fu_118_p1 == 1'd0) & (state_2 == 1'd1));
end

always @ (*) begin
    ap_condition_182 = ((tmp_last_V_fu_130_p1 == 1'd1) & (tmp_205_nbreadreq_fu_54_p5 == 1'd1) & (state_2 == 1'd0));
end

always @ (*) begin
    ap_condition_185 = ((tmp_nbreadreq_fu_76_p5 == 1'd1) & (tmp_last_V_10_fu_160_p1 == 1'd1) & (state_2 == 1'd1));
end

always @ (*) begin
    ap_condition_207 = ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_tmp_data_V_12_reg_105 = 'bx;

always @ (*) begin
    ap_predicate_op18_read_state1 = ((tmp_nbreadreq_fu_76_p5 == 1'd1) & (state_2 == 1'd1));
end

always @ (*) begin
    ap_predicate_op38_write_state2 = ((tmp_205_reg_221 == 1'd1) & (tmp_last_V_reg_235 == 1'd0) & (state_2_load_reg_214 == 1'd0));
end

always @ (*) begin
    ap_predicate_op45_write_state2 = ((state_2_load_reg_214 == 1'd1) & (tmp_reg_239 == 1'd1));
end

always @ (*) begin
    ap_predicate_op8_read_state1 = ((tmp_205_nbreadreq_fu_54_p5 == 1'd1) & (state_2 == 1'd0));
end

assign firstPayload_load_load_fu_118_p1 = firstPayload;

assign io_acc_block_signal_op18 = (rxEng_dataBuffer5_V_s_empty_n & rxEng_dataBuffer5_V_2_empty_n & rxEng_dataBuffer5_V_1_empty_n);

assign io_acc_block_signal_op8 = (rxEng_pseudoHeaderFi_6_empty_n & rxEng_pseudoHeaderFi_5_empty_n & rxEng_pseudoHeaderFi_3_empty_n);

assign p_Result_s_fu_172_p5 = {{rxEng_dataBuffer5_V_1_dout[63:32]}, {trunc_ln647_fu_168_p1}};

assign tmp48_fu_196_p4 = {{{{1'd0}, {tmp_keep_V_reg_230}}}, {tmp_data_V_reg_225}};

assign tmp_1_fu_205_p4 = {{{tmp_last_V_10_reg_253}, {tmp_keep_V_12_reg_248}}, {ap_phi_reg_pp0_iter1_tmp_data_V_12_reg_105}};

assign tmp_205_nbreadreq_fu_54_p5 = (rxEng_pseudoHeaderFi_6_empty_n & rxEng_pseudoHeaderFi_5_empty_n & rxEng_pseudoHeaderFi_3_empty_n);

assign tmp_last_V_10_fu_160_p1 = rxEng_dataBuffer5_V_s_dout;

assign tmp_last_V_fu_130_p1 = rxEng_pseudoHeaderFi_6_dout;

assign tmp_nbreadreq_fu_76_p5 = (rxEng_dataBuffer5_V_s_empty_n & rxEng_dataBuffer5_V_2_empty_n & rxEng_dataBuffer5_V_1_empty_n);

assign trunc_ln647_fu_168_p1 = prevWord_data_V_10[31:0];

endmodule //prependPseudoHeader
