// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module process_ipv4_64_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        s_axis_rx_data_TVALID,
        rx_process2dropFifo_1_1_din,
        rx_process2dropFifo_1_1_full_n,
        rx_process2dropFifo_1_1_write,
        rx_process2dropFifo_2_0_din,
        rx_process2dropFifo_2_0_full_n,
        rx_process2dropFifo_2_0_write,
        rx_process2dropFifo_s_2_din,
        rx_process2dropFifo_s_2_full_n,
        rx_process2dropFifo_s_2_write,
        rx_process2dropLengt_1_din,
        rx_process2dropLengt_1_full_n,
        rx_process2dropLengt_1_write,
        MetaOut_V_TREADY,
        s_axis_rx_data_TDATA,
        s_axis_rx_data_TREADY,
        s_axis_rx_data_TKEEP,
        s_axis_rx_data_TLAST,
        MetaOut_V_TDATA,
        MetaOut_V_TVALID
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input   s_axis_rx_data_TVALID;
output  [63:0] rx_process2dropFifo_1_1_din;
input   rx_process2dropFifo_1_1_full_n;
output   rx_process2dropFifo_1_1_write;
output  [7:0] rx_process2dropFifo_2_0_din;
input   rx_process2dropFifo_2_0_full_n;
output   rx_process2dropFifo_2_0_write;
output  [0:0] rx_process2dropFifo_s_2_din;
input   rx_process2dropFifo_s_2_full_n;
output   rx_process2dropFifo_s_2_write;
output  [3:0] rx_process2dropLengt_1_din;
input   rx_process2dropLengt_1_full_n;
output   rx_process2dropLengt_1_write;
input   MetaOut_V_TREADY;
input  [63:0] s_axis_rx_data_TDATA;
output   s_axis_rx_data_TREADY;
input  [7:0] s_axis_rx_data_TKEEP;
input  [0:0] s_axis_rx_data_TLAST;
output  [47:0] MetaOut_V_TDATA;
output   MetaOut_V_TVALID;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg rx_process2dropFifo_1_1_write;
reg rx_process2dropFifo_2_0_write;
reg rx_process2dropFifo_s_2_write;
reg rx_process2dropLengt_1_write;
reg s_axis_rx_data_TREADY;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire   [0:0] tmp_nbreadreq_fu_106_p5;
reg    ap_block_state1_pp0_stage0_iter0;
wire    io_acc_block_signal_op58;
reg   [0:0] tmp_reg_535;
reg   [0:0] or_ln73_reg_580;
reg    ap_predicate_op58_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] tmp_reg_535_pp0_iter1_reg;
reg   [0:0] or_ln73_reg_580_pp0_iter1_reg;
reg   [0:0] metaWritten_load_reg_589;
reg    ap_predicate_op69_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
wire    MetaOut_V_1_ack_in;
reg    ap_predicate_op74_write_state3;
reg    ap_block_state3_io;
wire    MetaOut_V_1_ack_out;
reg   [1:0] MetaOut_V_1_state;
reg    ap_block_state4_pp0_stage0_iter3;
reg   [0:0] tmp_reg_535_pp0_iter2_reg;
reg   [0:0] or_ln73_reg_580_pp0_iter2_reg;
reg   [0:0] metaWritten_load_reg_589_pp0_iter2_reg;
reg    ap_predicate_op85_write_state4;
reg    ap_block_state4_io;
reg    ap_block_pp0_stage0_11001;
reg   [47:0] MetaOut_V_1_data_out;
reg    MetaOut_V_1_vld_in;
wire    MetaOut_V_1_vld_out;
reg   [47:0] MetaOut_V_1_payload_A;
reg   [47:0] MetaOut_V_1_payload_B;
reg    MetaOut_V_1_sel_rd;
reg    MetaOut_V_1_sel_wr;
wire    MetaOut_V_1_sel;
wire    MetaOut_V_1_load_A;
wire    MetaOut_V_1_load_B;
wire    MetaOut_V_1_state_cmp_full;
reg   [0:0] header_ready;
reg   [15:0] header_idx;
reg   [159:0] header_header_V;
reg   [0:0] metaWritten;
reg   [3:0] headerWordsDropped_V;
reg    s_axis_rx_data_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    MetaOut_V_TDATA_blk_n;
reg    rx_process2dropFifo_1_1_blk_n;
reg    rx_process2dropFifo_2_0_blk_n;
reg    rx_process2dropFifo_s_2_blk_n;
reg    rx_process2dropLengt_1_blk_n;
reg   [63:0] tmp_data_V_reg_539;
reg   [7:0] tmp_keep_V_reg_545;
reg   [0:0] tmp_last_V_reg_550;
reg   [0:0] tmp_last_V_reg_550_pp0_iter1_reg;
wire   [0:0] header_ready_load_load_fu_201_p1;
reg   [0:0] header_ready_load_reg_557;
wire   [1:0] trunc_ln58_fu_210_p1;
reg   [1:0] trunc_ln58_reg_561;
wire   [0:0] icmp_ln58_1_fu_252_p2;
reg   [0:0] icmp_ln58_1_reg_566;
wire   [7:0] trunc_ln58_1_fu_258_p1;
reg   [7:0] trunc_ln58_1_reg_574;
wire   [0:0] or_ln73_fu_276_p2;
wire   [0:0] xor_ln63_fu_282_p2;
reg   [0:0] xor_ln63_reg_584;
wire   [0:0] metaWritten_load_load_fu_442_p1;
wire   [0:0] or_ln63_fu_446_p2;
wire   [47:0] tmp_3_fu_505_p4;
reg    ap_block_pp0_stage0_subdone;
reg   [15:0] ap_phi_mux_phi_ln73_phi_fu_158_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_phi_ln73_reg_155;
wire   [15:0] add_ln67_fu_269_p2;
reg   [0:0] ap_phi_mux_write_flag_1_i_i_phi_fu_167_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_write_flag_1_i_i_reg_164;
wire   [0:0] xor_ln58_fu_262_p2;
reg   [0:0] ap_phi_mux_metaWritten_flag_1_i_phi_fu_178_p6;
wire   [0:0] ap_phi_reg_pp0_iter0_metaWritten_flag_1_i_reg_174;
reg   [0:0] ap_phi_reg_pp0_iter1_metaWritten_flag_1_i_reg_174;
wire   [0:0] and_ln63_fu_288_p2;
wire   [15:0] select_ln63_fu_294_p3;
wire   [159:0] or_ln58_fu_430_p2;
wire   [3:0] select_ln63_1_fu_522_p3;
reg    ap_block_pp0_stage0_01001;
wire   [21:0] Lo_assign_fu_214_p3;
wire   [22:0] zext_ln58_fu_222_p1;
wire   [22:0] add_ln58_fu_226_p2;
wire   [0:0] icmp_ln58_fu_232_p2;
wire   [21:0] or_ln60_fu_238_p2;
wire   [21:0] select_ln58_fu_244_p3;
wire   [7:0] tmp_1_fu_321_p3;
wire   [7:0] sub_ln58_fu_328_p2;
wire   [7:0] select_ln58_1_fu_334_p3;
wire   [7:0] select_ln58_3_fu_346_p3;
wire   [7:0] select_ln58_2_fu_340_p3;
wire   [7:0] sub_ln58_1_fu_353_p2;
wire   [159:0] tmp_V_1_fu_318_p1;
wire   [159:0] zext_ln58_1_fu_359_p1;
wire   [159:0] shl_ln58_fu_371_p2;
reg   [159:0] tmp_2_fu_377_p4;
wire   [159:0] zext_ln58_2_fu_363_p1;
wire   [159:0] zext_ln58_3_fu_367_p1;
wire   [159:0] shl_ln58_1_fu_394_p2;
wire   [159:0] lshr_ln58_fu_400_p2;
wire   [159:0] and_ln58_fu_406_p2;
wire   [159:0] xor_ln58_1_fu_412_p2;
wire   [159:0] select_ln58_4_fu_387_p3;
wire   [159:0] and_ln58_1_fu_418_p2;
wire   [159:0] and_ln58_2_fu_424_p2;
wire   [3:0] trunc_ln647_fu_464_p1;
wire   [7:0] p_Result_2_1_i_i_fu_495_p4;
wire   [7:0] p_Result_2_i_i21_i_fu_485_p4;
wire   [31:0] tmp_their_address_V_fu_475_p4;
wire   [3:0] add_ln700_fu_516_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_574;
reg    ap_condition_213;
reg    ap_condition_143;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 MetaOut_V_1_state = 2'd0;
#0 MetaOut_V_1_sel_rd = 1'b0;
#0 MetaOut_V_1_sel_wr = 1'b0;
#0 header_ready = 1'd0;
#0 header_idx = 16'd0;
#0 header_header_V = 160'd1180591620717411303493;
#0 metaWritten = 1'd0;
#0 headerWordsDropped_V = 4'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        MetaOut_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == MetaOut_V_1_vld_out) & (1'b1 == MetaOut_V_1_ack_out))) begin
            MetaOut_V_1_sel_rd <= ~MetaOut_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        MetaOut_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == MetaOut_V_1_ack_in) & (1'b1 == MetaOut_V_1_vld_in))) begin
            MetaOut_V_1_sel_wr <= ~MetaOut_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        MetaOut_V_1_state <= 2'd0;
    end else begin
        if ((((1'b0 == MetaOut_V_1_vld_in) & (1'b1 == MetaOut_V_1_ack_out) & (2'd3 == MetaOut_V_1_state)) | ((1'b0 == MetaOut_V_1_vld_in) & (2'd2 == MetaOut_V_1_state)))) begin
            MetaOut_V_1_state <= 2'd2;
        end else if ((((1'b0 == MetaOut_V_TREADY) & (2'd1 == MetaOut_V_1_state)) | ((1'b0 == MetaOut_V_TREADY) & (1'b1 == MetaOut_V_1_vld_in) & (2'd3 == MetaOut_V_1_state)))) begin
            MetaOut_V_1_state <= 2'd1;
        end else if ((((1'b1 == MetaOut_V_1_ack_out) & (2'd1 == MetaOut_V_1_state)) | (~((1'b0 == MetaOut_V_1_vld_in) & (1'b1 == MetaOut_V_1_ack_out)) & ~((1'b0 == MetaOut_V_TREADY) & (1'b1 == MetaOut_V_1_vld_in)) & (2'd3 == MetaOut_V_1_state)) | ((1'b1 == MetaOut_V_1_vld_in) & (2'd2 == MetaOut_V_1_state)))) begin
            MetaOut_V_1_state <= 2'd3;
        end else begin
            MetaOut_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_143)) begin
        if (((or_ln73_fu_276_p2 == 1'd0) & (tmp_nbreadreq_fu_106_p5 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_metaWritten_flag_1_i_reg_174 <= 1'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_metaWritten_flag_1_i_reg_174 <= ap_phi_reg_pp0_iter0_metaWritten_flag_1_i_reg_174;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == MetaOut_V_1_load_A)) begin
        MetaOut_V_1_payload_A <= tmp_3_fu_505_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == MetaOut_V_1_load_B)) begin
        MetaOut_V_1_payload_B <= tmp_3_fu_505_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_535_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        headerWordsDropped_V <= select_ln63_1_fu_522_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((header_ready_load_reg_557 == 1'd0) & (tmp_reg_535 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        header_header_V <= or_ln58_fu_430_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_nbreadreq_fu_106_p5 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        header_idx <= select_ln63_fu_294_p3;
        header_ready <= and_ln63_fu_288_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_nbreadreq_fu_106_p5 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        header_ready_load_reg_557 <= header_ready;
        or_ln73_reg_580 <= or_ln73_fu_276_p2;
        tmp_data_V_reg_539 <= s_axis_rx_data_TDATA;
        tmp_keep_V_reg_545 <= s_axis_rx_data_TKEEP;
        tmp_last_V_reg_550 <= s_axis_rx_data_TLAST;
        xor_ln63_reg_584 <= xor_ln63_fu_282_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((header_ready_load_load_fu_201_p1 == 1'd0) & (tmp_nbreadreq_fu_106_p5 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln58_1_reg_566 <= icmp_ln58_1_fu_252_p2;
        trunc_ln58_1_reg_574[7 : 5] <= trunc_ln58_1_fu_258_p1[7 : 5];
        trunc_ln58_reg_561 <= trunc_ln58_fu_210_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_535 == 1'd1) & (or_ln63_fu_446_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        metaWritten <= xor_ln63_reg_584;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_535 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        metaWritten_load_reg_589 <= metaWritten;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        metaWritten_load_reg_589_pp0_iter2_reg <= metaWritten_load_reg_589;
        or_ln73_reg_580_pp0_iter2_reg <= or_ln73_reg_580_pp0_iter1_reg;
        tmp_reg_535_pp0_iter2_reg <= tmp_reg_535_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        or_ln73_reg_580_pp0_iter1_reg <= or_ln73_reg_580;
        tmp_last_V_reg_550_pp0_iter1_reg <= tmp_last_V_reg_550;
        tmp_reg_535 <= tmp_nbreadreq_fu_106_p5;
        tmp_reg_535_pp0_iter1_reg <= tmp_reg_535;
    end
end

always @ (*) begin
    if ((1'b1 == MetaOut_V_1_sel)) begin
        MetaOut_V_1_data_out = MetaOut_V_1_payload_B;
    end else begin
        MetaOut_V_1_data_out = MetaOut_V_1_payload_A;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op74_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MetaOut_V_1_vld_in = 1'b1;
    end else begin
        MetaOut_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_predicate_op85_write_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op74_write_state3 == 1'b1)))) begin
        MetaOut_V_TDATA_blk_n = MetaOut_V_1_state[1'd1];
    end else begin
        MetaOut_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_574)) begin
        if ((metaWritten_load_load_fu_442_p1 == 1'd0)) begin
            ap_phi_mux_metaWritten_flag_1_i_phi_fu_178_p6 = 1'd1;
        end else if ((metaWritten_load_load_fu_442_p1 == 1'd1)) begin
            ap_phi_mux_metaWritten_flag_1_i_phi_fu_178_p6 = 1'd0;
        end else begin
            ap_phi_mux_metaWritten_flag_1_i_phi_fu_178_p6 = ap_phi_reg_pp0_iter1_metaWritten_flag_1_i_reg_174;
        end
    end else begin
        ap_phi_mux_metaWritten_flag_1_i_phi_fu_178_p6 = ap_phi_reg_pp0_iter1_metaWritten_flag_1_i_reg_174;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_213)) begin
        if ((header_ready_load_load_fu_201_p1 == 1'd0)) begin
            ap_phi_mux_phi_ln73_phi_fu_158_p4 = add_ln67_fu_269_p2;
        end else if ((header_ready_load_load_fu_201_p1 == 1'd1)) begin
            ap_phi_mux_phi_ln73_phi_fu_158_p4 = header_idx;
        end else begin
            ap_phi_mux_phi_ln73_phi_fu_158_p4 = ap_phi_reg_pp0_iter0_phi_ln73_reg_155;
        end
    end else begin
        ap_phi_mux_phi_ln73_phi_fu_158_p4 = ap_phi_reg_pp0_iter0_phi_ln73_reg_155;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_213)) begin
        if ((header_ready_load_load_fu_201_p1 == 1'd0)) begin
            ap_phi_mux_write_flag_1_i_i_phi_fu_167_p4 = xor_ln58_fu_262_p2;
        end else if ((header_ready_load_load_fu_201_p1 == 1'd1)) begin
            ap_phi_mux_write_flag_1_i_i_phi_fu_167_p4 = 1'd0;
        end else begin
            ap_phi_mux_write_flag_1_i_i_phi_fu_167_p4 = ap_phi_reg_pp0_iter0_write_flag_1_i_i_reg_164;
        end
    end else begin
        ap_phi_mux_write_flag_1_i_i_phi_fu_167_p4 = ap_phi_reg_pp0_iter0_write_flag_1_i_i_reg_164;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op58_write_state2 == 1'b1))) begin
        rx_process2dropFifo_1_1_blk_n = rx_process2dropFifo_1_1_full_n;
    end else begin
        rx_process2dropFifo_1_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op58_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_process2dropFifo_1_1_write = 1'b1;
    end else begin
        rx_process2dropFifo_1_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op58_write_state2 == 1'b1))) begin
        rx_process2dropFifo_2_0_blk_n = rx_process2dropFifo_2_0_full_n;
    end else begin
        rx_process2dropFifo_2_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op58_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_process2dropFifo_2_0_write = 1'b1;
    end else begin
        rx_process2dropFifo_2_0_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op58_write_state2 == 1'b1))) begin
        rx_process2dropFifo_s_2_blk_n = rx_process2dropFifo_s_2_full_n;
    end else begin
        rx_process2dropFifo_s_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op58_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_process2dropFifo_s_2_write = 1'b1;
    end else begin
        rx_process2dropFifo_s_2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op69_write_state3 == 1'b1))) begin
        rx_process2dropLengt_1_blk_n = rx_process2dropLengt_1_full_n;
    end else begin
        rx_process2dropLengt_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op69_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_process2dropLengt_1_write = 1'b1;
    end else begin
        rx_process2dropLengt_1_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (tmp_nbreadreq_fu_106_p5 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_axis_rx_data_TDATA_blk_n = s_axis_rx_data_TVALID;
    end else begin
        s_axis_rx_data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_106_p5 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        s_axis_rx_data_TREADY = 1'b1;
    end else begin
        s_axis_rx_data_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Lo_assign_fu_214_p3 = {{header_idx}, {6'd0}};

assign MetaOut_V_1_ack_in = MetaOut_V_1_state[1'd1];

assign MetaOut_V_1_ack_out = MetaOut_V_TREADY;

assign MetaOut_V_1_load_A = (~MetaOut_V_1_sel_wr & MetaOut_V_1_state_cmp_full);

assign MetaOut_V_1_load_B = (MetaOut_V_1_state_cmp_full & MetaOut_V_1_sel_wr);

assign MetaOut_V_1_sel = MetaOut_V_1_sel_rd;

assign MetaOut_V_1_state_cmp_full = ((MetaOut_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign MetaOut_V_1_vld_out = MetaOut_V_1_state[1'd0];

assign MetaOut_V_TDATA = MetaOut_V_1_data_out;

assign MetaOut_V_TVALID = MetaOut_V_1_state[1'd0];

assign add_ln58_fu_226_p2 = (zext_ln58_fu_222_p1 + 23'd64);

assign add_ln67_fu_269_p2 = (header_idx + 16'd1);

assign add_ln700_fu_516_p2 = (headerWordsDropped_V + 4'd2);

assign and_ln58_1_fu_418_p2 = (xor_ln58_1_fu_412_p2 & header_header_V);

assign and_ln58_2_fu_424_p2 = (select_ln58_4_fu_387_p3 & and_ln58_fu_406_p2);

assign and_ln58_fu_406_p2 = (shl_ln58_1_fu_394_p2 & lshr_ln58_fu_400_p2);

assign and_ln63_fu_288_p2 = (xor_ln63_fu_282_p2 & or_ln73_fu_276_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((rx_process2dropLengt_1_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op69_write_state3 == 1'b1)) | ((io_acc_block_signal_op58 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op58_write_state2 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_106_p5 == 1'd1) & (s_axis_rx_data_TVALID == 1'b0)))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((2'd1 == MetaOut_V_1_state) | ((1'b0 == MetaOut_V_TREADY) & (2'd3 == MetaOut_V_1_state)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((io_acc_block_signal_op58 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op58_write_state2 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_106_p5 == 1'd1) & (s_axis_rx_data_TVALID == 1'b0)))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((1'b1 == ap_block_state4_io) | (2'd1 == MetaOut_V_1_state) | ((1'b0 == MetaOut_V_TREADY) & (2'd3 == MetaOut_V_1_state)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((rx_process2dropLengt_1_full_n == 1'b0) & (ap_predicate_op69_write_state3 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((io_acc_block_signal_op58 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op58_write_state2 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_106_p5 == 1'd1) & (s_axis_rx_data_TVALID == 1'b0)))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((1'b1 == ap_block_state4_io) | (2'd1 == MetaOut_V_1_state) | ((1'b0 == MetaOut_V_TREADY) & (2'd3 == MetaOut_V_1_state)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((rx_process2dropLengt_1_full_n == 1'b0) & (ap_predicate_op69_write_state3 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_106_p5 == 1'd1) & (s_axis_rx_data_TVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((io_acc_block_signal_op58 == 1'b0) & (ap_predicate_op58_write_state2 == 1'b1));
end

always @ (*) begin
    ap_block_state3_io = ((1'b0 == MetaOut_V_1_ack_in) & (ap_predicate_op74_write_state3 == 1'b1));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((rx_process2dropLengt_1_full_n == 1'b0) & (ap_predicate_op69_write_state3 == 1'b1));
end

always @ (*) begin
    ap_block_state4_io = ((1'b0 == MetaOut_V_1_ack_in) & (ap_predicate_op85_write_state4 == 1'b1));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((2'd1 == MetaOut_V_1_state) | ((1'b0 == MetaOut_V_TREADY) & (2'd3 == MetaOut_V_1_state)));
end

always @ (*) begin
    ap_condition_143 = ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_213 = ((tmp_nbreadreq_fu_106_p5 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_574 = ((or_ln73_reg_580 == 1'd1) & (tmp_reg_535 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_metaWritten_flag_1_i_reg_174 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln73_reg_155 = 'bx;

assign ap_phi_reg_pp0_iter0_write_flag_1_i_i_reg_164 = 'bx;

always @ (*) begin
    ap_predicate_op58_write_state2 = ((or_ln73_reg_580 == 1'd1) & (tmp_reg_535 == 1'd1));
end

always @ (*) begin
    ap_predicate_op69_write_state3 = ((metaWritten_load_reg_589 == 1'd0) & (or_ln73_reg_580_pp0_iter1_reg == 1'd1) & (tmp_reg_535_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op74_write_state3 = ((metaWritten_load_reg_589 == 1'd0) & (or_ln73_reg_580_pp0_iter1_reg == 1'd1) & (tmp_reg_535_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op85_write_state4 = ((metaWritten_load_reg_589_pp0_iter2_reg == 1'd0) & (or_ln73_reg_580_pp0_iter2_reg == 1'd1) & (tmp_reg_535_pp0_iter2_reg == 1'd1));
end

assign header_ready_load_load_fu_201_p1 = header_ready;

assign icmp_ln58_1_fu_252_p2 = ((Lo_assign_fu_214_p3 > select_ln58_fu_244_p3) ? 1'b1 : 1'b0);

assign icmp_ln58_fu_232_p2 = ((add_ln58_fu_226_p2 < 23'd160) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op58 = (rx_process2dropFifo_s_2_full_n & rx_process2dropFifo_2_0_full_n & rx_process2dropFifo_1_1_full_n);

assign lshr_ln58_fu_400_p2 = 160'd1461501637330902918203684832716283019655932542975 >> zext_ln58_3_fu_367_p1;

assign metaWritten_load_load_fu_442_p1 = metaWritten;

assign or_ln58_fu_430_p2 = (and_ln58_2_fu_424_p2 | and_ln58_1_fu_418_p2);

assign or_ln60_fu_238_p2 = (22'd63 | Lo_assign_fu_214_p3);

assign or_ln63_fu_446_p2 = (tmp_last_V_reg_550 | ap_phi_mux_metaWritten_flag_1_i_phi_fu_178_p6);

assign or_ln73_fu_276_p2 = (header_ready | ap_phi_mux_write_flag_1_i_i_phi_fu_167_p4);

assign p_Result_2_1_i_i_fu_495_p4 = {{header_header_V[23:16]}};

assign p_Result_2_i_i21_i_fu_485_p4 = {{header_header_V[31:24]}};

assign rx_process2dropFifo_1_1_din = tmp_data_V_reg_539;

assign rx_process2dropFifo_2_0_din = tmp_keep_V_reg_545;

assign rx_process2dropFifo_s_2_din = tmp_last_V_reg_550;

assign rx_process2dropLengt_1_din = (trunc_ln647_fu_464_p1 - headerWordsDropped_V);

assign select_ln58_1_fu_334_p3 = ((icmp_ln58_1_reg_566[0:0] === 1'b1) ? tmp_1_fu_321_p3 : trunc_ln58_1_reg_574);

assign select_ln58_2_fu_340_p3 = ((icmp_ln58_1_reg_566[0:0] === 1'b1) ? trunc_ln58_1_reg_574 : tmp_1_fu_321_p3);

assign select_ln58_3_fu_346_p3 = ((icmp_ln58_1_reg_566[0:0] === 1'b1) ? sub_ln58_fu_328_p2 : tmp_1_fu_321_p3);

assign select_ln58_4_fu_387_p3 = ((icmp_ln58_1_reg_566[0:0] === 1'b1) ? tmp_2_fu_377_p4 : shl_ln58_fu_371_p2);

assign select_ln58_fu_244_p3 = ((icmp_ln58_fu_232_p2[0:0] === 1'b1) ? or_ln60_fu_238_p2 : 22'd159);

assign select_ln63_1_fu_522_p3 = ((tmp_last_V_reg_550_pp0_iter1_reg[0:0] === 1'b1) ? 4'd0 : add_ln700_fu_516_p2);

assign select_ln63_fu_294_p3 = ((s_axis_rx_data_TLAST[0:0] === 1'b1) ? 16'd0 : ap_phi_mux_phi_ln73_phi_fu_158_p4);

assign shl_ln58_1_fu_394_p2 = 160'd1461501637330902918203684832716283019655932542975 << zext_ln58_2_fu_363_p1;

assign shl_ln58_fu_371_p2 = tmp_V_1_fu_318_p1 << zext_ln58_1_fu_359_p1;

assign sub_ln58_1_fu_353_p2 = ($signed(8'd159) - $signed(select_ln58_1_fu_334_p3));

assign sub_ln58_fu_328_p2 = ($signed(8'd159) - $signed(tmp_1_fu_321_p3));

assign tmp_1_fu_321_p3 = {{trunc_ln58_reg_561}, {6'd0}};

integer ap_tvar_int_0;

always @ (shl_ln58_fu_371_p2) begin
    for (ap_tvar_int_0 = 160 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 159 - 0) begin
            tmp_2_fu_377_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_2_fu_377_p4[ap_tvar_int_0] = shl_ln58_fu_371_p2[159 - ap_tvar_int_0];
        end
    end
end

assign tmp_3_fu_505_p4 = {{{p_Result_2_1_i_i_fu_495_p4}, {p_Result_2_i_i21_i_fu_485_p4}}, {tmp_their_address_V_fu_475_p4}};

assign tmp_V_1_fu_318_p1 = tmp_data_V_reg_539;

assign tmp_nbreadreq_fu_106_p5 = s_axis_rx_data_TVALID;

assign tmp_their_address_V_fu_475_p4 = {{header_header_V[127:96]}};

assign trunc_ln58_1_fu_258_p1 = select_ln58_fu_244_p3[7:0];

assign trunc_ln58_fu_210_p1 = header_idx[1:0];

assign trunc_ln647_fu_464_p1 = header_header_V[3:0];

assign xor_ln58_1_fu_412_p2 = (160'd1461501637330902918203684832716283019655932542975 ^ and_ln58_fu_406_p2);

assign xor_ln58_fu_262_p2 = (icmp_ln58_fu_232_p2 ^ 1'd1);

assign xor_ln63_fu_282_p2 = (s_axis_rx_data_TLAST ^ 1'd1);

assign zext_ln58_1_fu_359_p1 = select_ln58_3_fu_346_p3;

assign zext_ln58_2_fu_363_p1 = select_ln58_2_fu_340_p3;

assign zext_ln58_3_fu_367_p1 = sub_ln58_1_fu_353_p2;

assign zext_ln58_fu_222_p1 = Lo_assign_fu_214_p3;

always @ (posedge ap_clk) begin
    trunc_ln58_1_reg_574[4:0] <= 5'b11111;
end

endmodule //process_ipv4_64_s
