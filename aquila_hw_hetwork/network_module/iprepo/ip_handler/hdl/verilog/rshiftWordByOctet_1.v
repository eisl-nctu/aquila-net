// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module rshiftWordByOctet_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        ipv4ShiftFifo_V_data_dout,
        ipv4ShiftFifo_V_data_empty_n,
        ipv4ShiftFifo_V_data_read,
        ipv4ShiftFifo_V_keep_dout,
        ipv4ShiftFifo_V_keep_empty_n,
        ipv4ShiftFifo_V_keep_read,
        ipv4ShiftFifo_V_last_dout,
        ipv4ShiftFifo_V_last_empty_n,
        ipv4ShiftFifo_V_last_read,
        ipDataFifo_V_din,
        ipDataFifo_V_full_n,
        ipDataFifo_V_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [63:0] ipv4ShiftFifo_V_data_dout;
input   ipv4ShiftFifo_V_data_empty_n;
output   ipv4ShiftFifo_V_data_read;
input  [7:0] ipv4ShiftFifo_V_keep_dout;
input   ipv4ShiftFifo_V_keep_empty_n;
output   ipv4ShiftFifo_V_keep_read;
input  [0:0] ipv4ShiftFifo_V_last_dout;
input   ipv4ShiftFifo_V_last_empty_n;
output   ipv4ShiftFifo_V_last_read;
output  [72:0] ipDataFifo_V_din;
input   ipDataFifo_V_full_n;
output   ipDataFifo_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg ipv4ShiftFifo_V_data_read;
reg ipv4ShiftFifo_V_keep_read;
reg ipv4ShiftFifo_V_last_read;
reg[72:0] ipDataFifo_V_din;
reg ipDataFifo_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    io_acc_block_signal_op7;
wire   [0:0] fsmState_1_load_load_fu_135_p1;
wire   [0:0] tmp_nbreadreq_fu_66_p5;
reg    ap_predicate_op7_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] fsmState_1_load_reg_243;
reg   [0:0] tmp_reg_247;
reg   [0:0] rs_firstWord_1_load_reg_267;
reg    ap_predicate_op36_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] fsmState_1;
reg   [63:0] prevWord_data_V;
reg   [7:0] prevWord_keep_V_1;
reg   [0:0] rs_firstWord_1;
reg    ipv4ShiftFifo_V_data_blk_n;
wire    ap_block_pp0_stage0;
reg    ipv4ShiftFifo_V_keep_blk_n;
reg    ipv4ShiftFifo_V_last_blk_n;
reg    ipDataFifo_V_blk_n;
reg   [63:0] tmp_data_V_reg_251;
reg   [7:0] tmp_keep_V_reg_257;
wire   [0:0] tmp_last_V_fu_147_p1;
wire   [0:0] rs_firstWord_1_load_load_fu_151_p1;
wire   [0:0] tmp_last_V_1_fu_165_p2;
reg   [0:0] tmp_last_V_1_reg_271;
reg    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_p_0256_2_0_i_phi_fu_98_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_p_0256_2_0_i_reg_95;
reg   [0:0] ap_phi_mux_rs_firstWord_1_new_0_phi_fu_109_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_rs_firstWord_1_new_0_reg_106;
wire   [72:0] tmp28_fu_206_p6;
reg    ap_block_pp0_stage0_01001;
wire   [72:0] tmp_1_fu_230_p5;
wire   [1:0] p_Result_14_i_fu_155_p4;
wire   [5:0] trunc_ln647_1_fu_203_p1;
wire   [1:0] grp_fu_126_p4;
wire   [47:0] trunc_ln647_fu_200_p1;
wire   [15:0] grp_fu_117_p4;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_169;
reg    ap_condition_156;
reg    ap_condition_91;
reg    ap_condition_179;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 fsmState_1 = 1'd0;
#0 prevWord_data_V = 64'd0;
#0 prevWord_keep_V_1 = 8'd0;
#0 rs_firstWord_1 = 1'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_91)) begin
        if ((fsmState_1_load_load_fu_135_p1 == 1'd1)) begin
            fsmState_1 <= 1'd0;
        end else if ((1'b1 == ap_condition_156)) begin
            fsmState_1 <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fsmState_1_load_reg_243 <= fsmState_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_247 == 1'd1) & (fsmState_1_load_reg_243 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prevWord_data_V <= tmp_data_V_reg_251;
        prevWord_keep_V_1 <= tmp_keep_V_reg_257;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_66_p5 == 1'd1) & (fsmState_1 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rs_firstWord_1 <= ap_phi_mux_rs_firstWord_1_new_0_phi_fu_109_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_66_p5 == 1'd1) & (fsmState_1 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rs_firstWord_1_load_reg_267 <= rs_firstWord_1;
        tmp_data_V_reg_251 <= ipv4ShiftFifo_V_data_dout;
        tmp_keep_V_reg_257 <= ipv4ShiftFifo_V_keep_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_66_p5 == 1'd1) & (rs_firstWord_1_load_load_fu_151_p1 == 1'd0) & (fsmState_1 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_last_V_1_reg_271 <= tmp_last_V_1_fu_165_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (fsmState_1 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_reg_247 <= tmp_nbreadreq_fu_66_p5;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_169)) begin
        if ((rs_firstWord_1_load_load_fu_151_p1 == 1'd1)) begin
            ap_phi_mux_p_0256_2_0_i_phi_fu_98_p4 = 1'd0;
        end else if ((rs_firstWord_1_load_load_fu_151_p1 == 1'd0)) begin
            ap_phi_mux_p_0256_2_0_i_phi_fu_98_p4 = tmp_last_V_1_fu_165_p2;
        end else begin
            ap_phi_mux_p_0256_2_0_i_phi_fu_98_p4 = ap_phi_reg_pp0_iter0_p_0256_2_0_i_reg_95;
        end
    end else begin
        ap_phi_mux_p_0256_2_0_i_phi_fu_98_p4 = ap_phi_reg_pp0_iter0_p_0256_2_0_i_reg_95;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_169)) begin
        if ((tmp_last_V_fu_147_p1 == 1'd0)) begin
            ap_phi_mux_rs_firstWord_1_new_0_phi_fu_109_p4 = 1'd0;
        end else if ((tmp_last_V_fu_147_p1 == 1'd1)) begin
            ap_phi_mux_rs_firstWord_1_new_0_phi_fu_109_p4 = 1'd1;
        end else begin
            ap_phi_mux_rs_firstWord_1_new_0_phi_fu_109_p4 = ap_phi_reg_pp0_iter0_rs_firstWord_1_new_0_reg_106;
        end
    end else begin
        ap_phi_mux_rs_firstWord_1_new_0_phi_fu_109_p4 = ap_phi_reg_pp0_iter0_rs_firstWord_1_new_0_reg_106;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((fsmState_1_load_reg_243 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op36_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        ipDataFifo_V_blk_n = ipDataFifo_V_full_n;
    end else begin
        ipDataFifo_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_179)) begin
        if ((fsmState_1_load_reg_243 == 1'd1)) begin
            ipDataFifo_V_din = tmp_1_fu_230_p5;
        end else if ((ap_predicate_op36_write_state2 == 1'b1)) begin
            ipDataFifo_V_din = tmp28_fu_206_p6;
        end else begin
            ipDataFifo_V_din = 'bx;
        end
    end else begin
        ipDataFifo_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (fsmState_1_load_reg_243 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op36_write_state2 == 1'b1)))) begin
        ipDataFifo_V_write = 1'b1;
    end else begin
        ipDataFifo_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ipv4ShiftFifo_V_data_blk_n = ipv4ShiftFifo_V_data_empty_n;
    end else begin
        ipv4ShiftFifo_V_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1))) begin
        ipv4ShiftFifo_V_data_read = 1'b1;
    end else begin
        ipv4ShiftFifo_V_data_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ipv4ShiftFifo_V_keep_blk_n = ipv4ShiftFifo_V_keep_empty_n;
    end else begin
        ipv4ShiftFifo_V_keep_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1))) begin
        ipv4ShiftFifo_V_keep_read = 1'b1;
    end else begin
        ipv4ShiftFifo_V_keep_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ipv4ShiftFifo_V_last_blk_n = ipv4ShiftFifo_V_last_empty_n;
    end else begin
        ipv4ShiftFifo_V_last_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1))) begin
        ipv4ShiftFifo_V_last_read = 1'b1;
    end else begin
        ipv4ShiftFifo_V_last_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((fsmState_1_load_reg_243 == 1'd1) & (ipDataFifo_V_full_n == 1'b0)) | ((ipDataFifo_V_full_n == 1'b0) & (ap_predicate_op36_write_state2 == 1'b1)))) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((io_acc_block_signal_op7 == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((fsmState_1_load_reg_243 == 1'd1) & (ipDataFifo_V_full_n == 1'b0)) | ((ipDataFifo_V_full_n == 1'b0) & (ap_predicate_op36_write_state2 == 1'b1)))) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((io_acc_block_signal_op7 == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((fsmState_1_load_reg_243 == 1'd1) & (ipDataFifo_V_full_n == 1'b0)) | ((ipDataFifo_V_full_n == 1'b0) & (ap_predicate_op36_write_state2 == 1'b1)))) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((io_acc_block_signal_op7 == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((io_acc_block_signal_op7 == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((fsmState_1_load_reg_243 == 1'd1) & (ipDataFifo_V_full_n == 1'b0)) | ((ipDataFifo_V_full_n == 1'b0) & (ap_predicate_op36_write_state2 == 1'b1)));
end

always @ (*) begin
    ap_condition_156 = ((tmp_last_V_fu_147_p1 == 1'd1) & (tmp_nbreadreq_fu_66_p5 == 1'd1) & (ap_phi_mux_p_0256_2_0_i_phi_fu_98_p4 == 1'd0) & (fsmState_1 == 1'd0));
end

always @ (*) begin
    ap_condition_169 = ((tmp_nbreadreq_fu_66_p5 == 1'd1) & (fsmState_1 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_179 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001));
end

always @ (*) begin
    ap_condition_91 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_p_0256_2_0_i_reg_95 = 'bx;

assign ap_phi_reg_pp0_iter0_rs_firstWord_1_new_0_reg_106 = 'bx;

always @ (*) begin
    ap_predicate_op36_write_state2 = ((tmp_reg_247 == 1'd1) & (rs_firstWord_1_load_reg_267 == 1'd0) & (fsmState_1_load_reg_243 == 1'd0));
end

always @ (*) begin
    ap_predicate_op7_read_state1 = ((tmp_nbreadreq_fu_66_p5 == 1'd1) & (fsmState_1 == 1'd0));
end

assign fsmState_1_load_load_fu_135_p1 = fsmState_1;

assign grp_fu_117_p4 = {{prevWord_data_V[63:48]}};

assign grp_fu_126_p4 = {{prevWord_keep_V_1[7:6]}};

assign io_acc_block_signal_op7 = (ipv4ShiftFifo_V_last_empty_n & ipv4ShiftFifo_V_keep_empty_n & ipv4ShiftFifo_V_data_empty_n);

assign p_Result_14_i_fu_155_p4 = {{ipv4ShiftFifo_V_keep_dout[7:6]}};

assign rs_firstWord_1_load_load_fu_151_p1 = rs_firstWord_1;

assign tmp28_fu_206_p6 = {{{{{tmp_last_V_1_reg_271}, {trunc_ln647_1_fu_203_p1}}, {grp_fu_126_p4}}, {trunc_ln647_fu_200_p1}}, {grp_fu_117_p4}};

assign tmp_1_fu_230_p5 = {{{{{{7'd64}, {grp_fu_126_p4}}}, {48'd0}}}, {grp_fu_117_p4}};

assign tmp_last_V_1_fu_165_p2 = ((p_Result_14_i_fu_155_p4 == 2'd0) ? 1'b1 : 1'b0);

assign tmp_last_V_fu_147_p1 = ipv4ShiftFifo_V_last_dout;

assign tmp_nbreadreq_fu_66_p5 = (ipv4ShiftFifo_V_last_empty_n & ipv4ShiftFifo_V_keep_empty_n & ipv4ShiftFifo_V_data_empty_n);

assign trunc_ln647_1_fu_203_p1 = tmp_keep_V_reg_257[5:0];

assign trunc_ln647_fu_200_p1 = tmp_data_V_reg_251[47:0];

endmodule //rshiftWordByOctet_1
