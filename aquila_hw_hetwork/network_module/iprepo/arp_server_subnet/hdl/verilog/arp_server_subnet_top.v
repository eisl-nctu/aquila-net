// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="arp_server_subnet_top,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k325t-ffg900-2,HLS_INPUT_CLOCK=6.400000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=6.790500,HLS_SYN_LAT=6,HLS_SYN_TPT=1,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=3098,HLS_SYN_LUT=24012,HLS_VERSION=2019_1}" *)

module arp_server_subnet_top (
        s_axis_TDATA,
        s_axis_TKEEP,
        s_axis_TLAST,
        s_axis_arp_lookup_request_V_V_TDATA,
        s_axis_host_arp_lookup_request_V_V_TDATA,
        m_axis_TDATA,
        m_axis_TKEEP,
        m_axis_TLAST,
        m_axis_arp_lookup_reply_V_TDATA,
        m_axis_host_arp_lookup_reply_V_TDATA,
        myMacAddress_V,
        myIpAddress_V,
        regRequestCount_V,
        regReplyCount_V,
        ap_clk,
        ap_rst_n,
        s_axis_TVALID,
        s_axis_TREADY,
        regRequestCount_V_ap_vld,
        regReplyCount_V_ap_vld,
        m_axis_TVALID,
        m_axis_TREADY,
        s_axis_arp_lookup_request_V_V_TVALID,
        s_axis_arp_lookup_request_V_V_TREADY,
        s_axis_host_arp_lookup_request_V_V_TVALID,
        s_axis_host_arp_lookup_request_V_V_TREADY,
        m_axis_arp_lookup_reply_V_TVALID,
        m_axis_arp_lookup_reply_V_TREADY,
        m_axis_host_arp_lookup_reply_V_TVALID,
        m_axis_host_arp_lookup_reply_V_TREADY
);


input  [63:0] s_axis_TDATA;
input  [7:0] s_axis_TKEEP;
input  [0:0] s_axis_TLAST;
input  [31:0] s_axis_arp_lookup_request_V_V_TDATA;
input  [31:0] s_axis_host_arp_lookup_request_V_V_TDATA;
output  [63:0] m_axis_TDATA;
output  [7:0] m_axis_TKEEP;
output  [0:0] m_axis_TLAST;
output  [55:0] m_axis_arp_lookup_reply_V_TDATA;
output  [55:0] m_axis_host_arp_lookup_reply_V_TDATA;
input  [47:0] myMacAddress_V;
input  [31:0] myIpAddress_V;
output  [15:0] regRequestCount_V;
output  [15:0] regReplyCount_V;
input   ap_clk;
input   ap_rst_n;
input   s_axis_TVALID;
output   s_axis_TREADY;
output   regRequestCount_V_ap_vld;
output   regReplyCount_V_ap_vld;
output   m_axis_TVALID;
input   m_axis_TREADY;
input   s_axis_arp_lookup_request_V_V_TVALID;
output   s_axis_arp_lookup_request_V_V_TREADY;
input   s_axis_host_arp_lookup_request_V_V_TVALID;
output   s_axis_host_arp_lookup_request_V_V_TREADY;
output   m_axis_arp_lookup_reply_V_TVALID;
input   m_axis_arp_lookup_reply_V_TREADY;
output   m_axis_host_arp_lookup_reply_V_TVALID;
input   m_axis_host_arp_lookup_reply_V_TREADY;

 reg    ap_rst_n_inv;
wire    process_arp_pkg_64_U0_ap_start;
wire    process_arp_pkg_64_U0_ap_done;
wire    process_arp_pkg_64_U0_ap_continue;
wire    process_arp_pkg_64_U0_ap_idle;
wire    process_arp_pkg_64_U0_ap_ready;
wire   [80:0] process_arp_pkg_64_U0_arpTableInsertFifo_V_din;
wire    process_arp_pkg_64_U0_arpTableInsertFifo_V_write;
wire   [127:0] process_arp_pkg_64_U0_arpReplyMetaFifo_V_din;
wire    process_arp_pkg_64_U0_arpReplyMetaFifo_V_write;
wire    process_arp_pkg_64_U0_s_axis_TREADY;
wire   [15:0] process_arp_pkg_64_U0_regRequestCount_V;
wire    process_arp_pkg_64_U0_regRequestCount_V_ap_vld;
wire   [15:0] process_arp_pkg_64_U0_regReplyCount_V;
wire    process_arp_pkg_64_U0_regReplyCount_V_ap_vld;
wire    ap_sync_continue;
wire    generate_arp_pkg_64_U0_ap_start;
wire    generate_arp_pkg_64_U0_ap_done;
wire    generate_arp_pkg_64_U0_ap_continue;
wire    generate_arp_pkg_64_U0_ap_idle;
wire    generate_arp_pkg_64_U0_ap_ready;
wire    generate_arp_pkg_64_U0_arpRequestMetaFifo_V_read;
wire    generate_arp_pkg_64_U0_arpReplyMetaFifo_V_read;
wire   [63:0] generate_arp_pkg_64_U0_m_axis_TDATA;
wire    generate_arp_pkg_64_U0_m_axis_TVALID;
wire   [7:0] generate_arp_pkg_64_U0_m_axis_TKEEP;
wire   [0:0] generate_arp_pkg_64_U0_m_axis_TLAST;
wire    arp_table_U0_ap_start;
wire    arp_table_U0_ap_done;
wire    arp_table_U0_ap_continue;
wire    arp_table_U0_ap_idle;
wire    arp_table_U0_ap_ready;
wire    arp_table_U0_arpTableInsertFifo_V_read;
wire   [31:0] arp_table_U0_arpRequestMetaFifo_V_din;
wire    arp_table_U0_arpRequestMetaFifo_V_write;
wire    arp_table_U0_macIpEncode_req_V_V_TREADY;
wire    arp_table_U0_hostIpEncode_req_V_V_TREADY;
wire   [55:0] arp_table_U0_macIpEncode_rsp_V_TDATA;
wire    arp_table_U0_macIpEncode_rsp_V_TVALID;
wire   [55:0] arp_table_U0_hostIpEncode_rsp_V_TDATA;
wire    arp_table_U0_hostIpEncode_rsp_V_TVALID;
wire    arpReplyMetaFifo_V_full_n;
wire   [127:0] arpReplyMetaFifo_V_dout;
wire    arpReplyMetaFifo_V_empty_n;
wire    arpTableInsertFifo_V_full_n;
wire   [80:0] arpTableInsertFifo_V_dout;
wire    arpTableInsertFifo_V_empty_n;
wire    arpRequestMetaFifo_V_full_n;
wire   [31:0] arpRequestMetaFifo_V_dout;
wire    arpRequestMetaFifo_V_empty_n;

process_arp_pkg_64_s process_arp_pkg_64_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(process_arp_pkg_64_U0_ap_start),
    .ap_done(process_arp_pkg_64_U0_ap_done),
    .ap_continue(process_arp_pkg_64_U0_ap_continue),
    .ap_idle(process_arp_pkg_64_U0_ap_idle),
    .ap_ready(process_arp_pkg_64_U0_ap_ready),
    .s_axis_TVALID(s_axis_TVALID),
    .arpTableInsertFifo_V_din(process_arp_pkg_64_U0_arpTableInsertFifo_V_din),
    .arpTableInsertFifo_V_full_n(arpTableInsertFifo_V_full_n),
    .arpTableInsertFifo_V_write(process_arp_pkg_64_U0_arpTableInsertFifo_V_write),
    .arpReplyMetaFifo_V_din(process_arp_pkg_64_U0_arpReplyMetaFifo_V_din),
    .arpReplyMetaFifo_V_full_n(arpReplyMetaFifo_V_full_n),
    .arpReplyMetaFifo_V_write(process_arp_pkg_64_U0_arpReplyMetaFifo_V_write),
    .s_axis_TDATA(s_axis_TDATA),
    .s_axis_TREADY(process_arp_pkg_64_U0_s_axis_TREADY),
    .s_axis_TKEEP(s_axis_TKEEP),
    .s_axis_TLAST(s_axis_TLAST),
    .myIpAddress_V(myIpAddress_V),
    .regRequestCount_V(process_arp_pkg_64_U0_regRequestCount_V),
    .regRequestCount_V_ap_vld(process_arp_pkg_64_U0_regRequestCount_V_ap_vld),
    .regReplyCount_V(process_arp_pkg_64_U0_regReplyCount_V),
    .regReplyCount_V_ap_vld(process_arp_pkg_64_U0_regReplyCount_V_ap_vld)
);

generate_arp_pkg_64_s generate_arp_pkg_64_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(generate_arp_pkg_64_U0_ap_start),
    .ap_done(generate_arp_pkg_64_U0_ap_done),
    .ap_continue(generate_arp_pkg_64_U0_ap_continue),
    .ap_idle(generate_arp_pkg_64_U0_ap_idle),
    .ap_ready(generate_arp_pkg_64_U0_ap_ready),
    .arpRequestMetaFifo_V_dout(arpRequestMetaFifo_V_dout),
    .arpRequestMetaFifo_V_empty_n(arpRequestMetaFifo_V_empty_n),
    .arpRequestMetaFifo_V_read(generate_arp_pkg_64_U0_arpRequestMetaFifo_V_read),
    .arpReplyMetaFifo_V_dout(arpReplyMetaFifo_V_dout),
    .arpReplyMetaFifo_V_empty_n(arpReplyMetaFifo_V_empty_n),
    .arpReplyMetaFifo_V_read(generate_arp_pkg_64_U0_arpReplyMetaFifo_V_read),
    .m_axis_TREADY(m_axis_TREADY),
    .m_axis_TDATA(generate_arp_pkg_64_U0_m_axis_TDATA),
    .m_axis_TVALID(generate_arp_pkg_64_U0_m_axis_TVALID),
    .m_axis_TKEEP(generate_arp_pkg_64_U0_m_axis_TKEEP),
    .m_axis_TLAST(generate_arp_pkg_64_U0_m_axis_TLAST),
    .myMacAddress_V(myMacAddress_V),
    .myIpAddress_V(myIpAddress_V)
);

arp_table arp_table_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(arp_table_U0_ap_start),
    .ap_done(arp_table_U0_ap_done),
    .ap_continue(arp_table_U0_ap_continue),
    .ap_idle(arp_table_U0_ap_idle),
    .ap_ready(arp_table_U0_ap_ready),
    .hostIpEncode_req_V_V_TVALID(s_axis_host_arp_lookup_request_V_V_TVALID),
    .macIpEncode_req_V_V_TVALID(s_axis_arp_lookup_request_V_V_TVALID),
    .arpTableInsertFifo_V_dout(arpTableInsertFifo_V_dout),
    .arpTableInsertFifo_V_empty_n(arpTableInsertFifo_V_empty_n),
    .arpTableInsertFifo_V_read(arp_table_U0_arpTableInsertFifo_V_read),
    .hostIpEncode_rsp_V_TREADY(m_axis_host_arp_lookup_reply_V_TREADY),
    .macIpEncode_rsp_V_TREADY(m_axis_arp_lookup_reply_V_TREADY),
    .arpRequestMetaFifo_V_din(arp_table_U0_arpRequestMetaFifo_V_din),
    .arpRequestMetaFifo_V_full_n(arpRequestMetaFifo_V_full_n),
    .arpRequestMetaFifo_V_write(arp_table_U0_arpRequestMetaFifo_V_write),
    .macIpEncode_req_V_V_TDATA(s_axis_arp_lookup_request_V_V_TDATA),
    .macIpEncode_req_V_V_TREADY(arp_table_U0_macIpEncode_req_V_V_TREADY),
    .hostIpEncode_req_V_V_TDATA(s_axis_host_arp_lookup_request_V_V_TDATA),
    .hostIpEncode_req_V_V_TREADY(arp_table_U0_hostIpEncode_req_V_V_TREADY),
    .macIpEncode_rsp_V_TDATA(arp_table_U0_macIpEncode_rsp_V_TDATA),
    .macIpEncode_rsp_V_TVALID(arp_table_U0_macIpEncode_rsp_V_TVALID),
    .hostIpEncode_rsp_V_TDATA(arp_table_U0_hostIpEncode_rsp_V_TDATA),
    .hostIpEncode_rsp_V_TVALID(arp_table_U0_hostIpEncode_rsp_V_TVALID)
);

fifo_w128_d4_A arpReplyMetaFifo_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(process_arp_pkg_64_U0_arpReplyMetaFifo_V_din),
    .if_full_n(arpReplyMetaFifo_V_full_n),
    .if_write(process_arp_pkg_64_U0_arpReplyMetaFifo_V_write),
    .if_dout(arpReplyMetaFifo_V_dout),
    .if_empty_n(arpReplyMetaFifo_V_empty_n),
    .if_read(generate_arp_pkg_64_U0_arpReplyMetaFifo_V_read)
);

fifo_w81_d4_A arpTableInsertFifo_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(process_arp_pkg_64_U0_arpTableInsertFifo_V_din),
    .if_full_n(arpTableInsertFifo_V_full_n),
    .if_write(process_arp_pkg_64_U0_arpTableInsertFifo_V_write),
    .if_dout(arpTableInsertFifo_V_dout),
    .if_empty_n(arpTableInsertFifo_V_empty_n),
    .if_read(arp_table_U0_arpTableInsertFifo_V_read)
);

fifo_w32_d4_A arpRequestMetaFifo_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(arp_table_U0_arpRequestMetaFifo_V_din),
    .if_full_n(arpRequestMetaFifo_V_full_n),
    .if_write(arp_table_U0_arpRequestMetaFifo_V_write),
    .if_dout(arpRequestMetaFifo_V_dout),
    .if_empty_n(arpRequestMetaFifo_V_empty_n),
    .if_read(generate_arp_pkg_64_U0_arpRequestMetaFifo_V_read)
);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_continue = 1'b0;

assign arp_table_U0_ap_continue = 1'b1;

assign arp_table_U0_ap_start = 1'b1;

assign generate_arp_pkg_64_U0_ap_continue = 1'b1;

assign generate_arp_pkg_64_U0_ap_start = 1'b1;

assign m_axis_TDATA = generate_arp_pkg_64_U0_m_axis_TDATA;

assign m_axis_TKEEP = generate_arp_pkg_64_U0_m_axis_TKEEP;

assign m_axis_TLAST = generate_arp_pkg_64_U0_m_axis_TLAST;

assign m_axis_TVALID = generate_arp_pkg_64_U0_m_axis_TVALID;

assign m_axis_arp_lookup_reply_V_TDATA = arp_table_U0_macIpEncode_rsp_V_TDATA;

assign m_axis_arp_lookup_reply_V_TVALID = arp_table_U0_macIpEncode_rsp_V_TVALID;

assign m_axis_host_arp_lookup_reply_V_TDATA = arp_table_U0_hostIpEncode_rsp_V_TDATA;

assign m_axis_host_arp_lookup_reply_V_TVALID = arp_table_U0_hostIpEncode_rsp_V_TVALID;

assign process_arp_pkg_64_U0_ap_continue = 1'b1;

assign process_arp_pkg_64_U0_ap_start = 1'b1;

assign regReplyCount_V = process_arp_pkg_64_U0_regReplyCount_V;

assign regReplyCount_V_ap_vld = process_arp_pkg_64_U0_regReplyCount_V_ap_vld;

assign regRequestCount_V = process_arp_pkg_64_U0_regRequestCount_V;

assign regRequestCount_V_ap_vld = process_arp_pkg_64_U0_regRequestCount_V_ap_vld;

assign s_axis_TREADY = process_arp_pkg_64_U0_s_axis_TREADY;

assign s_axis_arp_lookup_request_V_V_TREADY = arp_table_U0_macIpEncode_req_V_V_TREADY;

assign s_axis_host_arp_lookup_request_V_V_TREADY = arp_table_U0_hostIpEncode_req_V_V_TREADY;

endmodule //arp_server_subnet_top
