-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity split_tx_meta is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    metaIn_V_TVALID : IN STD_LOGIC;
    tx_udpMetaFifo_V_the_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    tx_udpMetaFifo_V_the_full_n : IN STD_LOGIC;
    tx_udpMetaFifo_V_the_write : OUT STD_LOGIC;
    tx_udpMetaFifo_V_my_s_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    tx_udpMetaFifo_V_my_s_full_n : IN STD_LOGIC;
    tx_udpMetaFifo_V_my_s_write : OUT STD_LOGIC;
    tx_udpMetaFifo_V_len_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    tx_udpMetaFifo_V_len_full_n : IN STD_LOGIC;
    tx_udpMetaFifo_V_len_write : OUT STD_LOGIC;
    tx_udpMetaFifo_V_val_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    tx_udpMetaFifo_V_val_full_n : IN STD_LOGIC;
    tx_udpMetaFifo_V_val_write : OUT STD_LOGIC;
    metaOut0_V_TREADY : IN STD_LOGIC;
    metaIn_V_TDATA : IN STD_LOGIC_VECTOR (175 downto 0);
    metaIn_V_TREADY : OUT STD_LOGIC;
    metaOut0_V_TDATA : OUT STD_LOGIC_VECTOR (47 downto 0);
    metaOut0_V_TVALID : OUT STD_LOGIC );
end;


architecture behav of split_tx_meta is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv16_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal tmp_nbreadreq_fu_66_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal io_acc_block_signal_op14 : STD_LOGIC;
    signal tmp_reg_158 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal metaOut0_V_1_ack_in : STD_LOGIC;
    signal ap_block_state2_io : BOOLEAN;
    signal metaOut0_V_1_ack_out : STD_LOGIC;
    signal metaOut0_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal tmp_reg_158_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal metaOut0_V_1_data_out : STD_LOGIC_VECTOR (47 downto 0);
    signal metaOut0_V_1_vld_in : STD_LOGIC;
    signal metaOut0_V_1_vld_out : STD_LOGIC;
    signal metaOut0_V_1_payload_A : STD_LOGIC_VECTOR (47 downto 0);
    signal metaOut0_V_1_payload_B : STD_LOGIC_VECTOR (47 downto 0);
    signal metaOut0_V_1_sel_rd : STD_LOGIC := '0';
    signal metaOut0_V_1_sel_wr : STD_LOGIC := '0';
    signal metaOut0_V_1_sel : STD_LOGIC;
    signal metaOut0_V_1_load_A : STD_LOGIC;
    signal metaOut0_V_1_load_B : STD_LOGIC;
    signal metaOut0_V_1_state_cmp_full : STD_LOGIC;
    signal metaIn_V_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal metaOut0_V_TDATA_blk_n : STD_LOGIC;
    signal tx_udpMetaFifo_V_the_blk_n : STD_LOGIC;
    signal tx_udpMetaFifo_V_my_s_blk_n : STD_LOGIC;
    signal tx_udpMetaFifo_V_len_blk_n : STD_LOGIC;
    signal tx_udpMetaFifo_V_val_blk_n : STD_LOGIC;
    signal tmp_their_port_V_reg_162 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_my_port_V_reg_167 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_length_V_load_ne_reg_172 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_their_address_V_reg_177 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_150_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tempLen_V_fu_144_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    metaOut0_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                metaOut0_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((metaOut0_V_1_ack_out = ap_const_logic_1) and (metaOut0_V_1_vld_out = ap_const_logic_1))) then 
                                        metaOut0_V_1_sel_rd <= not(metaOut0_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    metaOut0_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                metaOut0_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((metaOut0_V_1_ack_in = ap_const_logic_1) and (metaOut0_V_1_vld_in = ap_const_logic_1))) then 
                                        metaOut0_V_1_sel_wr <= not(metaOut0_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    metaOut0_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                metaOut0_V_1_state <= ap_const_lv2_0;
            else
                if ((((metaOut0_V_1_state = ap_const_lv2_3) and (metaOut0_V_1_vld_in = ap_const_logic_0) and (metaOut0_V_1_ack_out = ap_const_logic_1)) or ((metaOut0_V_1_state = ap_const_lv2_2) and (metaOut0_V_1_vld_in = ap_const_logic_0)))) then 
                    metaOut0_V_1_state <= ap_const_lv2_2;
                elsif ((((metaOut0_V_1_state = ap_const_lv2_1) and (metaOut0_V_TREADY = ap_const_logic_0)) or ((metaOut0_V_1_state = ap_const_lv2_3) and (metaOut0_V_TREADY = ap_const_logic_0) and (metaOut0_V_1_vld_in = ap_const_logic_1)))) then 
                    metaOut0_V_1_state <= ap_const_lv2_1;
                elsif ((((metaOut0_V_1_state = ap_const_lv2_1) and (metaOut0_V_1_ack_out = ap_const_logic_1)) or (not(((metaOut0_V_1_vld_in = ap_const_logic_0) and (metaOut0_V_1_ack_out = ap_const_logic_1))) and not(((metaOut0_V_TREADY = ap_const_logic_0) and (metaOut0_V_1_vld_in = ap_const_logic_1))) and (metaOut0_V_1_state = ap_const_lv2_3)) or ((metaOut0_V_1_state = ap_const_lv2_2) and (metaOut0_V_1_vld_in = ap_const_logic_1)))) then 
                    metaOut0_V_1_state <= ap_const_lv2_3;
                else 
                    metaOut0_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((metaOut0_V_1_load_A = ap_const_logic_1)) then
                metaOut0_V_1_payload_A <= tmp_1_fu_150_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((metaOut0_V_1_load_B = ap_const_logic_1)) then
                metaOut0_V_1_payload_B <= tmp_1_fu_150_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_nbreadreq_fu_66_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_length_V_load_ne_reg_172 <= metaIn_V_TDATA(175 downto 160);
                tmp_my_port_V_reg_167 <= metaIn_V_TDATA(159 downto 144);
                tmp_their_address_V_reg_177 <= metaIn_V_TDATA(127 downto 96);
                tmp_their_port_V_reg_162 <= metaIn_V_TDATA(143 downto 128);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_reg_158 <= tmp_nbreadreq_fu_66_p3;
                tmp_reg_158_pp0_iter1_reg <= tmp_reg_158;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, metaIn_V_TVALID, tmp_nbreadreq_fu_66_p3, io_acc_block_signal_op14, tmp_reg_158, metaOut0_V_TREADY, metaOut0_V_1_state)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((metaOut0_V_1_state = ap_const_lv2_1) or ((metaOut0_V_1_state = ap_const_lv2_3) and (metaOut0_V_TREADY = ap_const_logic_0)))) or ((tmp_reg_158 = ap_const_lv1_1) and (io_acc_block_signal_op14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_66_p3 = ap_const_lv1_1) and (metaIn_V_TVALID = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, metaIn_V_TVALID, tmp_nbreadreq_fu_66_p3, io_acc_block_signal_op14, tmp_reg_158, metaOut0_V_TREADY, ap_block_state2_io, metaOut0_V_1_state, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((metaOut0_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((metaOut0_V_1_state = ap_const_lv2_3) and (metaOut0_V_TREADY = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state2_io) or ((tmp_reg_158 = ap_const_lv1_1) and (io_acc_block_signal_op14 = ap_const_logic_0)))) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_66_p3 = ap_const_lv1_1) and (metaIn_V_TVALID = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, metaIn_V_TVALID, tmp_nbreadreq_fu_66_p3, io_acc_block_signal_op14, tmp_reg_158, metaOut0_V_TREADY, ap_block_state2_io, metaOut0_V_1_state, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((metaOut0_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((metaOut0_V_1_state = ap_const_lv2_3) and (metaOut0_V_TREADY = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state2_io) or ((tmp_reg_158 = ap_const_lv1_1) and (io_acc_block_signal_op14 = ap_const_logic_0)))) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_66_p3 = ap_const_lv1_1) and (metaIn_V_TVALID = ap_const_logic_0)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg, metaIn_V_TVALID, tmp_nbreadreq_fu_66_p3)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_66_p3 = ap_const_lv1_1) and (metaIn_V_TVALID = ap_const_logic_0)));
    end process;


    ap_block_state2_io_assign_proc : process(tmp_reg_158, metaOut0_V_1_ack_in)
    begin
                ap_block_state2_io <= ((tmp_reg_158 = ap_const_lv1_1) and (metaOut0_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(io_acc_block_signal_op14, tmp_reg_158)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((tmp_reg_158 = ap_const_lv1_1) and (io_acc_block_signal_op14 = ap_const_logic_0));
    end process;


    ap_block_state3_io_assign_proc : process(metaOut0_V_1_ack_in, tmp_reg_158_pp0_iter1_reg)
    begin
                ap_block_state3_io <= ((tmp_reg_158_pp0_iter1_reg = ap_const_lv1_1) and (metaOut0_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(metaOut0_V_TREADY, metaOut0_V_1_state)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((metaOut0_V_1_state = ap_const_lv2_1) or ((metaOut0_V_1_state = ap_const_lv2_3) and (metaOut0_V_TREADY = ap_const_logic_0)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op14 <= (tx_udpMetaFifo_V_val_full_n and tx_udpMetaFifo_V_the_full_n and tx_udpMetaFifo_V_my_s_full_n and tx_udpMetaFifo_V_len_full_n);

    metaIn_V_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, metaIn_V_TVALID, tmp_nbreadreq_fu_66_p3, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (tmp_nbreadreq_fu_66_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            metaIn_V_TDATA_blk_n <= metaIn_V_TVALID;
        else 
            metaIn_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    metaIn_V_TREADY_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_66_p3, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_nbreadreq_fu_66_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            metaIn_V_TREADY <= ap_const_logic_1;
        else 
            metaIn_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    metaOut0_V_1_ack_in <= metaOut0_V_1_state(1);
    metaOut0_V_1_ack_out <= metaOut0_V_TREADY;

    metaOut0_V_1_data_out_assign_proc : process(metaOut0_V_1_payload_A, metaOut0_V_1_payload_B, metaOut0_V_1_sel)
    begin
        if ((metaOut0_V_1_sel = ap_const_logic_1)) then 
            metaOut0_V_1_data_out <= metaOut0_V_1_payload_B;
        else 
            metaOut0_V_1_data_out <= metaOut0_V_1_payload_A;
        end if; 
    end process;

    metaOut0_V_1_load_A <= (metaOut0_V_1_state_cmp_full and not(metaOut0_V_1_sel_wr));
    metaOut0_V_1_load_B <= (metaOut0_V_1_state_cmp_full and metaOut0_V_1_sel_wr);
    metaOut0_V_1_sel <= metaOut0_V_1_sel_rd;
    metaOut0_V_1_state_cmp_full <= '0' when (metaOut0_V_1_state = ap_const_lv2_1) else '1';

    metaOut0_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_158, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_reg_158 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            metaOut0_V_1_vld_in <= ap_const_logic_1;
        else 
            metaOut0_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    metaOut0_V_1_vld_out <= metaOut0_V_1_state(0);
    metaOut0_V_TDATA <= metaOut0_V_1_data_out;

    metaOut0_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, tmp_reg_158, metaOut0_V_1_state, tmp_reg_158_pp0_iter1_reg, ap_block_pp0_stage0)
    begin
        if ((((tmp_reg_158_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((tmp_reg_158 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            metaOut0_V_TDATA_blk_n <= metaOut0_V_1_state(1);
        else 
            metaOut0_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    metaOut0_V_TVALID <= metaOut0_V_1_state(0);
    tempLen_V_fu_144_p2 <= std_logic_vector(unsigned(tmp_length_V_load_ne_reg_172) + unsigned(ap_const_lv16_8));
    tmp_1_fu_150_p3 <= (tempLen_V_fu_144_p2 & tmp_their_address_V_reg_177);
    tmp_nbreadreq_fu_66_p3 <= (0=>(metaIn_V_TVALID), others=>'-');

    tx_udpMetaFifo_V_len_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tx_udpMetaFifo_V_len_full_n, tmp_reg_158, ap_block_pp0_stage0)
    begin
        if (((tmp_reg_158 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            tx_udpMetaFifo_V_len_blk_n <= tx_udpMetaFifo_V_len_full_n;
        else 
            tx_udpMetaFifo_V_len_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    tx_udpMetaFifo_V_len_din <= tempLen_V_fu_144_p2;

    tx_udpMetaFifo_V_len_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_158, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_reg_158 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            tx_udpMetaFifo_V_len_write <= ap_const_logic_1;
        else 
            tx_udpMetaFifo_V_len_write <= ap_const_logic_0;
        end if; 
    end process;


    tx_udpMetaFifo_V_my_s_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tx_udpMetaFifo_V_my_s_full_n, tmp_reg_158, ap_block_pp0_stage0)
    begin
        if (((tmp_reg_158 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            tx_udpMetaFifo_V_my_s_blk_n <= tx_udpMetaFifo_V_my_s_full_n;
        else 
            tx_udpMetaFifo_V_my_s_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    tx_udpMetaFifo_V_my_s_din <= tmp_my_port_V_reg_167;

    tx_udpMetaFifo_V_my_s_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_158, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_reg_158 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            tx_udpMetaFifo_V_my_s_write <= ap_const_logic_1;
        else 
            tx_udpMetaFifo_V_my_s_write <= ap_const_logic_0;
        end if; 
    end process;


    tx_udpMetaFifo_V_the_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tx_udpMetaFifo_V_the_full_n, tmp_reg_158, ap_block_pp0_stage0)
    begin
        if (((tmp_reg_158 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            tx_udpMetaFifo_V_the_blk_n <= tx_udpMetaFifo_V_the_full_n;
        else 
            tx_udpMetaFifo_V_the_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    tx_udpMetaFifo_V_the_din <= tmp_their_port_V_reg_162;

    tx_udpMetaFifo_V_the_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_158, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_reg_158 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            tx_udpMetaFifo_V_the_write <= ap_const_logic_1;
        else 
            tx_udpMetaFifo_V_the_write <= ap_const_logic_0;
        end if; 
    end process;


    tx_udpMetaFifo_V_val_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tx_udpMetaFifo_V_val_full_n, tmp_reg_158, ap_block_pp0_stage0)
    begin
        if (((tmp_reg_158 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            tx_udpMetaFifo_V_val_blk_n <= tx_udpMetaFifo_V_val_full_n;
        else 
            tx_udpMetaFifo_V_val_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    tx_udpMetaFifo_V_val_din <= ap_const_lv1_1;

    tx_udpMetaFifo_V_val_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_158, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_reg_158 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            tx_udpMetaFifo_V_val_write <= ap_const_logic_1;
        else 
            tx_udpMetaFifo_V_val_write <= ap_const_logic_0;
        end if; 
    end process;

end behav;
